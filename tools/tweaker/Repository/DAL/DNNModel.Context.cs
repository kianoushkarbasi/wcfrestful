//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Repository.DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class FanoramaStagingEntities : DbContext
    {
        public FanoramaStagingEntities()
            : base("name=FanoramaStagingEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Affiliate> Affiliates { get; set; }
        public DbSet<AnonymousUser> AnonymousUsers { get; set; }
        public DbSet<aspnet_Applications> aspnet_Applications { get; set; }
        public DbSet<aspnet_Membership> aspnet_Membership { get; set; }
        public DbSet<aspnet_Profile> aspnet_Profile { get; set; }
        public DbSet<aspnet_Roles> aspnet_Roles { get; set; }
        public DbSet<aspnet_SchemaVersions> aspnet_SchemaVersions { get; set; }
        public DbSet<aspnet_Users> aspnet_Users { get; set; }
        public DbSet<Assembly> Assemblies { get; set; }
        public DbSet<Authentication> Authentications { get; set; }
        public DbSet<Banner> Banners { get; set; }
        public DbSet<Batch> Batches { get; set; }
        public DbSet<CAT_AdvCatPermission> CAT_AdvCatPermission { get; set; }
        public DbSet<CAT_AdvCatProducts> CAT_AdvCatProducts { get; set; }
        public DbSet<CAT_AdvCats> CAT_AdvCats { get; set; }
        public DbSet<CAT_AuditLog> CAT_AuditLog { get; set; }
        public DbSet<CAT_Bids> CAT_Bids { get; set; }
        public DbSet<CAT_CartPriceRules> CAT_CartPriceRules { get; set; }
        public DbSet<CAT_Categories> CAT_Categories { get; set; }
        public DbSet<CAT_CCPaymentProcessors> CAT_CCPaymentProcessors { get; set; }
        public DbSet<CAT_Checkout> CAT_Checkout { get; set; }
        public DbSet<CAT_Comments> CAT_Comments { get; set; }
        public DbSet<CAT_CouponCodes> CAT_CouponCodes { get; set; }
        public DbSet<CAT_CreditNotes> CAT_CreditNotes { get; set; }
        public DbSet<CAT_EmailBlockList> CAT_EmailBlockList { get; set; }
        public DbSet<CAT_Feedbacks> CAT_Feedbacks { get; set; }
        public DbSet<CAT_ListItemTexts> CAT_ListItemTexts { get; set; }
        public DbSet<CAT_ListItemTypes> CAT_ListItemTypes { get; set; }
        public DbSet<CAT_MainZones> CAT_MainZones { get; set; }
        public DbSet<CAT_NativeLanguages> CAT_NativeLanguages { get; set; }
        public DbSet<CAT_NonDeliveryPeriods> CAT_NonDeliveryPeriods { get; set; }
        public DbSet<CAT_NonDespatchPeriods> CAT_NonDespatchPeriods { get; set; }
        public DbSet<CAT_Options> CAT_Options { get; set; }
        public DbSet<CAT_OrderDetails> CAT_OrderDetails { get; set; }
        public DbSet<CAT_OrderItemsLinks> CAT_OrderItemsLinks { get; set; }
        public DbSet<CAT_Orders> CAT_Orders { get; set; }
        public DbSet<CAT_OrderSerialNumbers> CAT_OrderSerialNumbers { get; set; }
        public DbSet<CAT_OrderSNCategories> CAT_OrderSNCategories { get; set; }
        public DbSet<CAT_Organization> CAT_Organization { get; set; }
        public DbSet<CAT_PaymentMethodPermission> CAT_PaymentMethodPermission { get; set; }
        public DbSet<CAT_PaymentMethods> CAT_PaymentMethods { get; set; }
        public DbSet<CAT_Periods> CAT_Periods { get; set; }
        public DbSet<CAT_PMCategories> CAT_PMCategories { get; set; }
        public DbSet<CAT_Posts> CAT_Posts { get; set; }
        public DbSet<CAT_PriceAgent> CAT_PriceAgent { get; set; }
        public DbSet<CAT_PriceHistory> CAT_PriceHistory { get; set; }
        public DbSet<CAT_PriceRules> CAT_PriceRules { get; set; }
        public DbSet<CAT_ProdOptionsSelections> CAT_ProdOptionsSelections { get; set; }
        public DbSet<CAT_ProductFiles> CAT_ProductFiles { get; set; }
        public DbSet<CAT_ProductImages> CAT_ProductImages { get; set; }
        public DbSet<CAT_ProductPermission> CAT_ProductPermission { get; set; }
        public DbSet<CAT_Products> CAT_Products { get; set; }
        public DbSet<CAT_ProductsLITypesTexts> CAT_ProductsLITypesTexts { get; set; }
        public DbSet<CAT_ProductsOptions> CAT_ProductsOptions { get; set; }
        public DbSet<CAT_ProductsSlots> CAT_ProductsSlots { get; set; }
        public DbSet<CAT_ProductsTypesSpecs> CAT_ProductsTypesSpecs { get; set; }
        public DbSet<CAT_ProductsZonesTax> CAT_ProductsZonesTax { get; set; }
        public DbSet<CAT_ProductTypes> CAT_ProductTypes { get; set; }
        public DbSet<CAT_Referrals> CAT_Referrals { get; set; }
        public DbSet<CAT_RelatedProducts> CAT_RelatedProducts { get; set; }
        public DbSet<CAT_Resources> CAT_Resources { get; set; }
        public DbSet<CAT_Reviews> CAT_Reviews { get; set; }
        public DbSet<CAT_SerialNumbers> CAT_SerialNumbers { get; set; }
        public DbSet<CAT_Settings> CAT_Settings { get; set; }
        public DbSet<CAT_ShippingRates> CAT_ShippingRates { get; set; }
        public DbSet<CAT_ShipTo> CAT_ShipTo { get; set; }
        public DbSet<CAT_ShoppingCart> CAT_ShoppingCart { get; set; }
        public DbSet<CAT_Slots> CAT_Slots { get; set; }
        public DbSet<CAT_SlotsProductTypes> CAT_SlotsProductTypes { get; set; }
        public DbSet<CAT_SNCategories> CAT_SNCategories { get; set; }
        public DbSet<CAT_Specifications> CAT_Specifications { get; set; }
        public DbSet<CAT_SRSerialNumbers> CAT_SRSerialNumbers { get; set; }
        public DbSet<CAT_SRSNCategories> CAT_SRSNCategories { get; set; }
        public DbSet<CAT_StoreCurrency> CAT_StoreCurrency { get; set; }
        public DbSet<CAT_StorePermission> CAT_StorePermission { get; set; }
        public DbSet<CAT_SubZones> CAT_SubZones { get; set; }
        public DbSet<CAT_Threads> CAT_Threads { get; set; }
        public DbSet<CAT_TypesSpecs> CAT_TypesSpecs { get; set; }
        public DbSet<CAT_TypesTexts> CAT_TypesTexts { get; set; }
        public DbSet<CAT_VendorPermission> CAT_VendorPermission { get; set; }
        public DbSet<CAT_Viewers> CAT_Viewers { get; set; }
        public DbSet<CAT_ZonesNames> CAT_ZonesNames { get; set; }
        public DbSet<Classification> Classifications { get; set; }
        public DbSet<ContentItem> ContentItems { get; set; }
        public DbSet<ContentItems_MetaData> ContentItems_MetaData { get; set; }
        public DbSet<ContentItems_Tags> ContentItems_Tags { get; set; }
        public DbSet<ContentType> ContentTypes { get; set; }
        public DbSet<Dashboard_Controls> Dashboard_Controls { get; set; }
        public DbSet<DesktopModulePermission> DesktopModulePermissions { get; set; }
        public DbSet<DesktopModule> DesktopModules { get; set; }
        public DbSet<EventLog> EventLogs { get; set; }
        public DbSet<EventLogConfig> EventLogConfigs { get; set; }
        public DbSet<EventLogType> EventLogTypes { get; set; }
        public DbSet<EventQueue> EventQueues { get; set; }
        public DbSet<FAQ> FAQs { get; set; }
        public DbSet<FAQsCategory> FAQsCategories { get; set; }
        public DbSet<File> Files { get; set; }
        public DbSet<Flyer_Flyer> Flyer_Flyer { get; set; }
        public DbSet<Flyer_HeaderImage> Flyer_HeaderImage { get; set; }
        public DbSet<Flyer_ImageEditorData> Flyer_ImageEditorData { get; set; }
        public DbSet<Flyer_Login> Flyer_Login { get; set; }
        public DbSet<Flyer_Logo> Flyer_Logo { get; set; }
        public DbSet<Flyer_LogoType> Flyer_LogoType { get; set; }
        public DbSet<Flyer_Order> Flyer_Order { get; set; }
        public DbSet<Flyer_PlaceHolder> Flyer_PlaceHolder { get; set; }
        public DbSet<Flyer_PlaceHolderLocation> Flyer_PlaceHolderLocation { get; set; }
        public DbSet<Flyer_Player> Flyer_Player { get; set; }
        public DbSet<Flyer_Preference> Flyer_Preference { get; set; }
        public DbSet<Flyer_Product> Flyer_Product { get; set; }
        public DbSet<Flyer_Rcommendation> Flyer_Rcommendation { get; set; }
        public DbSet<Flyer_Template> Flyer_Template { get; set; }
        public DbSet<Flyer_Template_Preference> Flyer_Template_Preference { get; set; }
        public DbSet<flyer_template_preference1> flyer_template_preference1 { get; set; }
        public DbSet<Flyer_TemplatePreferenceDetails> Flyer_TemplatePreferenceDetails { get; set; }
        public DbSet<Flyer_TemplateRegions> Flyer_TemplateRegions { get; set; }
        public DbSet<Flyer_TemplateType> Flyer_TemplateType { get; set; }
        public DbSet<Flyer_User> Flyer_User { get; set; }
        public DbSet<FolderMapping> FolderMappings { get; set; }
        public DbSet<FolderMappingsSetting> FolderMappingsSettings { get; set; }
        public DbSet<FolderPermission> FolderPermissions { get; set; }
        public DbSet<Folder> Folders { get; set; }
        public DbSet<HostSetting> HostSettings { get; set; }
        public DbSet<HtmlText> HtmlTexts { get; set; }
        public DbSet<HtmlTextLog> HtmlTextLogs { get; set; }
        public DbSet<HtmlTextUser> HtmlTextUsers { get; set; }
        public DbSet<LanguagePack> LanguagePacks { get; set; }
        public DbSet<Language> Languages { get; set; }
        public DbSet<Link> Links { get; set; }
        public DbSet<List> Lists { get; set; }
        public DbSet<Messaging_Messages> Messaging_Messages { get; set; }
        public DbSet<MetaData> MetaDatas { get; set; }
        public DbSet<Mobile_PreviewProfiles> Mobile_PreviewProfiles { get; set; }
        public DbSet<Mobile_RedirectionRules> Mobile_RedirectionRules { get; set; }
        public DbSet<Mobile_Redirections> Mobile_Redirections { get; set; }
        public DbSet<ModuleControl> ModuleControls { get; set; }
        public DbSet<ModuleDefinition> ModuleDefinitions { get; set; }
        public DbSet<ModulePermission> ModulePermissions { get; set; }
        public DbSet<Module> Modules { get; set; }
        public DbSet<ModuleSetting> ModuleSettings { get; set; }
        public DbSet<Package> Packages { get; set; }
        public DbSet<PackageType> PackageTypes { get; set; }
        public DbSet<Permission> Permissions { get; set; }
        public DbSet<PortalAlia> PortalAlias { get; set; }
        public DbSet<PortalDesktopModule> PortalDesktopModules { get; set; }
        public DbSet<PortalGroup> PortalGroups { get; set; }
        public DbSet<PortalLanguage> PortalLanguages { get; set; }
        public DbSet<PortalLocalization> PortalLocalizations { get; set; }
        public DbSet<Portal> Portals { get; set; }
        public DbSet<PortalSetting> PortalSettings { get; set; }
        public DbSet<Profile> Profiles { get; set; }
        public DbSet<ProfilePropertyDefinition> ProfilePropertyDefinitions { get; set; }
        public DbSet<RoleGroup> RoleGroups { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<Schedule> Schedules { get; set; }
        public DbSet<ScheduleHistory> ScheduleHistories { get; set; }
        public DbSet<ScheduleItemSetting> ScheduleItemSettings { get; set; }
        public DbSet<SearchCommonWord> SearchCommonWords { get; set; }
        public DbSet<SearchIndexer> SearchIndexers { get; set; }
        public DbSet<SearchItem> SearchItems { get; set; }
        public DbSet<SearchItemWord> SearchItemWords { get; set; }
        public DbSet<SearchItemWordPosition> SearchItemWordPositions { get; set; }
        public DbSet<SearchWord> SearchWords { get; set; }
        public DbSet<SiteLog> SiteLogs { get; set; }
        public DbSet<SkinControl> SkinControls { get; set; }
        public DbSet<SkinPackage> SkinPackages { get; set; }
        public DbSet<Skin> Skins { get; set; }
        public DbSet<SystemMessage> SystemMessages { get; set; }
        public DbSet<TAA_Adjustments> TAA_Adjustments { get; set; }
        public DbSet<TAA_Boxes> TAA_Boxes { get; set; }
        public DbSet<TAA_Colors> TAA_Colors { get; set; }
        public DbSet<TAA_Commissions> TAA_Commissions { get; set; }
        public DbSet<TAA_CouponAdjustments> TAA_CouponAdjustments { get; set; }
        public DbSet<TAA_Coupons> TAA_Coupons { get; set; }
        public DbSet<TAA_DealerMicrosites> TAA_DealerMicrosites { get; set; }
        public DbSet<TAA_DealerPriceLists> TAA_DealerPriceLists { get; set; }
        public DbSet<TAA_DiscountClasses> TAA_DiscountClasses { get; set; }
        public DbSet<TAA_Emails> TAA_Emails { get; set; }
        public DbSet<TAA_EmailTemplates> TAA_EmailTemplates { get; set; }
        public DbSet<TAA_FanID> TAA_FanID { get; set; }
        public DbSet<TAA_ImageUpload> TAA_ImageUpload { get; set; }
        public DbSet<TAA_Microsite> TAA_Microsite { get; set; }
        public DbSet<TAA_MicrositeLogos> TAA_MicrositeLogos { get; set; }
        public DbSet<TAA_Notifications> TAA_Notifications { get; set; }
        public DbSet<TAA_OrdersAdjustments> TAA_OrdersAdjustments { get; set; }
        public DbSet<TAA_PantSizes> TAA_PantSizes { get; set; }
        public DbSet<TAA_Parameters> TAA_Parameters { get; set; }
        public DbSet<TAA_PaymentTerms> TAA_PaymentTerms { get; set; }
        public DbSet<TAA_ProductCategories> TAA_ProductCategories { get; set; }
        public DbSet<TAA_ProductionTimes> TAA_ProductionTimes { get; set; }
        public DbSet<TAA_Products> TAA_Products { get; set; }
        public DbSet<TAA_ProductSizes> TAA_ProductSizes { get; set; }
        public DbSet<TAA_RecentActivity> TAA_RecentActivity { get; set; }
        public DbSet<TAA_RoleCallSheets> TAA_RoleCallSheets { get; set; }
        public DbSet<TAA_RoleCards> TAA_RoleCards { get; set; }
        public DbSet<TAA_ShippingBoxes> TAA_ShippingBoxes { get; set; }
        public DbSet<TAA_ShirtSizes> TAA_ShirtSizes { get; set; }
        public DbSet<TAA_ShoppingCart> TAA_ShoppingCart { get; set; }
        public DbSet<TAA_ShoppingCartAdjustments> TAA_ShoppingCartAdjustments { get; set; }
        public DbSet<TAA_ShoppingCartSizes> TAA_ShoppingCartSizes { get; set; }
        public DbSet<TAA_SizeGroups> TAA_SizeGroups { get; set; }
        public DbSet<TAA_Sizes> TAA_Sizes { get; set; }
        public DbSet<TAA_Sports> TAA_Sports { get; set; }
        public DbSet<TabModule> TabModules { get; set; }
        public DbSet<TabModuleSetting> TabModuleSettings { get; set; }
        public DbSet<TabPermission> TabPermissions { get; set; }
        public DbSet<Tab> Tabs { get; set; }
        public DbSet<TabSetting> TabSettings { get; set; }
        public DbSet<Taxonomy_ScopeTypes> Taxonomy_ScopeTypes { get; set; }
        public DbSet<Taxonomy_Terms> Taxonomy_Terms { get; set; }
        public DbSet<Taxonomy_Vocabularies> Taxonomy_Vocabularies { get; set; }
        public DbSet<Taxonomy_VocabularyTypes> Taxonomy_VocabularyTypes { get; set; }
        public DbSet<Transaction> Transactions { get; set; }
        public DbSet<UrlLog> UrlLogs { get; set; }
        public DbSet<Url> Urls { get; set; }
        public DbSet<UrlTracking> UrlTrackings { get; set; }
        public DbSet<UserAuthentication> UserAuthentications { get; set; }
        public DbSet<UserDefinedData> UserDefinedDatas { get; set; }
        public DbSet<UserDefinedField> UserDefinedFields { get; set; }
        public DbSet<UserDefinedFieldSetting> UserDefinedFieldSettings { get; set; }
        public DbSet<UserDefinedRow> UserDefinedRows { get; set; }
        public DbSet<UserPortal> UserPortals { get; set; }
        public DbSet<UserProfile> UserProfiles { get; set; }
        public DbSet<UserRole> UserRoles { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<UsersOnline> UsersOnlines { get; set; }
        public DbSet<VendorClassification> VendorClassifications { get; set; }
        public DbSet<Vendor> Vendors { get; set; }
        public DbSet<Version> Versions { get; set; }
        public DbSet<WebServer> WebServers { get; set; }
        public DbSet<Workflow> Workflows { get; set; }
        public DbSet<WorkflowState> WorkflowStates { get; set; }
        public DbSet<CAT_vw_OrderDetailsRollCall> CAT_vw_OrderDetailsRollCall { get; set; }
        public DbSet<CAT_vw_PaymentMethodPermissions> CAT_vw_PaymentMethodPermissions { get; set; }
        public DbSet<CAT_vw_ProductPermissions> CAT_vw_ProductPermissions { get; set; }
        public DbSet<CAT_vw_ShoppingCartProduct> CAT_vw_ShoppingCartProduct { get; set; }
        public DbSet<CAT_vw_ShoppingCartRollCall> CAT_vw_ShoppingCartRollCall { get; set; }
        public DbSet<TAA_vw_OrderDetailsRollCall> TAA_vw_OrderDetailsRollCall { get; set; }
        public DbSet<TAA_vw_ProductsInOrders> TAA_vw_ProductsInOrders { get; set; }
        public DbSet<TAA_vw_ShoppingCartRollCall> TAA_vw_ShoppingCartRollCall { get; set; }
        public DbSet<TAA_vw_UserAndProfiles> TAA_vw_UserAndProfiles { get; set; }
        public DbSet<vw_aspnet_Applications> vw_aspnet_Applications { get; set; }
        public DbSet<vw_aspnet_MembershipUsers> vw_aspnet_MembershipUsers { get; set; }
        public DbSet<vw_aspnet_Profiles> vw_aspnet_Profiles { get; set; }
        public DbSet<vw_aspnet_Roles> vw_aspnet_Roles { get; set; }
        public DbSet<vw_aspnet_Users> vw_aspnet_Users { get; set; }
        public DbSet<vw_aspnet_UsersInRoles> vw_aspnet_UsersInRoles { get; set; }
        public DbSet<vw_DesktopModulePermissions> vw_DesktopModulePermissions { get; set; }
        public DbSet<vw_DesktopModules> vw_DesktopModules { get; set; }
        public DbSet<vw_FolderPermissions> vw_FolderPermissions { get; set; }
        public DbSet<vw_Lists> vw_Lists { get; set; }
        public DbSet<vw_ModulePermissions> vw_ModulePermissions { get; set; }
        public DbSet<vw_Modules> vw_Modules { get; set; }
        public DbSet<vw_Portals> vw_Portals { get; set; }
        public DbSet<vw_PortalsDefaultLanguage> vw_PortalsDefaultLanguage { get; set; }
        public DbSet<vw_SearchItems> vw_SearchItems { get; set; }
        public DbSet<vw_TabModules> vw_TabModules { get; set; }
        public DbSet<vw_TabPermissions> vw_TabPermissions { get; set; }
        public DbSet<vw_Tabs> vw_Tabs { get; set; }
        public DbSet<vw_UserRoles> vw_UserRoles { get; set; }
        public DbSet<vw_Users> vw_Users { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> AddAffiliate(Nullable<int> vendorId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<double> cPC, Nullable<double> cPA)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cPCParameter = cPC.HasValue ?
                new ObjectParameter("CPC", cPC) :
                new ObjectParameter("CPC", typeof(double));
    
            var cPAParameter = cPA.HasValue ?
                new ObjectParameter("CPA", cPA) :
                new ObjectParameter("CPA", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddAffiliate", vendorIdParameter, startDateParameter, endDateParameter, cPCParameter, cPAParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddAuthentication(Nullable<int> packageID, string authenticationType, Nullable<bool> isEnabled, string settingsControlSrc, string loginControlSrc, string logoffControlSrc, Nullable<int> createdByUserID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var authenticationTypeParameter = authenticationType != null ?
                new ObjectParameter("AuthenticationType", authenticationType) :
                new ObjectParameter("AuthenticationType", typeof(string));
    
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            var settingsControlSrcParameter = settingsControlSrc != null ?
                new ObjectParameter("SettingsControlSrc", settingsControlSrc) :
                new ObjectParameter("SettingsControlSrc", typeof(string));
    
            var loginControlSrcParameter = loginControlSrc != null ?
                new ObjectParameter("LoginControlSrc", loginControlSrc) :
                new ObjectParameter("LoginControlSrc", typeof(string));
    
            var logoffControlSrcParameter = logoffControlSrc != null ?
                new ObjectParameter("LogoffControlSrc", logoffControlSrc) :
                new ObjectParameter("LogoffControlSrc", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddAuthentication", packageIDParameter, authenticationTypeParameter, isEnabledParameter, settingsControlSrcParameter, loginControlSrcParameter, logoffControlSrcParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddBanner(string bannerName, Nullable<int> vendorId, string imageFile, string uRL, Nullable<int> impressions, Nullable<double> cPM, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string userName, Nullable<int> bannerTypeId, string description, string groupName, Nullable<bool> criteria, Nullable<int> width, Nullable<int> height)
        {
            var bannerNameParameter = bannerName != null ?
                new ObjectParameter("BannerName", bannerName) :
                new ObjectParameter("BannerName", typeof(string));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var imageFileParameter = imageFile != null ?
                new ObjectParameter("ImageFile", imageFile) :
                new ObjectParameter("ImageFile", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var impressionsParameter = impressions.HasValue ?
                new ObjectParameter("Impressions", impressions) :
                new ObjectParameter("Impressions", typeof(int));
    
            var cPMParameter = cPM.HasValue ?
                new ObjectParameter("CPM", cPM) :
                new ObjectParameter("CPM", typeof(double));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var bannerTypeIdParameter = bannerTypeId.HasValue ?
                new ObjectParameter("BannerTypeId", bannerTypeId) :
                new ObjectParameter("BannerTypeId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var criteriaParameter = criteria.HasValue ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddBanner", bannerNameParameter, vendorIdParameter, imageFileParameter, uRLParameter, impressionsParameter, cPMParameter, startDateParameter, endDateParameter, userNameParameter, bannerTypeIdParameter, descriptionParameter, groupNameParameter, criteriaParameter, widthParameter, heightParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddContentItem(string content, Nullable<int> contentTypeID, Nullable<int> tabID, Nullable<int> moduleID, string contentKey, Nullable<bool> indexed, Nullable<int> createdByUserID)
        {
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var contentKeyParameter = contentKey != null ?
                new ObjectParameter("ContentKey", contentKey) :
                new ObjectParameter("ContentKey", typeof(string));
    
            var indexedParameter = indexed.HasValue ?
                new ObjectParameter("Indexed", indexed) :
                new ObjectParameter("Indexed", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddContentItem", contentParameter, contentTypeIDParameter, tabIDParameter, moduleIDParameter, contentKeyParameter, indexedParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddContentType(string contentType)
        {
            var contentTypeParameter = contentType != null ?
                new ObjectParameter("ContentType", contentType) :
                new ObjectParameter("ContentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddContentType", contentTypeParameter);
        }
    
        public virtual int AddDefaultFolderTypes(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDefaultFolderTypes", portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddDesktopModule(Nullable<int> packageID, string moduleName, string folderName, string friendlyName, string description, string version, Nullable<bool> isPremium, Nullable<bool> isAdmin, string businessController, Nullable<int> supportedFeatures, string compatibleVersions, string dependencies, string permissions, Nullable<int> contentItemId, Nullable<int> createdByUserID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var isPremiumParameter = isPremium.HasValue ?
                new ObjectParameter("IsPremium", isPremium) :
                new ObjectParameter("IsPremium", typeof(bool));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var businessControllerParameter = businessController != null ?
                new ObjectParameter("BusinessController", businessController) :
                new ObjectParameter("BusinessController", typeof(string));
    
            var supportedFeaturesParameter = supportedFeatures.HasValue ?
                new ObjectParameter("SupportedFeatures", supportedFeatures) :
                new ObjectParameter("SupportedFeatures", typeof(int));
    
            var compatibleVersionsParameter = compatibleVersions != null ?
                new ObjectParameter("CompatibleVersions", compatibleVersions) :
                new ObjectParameter("CompatibleVersions", typeof(string));
    
            var dependenciesParameter = dependencies != null ?
                new ObjectParameter("Dependencies", dependencies) :
                new ObjectParameter("Dependencies", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            var contentItemIdParameter = contentItemId.HasValue ?
                new ObjectParameter("ContentItemId", contentItemId) :
                new ObjectParameter("ContentItemId", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddDesktopModule", packageIDParameter, moduleNameParameter, folderNameParameter, friendlyNameParameter, descriptionParameter, versionParameter, isPremiumParameter, isAdminParameter, businessControllerParameter, supportedFeaturesParameter, compatibleVersionsParameter, dependenciesParameter, permissionsParameter, contentItemIdParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddDesktopModulePermission(Nullable<int> portalDesktopModuleID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> createdByUserID)
        {
            var portalDesktopModuleIDParameter = portalDesktopModuleID.HasValue ?
                new ObjectParameter("PortalDesktopModuleID", portalDesktopModuleID) :
                new ObjectParameter("PortalDesktopModuleID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddDesktopModulePermission", portalDesktopModuleIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, createdByUserIDParameter);
        }
    
        public virtual int AddEventLog(string logGUID, string logTypeKey, Nullable<int> logUserID, string logUserName, Nullable<int> logPortalID, string logPortalName, Nullable<System.DateTime> logCreateDate, string logServerName, string logProperties, Nullable<int> logConfigID)
        {
            var logGUIDParameter = logGUID != null ?
                new ObjectParameter("LogGUID", logGUID) :
                new ObjectParameter("LogGUID", typeof(string));
    
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            var logUserIDParameter = logUserID.HasValue ?
                new ObjectParameter("LogUserID", logUserID) :
                new ObjectParameter("LogUserID", typeof(int));
    
            var logUserNameParameter = logUserName != null ?
                new ObjectParameter("LogUserName", logUserName) :
                new ObjectParameter("LogUserName", typeof(string));
    
            var logPortalIDParameter = logPortalID.HasValue ?
                new ObjectParameter("LogPortalID", logPortalID) :
                new ObjectParameter("LogPortalID", typeof(int));
    
            var logPortalNameParameter = logPortalName != null ?
                new ObjectParameter("LogPortalName", logPortalName) :
                new ObjectParameter("LogPortalName", typeof(string));
    
            var logCreateDateParameter = logCreateDate.HasValue ?
                new ObjectParameter("LogCreateDate", logCreateDate) :
                new ObjectParameter("LogCreateDate", typeof(System.DateTime));
    
            var logServerNameParameter = logServerName != null ?
                new ObjectParameter("LogServerName", logServerName) :
                new ObjectParameter("LogServerName", typeof(string));
    
            var logPropertiesParameter = logProperties != null ?
                new ObjectParameter("LogProperties", logProperties) :
                new ObjectParameter("LogProperties", typeof(string));
    
            var logConfigIDParameter = logConfigID.HasValue ?
                new ObjectParameter("LogConfigID", logConfigID) :
                new ObjectParameter("LogConfigID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEventLog", logGUIDParameter, logTypeKeyParameter, logUserIDParameter, logUserNameParameter, logPortalIDParameter, logPortalNameParameter, logCreateDateParameter, logServerNameParameter, logPropertiesParameter, logConfigIDParameter);
        }
    
        public virtual int AddEventLogConfig(string logTypeKey, Nullable<int> logTypePortalID, Nullable<bool> loggingIsActive, Nullable<int> keepMostRecent, Nullable<bool> emailNotificationIsActive, Nullable<int> notificationThreshold, Nullable<int> notificationThresholdTime, Nullable<int> notificationThresholdTimeType, string mailFromAddress, string mailToAddress)
        {
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            var logTypePortalIDParameter = logTypePortalID.HasValue ?
                new ObjectParameter("LogTypePortalID", logTypePortalID) :
                new ObjectParameter("LogTypePortalID", typeof(int));
    
            var loggingIsActiveParameter = loggingIsActive.HasValue ?
                new ObjectParameter("LoggingIsActive", loggingIsActive) :
                new ObjectParameter("LoggingIsActive", typeof(bool));
    
            var keepMostRecentParameter = keepMostRecent.HasValue ?
                new ObjectParameter("KeepMostRecent", keepMostRecent) :
                new ObjectParameter("KeepMostRecent", typeof(int));
    
            var emailNotificationIsActiveParameter = emailNotificationIsActive.HasValue ?
                new ObjectParameter("EmailNotificationIsActive", emailNotificationIsActive) :
                new ObjectParameter("EmailNotificationIsActive", typeof(bool));
    
            var notificationThresholdParameter = notificationThreshold.HasValue ?
                new ObjectParameter("NotificationThreshold", notificationThreshold) :
                new ObjectParameter("NotificationThreshold", typeof(int));
    
            var notificationThresholdTimeParameter = notificationThresholdTime.HasValue ?
                new ObjectParameter("NotificationThresholdTime", notificationThresholdTime) :
                new ObjectParameter("NotificationThresholdTime", typeof(int));
    
            var notificationThresholdTimeTypeParameter = notificationThresholdTimeType.HasValue ?
                new ObjectParameter("NotificationThresholdTimeType", notificationThresholdTimeType) :
                new ObjectParameter("NotificationThresholdTimeType", typeof(int));
    
            var mailFromAddressParameter = mailFromAddress != null ?
                new ObjectParameter("MailFromAddress", mailFromAddress) :
                new ObjectParameter("MailFromAddress", typeof(string));
    
            var mailToAddressParameter = mailToAddress != null ?
                new ObjectParameter("MailToAddress", mailToAddress) :
                new ObjectParameter("MailToAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEventLogConfig", logTypeKeyParameter, logTypePortalIDParameter, loggingIsActiveParameter, keepMostRecentParameter, emailNotificationIsActiveParameter, notificationThresholdParameter, notificationThresholdTimeParameter, notificationThresholdTimeTypeParameter, mailFromAddressParameter, mailToAddressParameter);
        }
    
        public virtual int AddEventLogType(string logTypeKey, string logTypeFriendlyName, string logTypeDescription, string logTypeOwner, string logTypeCSSClass)
        {
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            var logTypeFriendlyNameParameter = logTypeFriendlyName != null ?
                new ObjectParameter("LogTypeFriendlyName", logTypeFriendlyName) :
                new ObjectParameter("LogTypeFriendlyName", typeof(string));
    
            var logTypeDescriptionParameter = logTypeDescription != null ?
                new ObjectParameter("LogTypeDescription", logTypeDescription) :
                new ObjectParameter("LogTypeDescription", typeof(string));
    
            var logTypeOwnerParameter = logTypeOwner != null ?
                new ObjectParameter("LogTypeOwner", logTypeOwner) :
                new ObjectParameter("LogTypeOwner", typeof(string));
    
            var logTypeCSSClassParameter = logTypeCSSClass != null ?
                new ObjectParameter("LogTypeCSSClass", logTypeCSSClass) :
                new ObjectParameter("LogTypeCSSClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddEventLogType", logTypeKeyParameter, logTypeFriendlyNameParameter, logTypeDescriptionParameter, logTypeOwnerParameter, logTypeCSSClassParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddEventMessage(string eventName, Nullable<int> priority, string processorType, string processorCommand, string body, string sender, string subscriber, string authorizedRoles, string exceptionMessage, Nullable<System.DateTime> sentDate, Nullable<System.DateTime> expirationDate, string attributes)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var processorTypeParameter = processorType != null ?
                new ObjectParameter("ProcessorType", processorType) :
                new ObjectParameter("ProcessorType", typeof(string));
    
            var processorCommandParameter = processorCommand != null ?
                new ObjectParameter("ProcessorCommand", processorCommand) :
                new ObjectParameter("ProcessorCommand", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var senderParameter = sender != null ?
                new ObjectParameter("Sender", sender) :
                new ObjectParameter("Sender", typeof(string));
    
            var subscriberParameter = subscriber != null ?
                new ObjectParameter("Subscriber", subscriber) :
                new ObjectParameter("Subscriber", typeof(string));
    
            var authorizedRolesParameter = authorizedRoles != null ?
                new ObjectParameter("AuthorizedRoles", authorizedRoles) :
                new ObjectParameter("AuthorizedRoles", typeof(string));
    
            var exceptionMessageParameter = exceptionMessage != null ?
                new ObjectParameter("ExceptionMessage", exceptionMessage) :
                new ObjectParameter("ExceptionMessage", typeof(string));
    
            var sentDateParameter = sentDate.HasValue ?
                new ObjectParameter("SentDate", sentDate) :
                new ObjectParameter("SentDate", typeof(System.DateTime));
    
            var expirationDateParameter = expirationDate.HasValue ?
                new ObjectParameter("ExpirationDate", expirationDate) :
                new ObjectParameter("ExpirationDate", typeof(System.DateTime));
    
            var attributesParameter = attributes != null ?
                new ObjectParameter("Attributes", attributes) :
                new ObjectParameter("Attributes", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddEventMessage", eventNameParameter, priorityParameter, processorTypeParameter, processorCommandParameter, bodyParameter, senderParameter, subscriberParameter, authorizedRolesParameter, exceptionMessageParameter, sentDateParameter, expirationDateParameter, attributesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddFile(Nullable<int> portalId, Nullable<System.Guid> uniqueId, Nullable<System.Guid> versionGuid, string fileName, string extension, Nullable<int> size, Nullable<int> width, Nullable<int> height, string contentType, string folder, Nullable<int> folderID, Nullable<int> createdByUserID, string hash)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var uniqueIdParameter = uniqueId.HasValue ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(System.Guid));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var contentTypeParameter = contentType != null ?
                new ObjectParameter("ContentType", contentType) :
                new ObjectParameter("ContentType", typeof(string));
    
            var folderParameter = folder != null ?
                new ObjectParameter("Folder", folder) :
                new ObjectParameter("Folder", typeof(string));
    
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            var hashParameter = hash != null ?
                new ObjectParameter("Hash", hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddFile", portalIdParameter, uniqueIdParameter, versionGuidParameter, fileNameParameter, extensionParameter, sizeParameter, widthParameter, heightParameter, contentTypeParameter, folderParameter, folderIDParameter, createdByUserIDParameter, hashParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddFolder(Nullable<int> portalID, Nullable<System.Guid> uniqueId, Nullable<System.Guid> versionGuid, string folderPath, Nullable<int> storageLocation, Nullable<bool> isProtected, Nullable<bool> isCached, Nullable<System.DateTime> lastUpdated, Nullable<int> createdByUserID, Nullable<int> folderMappingID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var uniqueIdParameter = uniqueId.HasValue ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(System.Guid));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var folderPathParameter = folderPath != null ?
                new ObjectParameter("FolderPath", folderPath) :
                new ObjectParameter("FolderPath", typeof(string));
    
            var storageLocationParameter = storageLocation.HasValue ?
                new ObjectParameter("StorageLocation", storageLocation) :
                new ObjectParameter("StorageLocation", typeof(int));
    
            var isProtectedParameter = isProtected.HasValue ?
                new ObjectParameter("IsProtected", isProtected) :
                new ObjectParameter("IsProtected", typeof(bool));
    
            var isCachedParameter = isCached.HasValue ?
                new ObjectParameter("IsCached", isCached) :
                new ObjectParameter("IsCached", typeof(bool));
    
            var lastUpdatedParameter = lastUpdated.HasValue ?
                new ObjectParameter("LastUpdated", lastUpdated) :
                new ObjectParameter("LastUpdated", typeof(System.DateTime));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddFolder", portalIDParameter, uniqueIdParameter, versionGuidParameter, folderPathParameter, storageLocationParameter, isProtectedParameter, isCachedParameter, lastUpdatedParameter, createdByUserIDParameter, folderMappingIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddFolderMapping(Nullable<int> portalID, string mappingName, string folderProviderType, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var mappingNameParameter = mappingName != null ?
                new ObjectParameter("MappingName", mappingName) :
                new ObjectParameter("MappingName", typeof(string));
    
            var folderProviderTypeParameter = folderProviderType != null ?
                new ObjectParameter("FolderProviderType", folderProviderType) :
                new ObjectParameter("FolderProviderType", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddFolderMapping", portalIDParameter, mappingNameParameter, folderProviderTypeParameter, createdByUserIDParameter);
        }
    
        public virtual int AddFolderMappingsSetting(Nullable<int> folderMappingID, string settingName, string settingValue, Nullable<int> createdByUserID)
        {
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddFolderMappingsSetting", folderMappingIDParameter, settingNameParameter, settingValueParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddFolderPermission(Nullable<int> folderID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> createdByUserID)
        {
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddFolderPermission", folderIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddHeirarchicalTerm(Nullable<int> vocabularyID, Nullable<int> parentTermID, string name, string description, Nullable<int> weight, Nullable<int> createdByUserID)
        {
            var vocabularyIDParameter = vocabularyID.HasValue ?
                new ObjectParameter("VocabularyID", vocabularyID) :
                new ObjectParameter("VocabularyID", typeof(int));
    
            var parentTermIDParameter = parentTermID.HasValue ?
                new ObjectParameter("ParentTermID", parentTermID) :
                new ObjectParameter("ParentTermID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddHeirarchicalTerm", vocabularyIDParameter, parentTermIDParameter, nameParameter, descriptionParameter, weightParameter, createdByUserIDParameter);
        }
    
        public virtual int AddHostSetting(string settingName, string settingValue, Nullable<bool> settingIsSecure, Nullable<int> createdByUserID)
        {
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var settingIsSecureParameter = settingIsSecure.HasValue ?
                new ObjectParameter("SettingIsSecure", settingIsSecure) :
                new ObjectParameter("SettingIsSecure", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHostSetting", settingNameParameter, settingValueParameter, settingIsSecureParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddHtmlText(Nullable<int> moduleID, string content, string summary, Nullable<int> stateID, Nullable<bool> isPublished, Nullable<int> userID, Nullable<int> history)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var historyParameter = history.HasValue ?
                new ObjectParameter("History", history) :
                new ObjectParameter("History", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddHtmlText", moduleIDParameter, contentParameter, summaryParameter, stateIDParameter, isPublishedParameter, userIDParameter, historyParameter);
        }
    
        public virtual int AddHtmlTextLog(Nullable<int> itemID, Nullable<int> stateID, string comment, Nullable<bool> approved, Nullable<int> userID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHtmlTextLog", itemIDParameter, stateIDParameter, commentParameter, approvedParameter, userIDParameter);
        }
    
        public virtual int AddHtmlTextUser(Nullable<int> itemID, Nullable<int> stateID, Nullable<int> moduleID, Nullable<int> tabID, Nullable<int> userID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddHtmlTextUser", itemIDParameter, stateIDParameter, moduleIDParameter, tabIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddLanguage(string cultureCode, string cultureName, string fallbackCulture, Nullable<int> createdByUserID)
        {
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            var cultureNameParameter = cultureName != null ?
                new ObjectParameter("CultureName", cultureName) :
                new ObjectParameter("CultureName", typeof(string));
    
            var fallbackCultureParameter = fallbackCulture != null ?
                new ObjectParameter("FallbackCulture", fallbackCulture) :
                new ObjectParameter("FallbackCulture", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddLanguage", cultureCodeParameter, cultureNameParameter, fallbackCultureParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddLanguagePack(Nullable<int> packageID, Nullable<int> languageID, Nullable<int> dependentPackageID, Nullable<int> createdByUserID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var languageIDParameter = languageID.HasValue ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(int));
    
            var dependentPackageIDParameter = dependentPackageID.HasValue ?
                new ObjectParameter("DependentPackageID", dependentPackageID) :
                new ObjectParameter("DependentPackageID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddLanguagePack", packageIDParameter, languageIDParameter, dependentPackageIDParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddListEntry(string listName, string value, string text, Nullable<int> parentID, Nullable<int> level, Nullable<bool> enableSortOrder, Nullable<int> definitionID, string description, Nullable<int> portalID, Nullable<bool> systemList, Nullable<int> createdByUserID)
        {
            var listNameParameter = listName != null ?
                new ObjectParameter("ListName", listName) :
                new ObjectParameter("ListName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var parentIDParameter = parentID.HasValue ?
                new ObjectParameter("ParentID", parentID) :
                new ObjectParameter("ParentID", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var enableSortOrderParameter = enableSortOrder.HasValue ?
                new ObjectParameter("EnableSortOrder", enableSortOrder) :
                new ObjectParameter("EnableSortOrder", typeof(bool));
    
            var definitionIDParameter = definitionID.HasValue ?
                new ObjectParameter("DefinitionID", definitionID) :
                new ObjectParameter("DefinitionID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var systemListParameter = systemList.HasValue ?
                new ObjectParameter("SystemList", systemList) :
                new ObjectParameter("SystemList", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddListEntry", listNameParameter, valueParameter, textParameter, parentIDParameter, levelParameter, enableSortOrderParameter, definitionIDParameter, descriptionParameter, portalIDParameter, systemListParameter, createdByUserIDParameter);
        }
    
        public virtual int AddMetaData(Nullable<int> contentItemID, string name, string value)
        {
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMetaData", contentItemIDParameter, nameParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddModule(Nullable<int> contentItemID, Nullable<int> portalID, Nullable<int> moduleDefId, Nullable<bool> allTabs, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> inheritViewPermissions, Nullable<bool> isDeleted, Nullable<int> createdByUserID)
        {
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var moduleDefIdParameter = moduleDefId.HasValue ?
                new ObjectParameter("ModuleDefId", moduleDefId) :
                new ObjectParameter("ModuleDefId", typeof(int));
    
            var allTabsParameter = allTabs.HasValue ?
                new ObjectParameter("AllTabs", allTabs) :
                new ObjectParameter("AllTabs", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var inheritViewPermissionsParameter = inheritViewPermissions.HasValue ?
                new ObjectParameter("InheritViewPermissions", inheritViewPermissions) :
                new ObjectParameter("InheritViewPermissions", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddModule", contentItemIDParameter, portalIDParameter, moduleDefIdParameter, allTabsParameter, startDateParameter, endDateParameter, inheritViewPermissionsParameter, isDeletedParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddModuleControl(Nullable<int> moduleDefID, string controlKey, string controlTitle, string controlSrc, string iconFile, Nullable<int> controlType, Nullable<int> viewOrder, string helpUrl, Nullable<bool> supportsPartialRendering, Nullable<bool> supportsPopUps, Nullable<int> createdByUserID)
        {
            var moduleDefIDParameter = moduleDefID.HasValue ?
                new ObjectParameter("ModuleDefID", moduleDefID) :
                new ObjectParameter("ModuleDefID", typeof(int));
    
            var controlKeyParameter = controlKey != null ?
                new ObjectParameter("ControlKey", controlKey) :
                new ObjectParameter("ControlKey", typeof(string));
    
            var controlTitleParameter = controlTitle != null ?
                new ObjectParameter("ControlTitle", controlTitle) :
                new ObjectParameter("ControlTitle", typeof(string));
    
            var controlSrcParameter = controlSrc != null ?
                new ObjectParameter("ControlSrc", controlSrc) :
                new ObjectParameter("ControlSrc", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var controlTypeParameter = controlType.HasValue ?
                new ObjectParameter("ControlType", controlType) :
                new ObjectParameter("ControlType", typeof(int));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var helpUrlParameter = helpUrl != null ?
                new ObjectParameter("HelpUrl", helpUrl) :
                new ObjectParameter("HelpUrl", typeof(string));
    
            var supportsPartialRenderingParameter = supportsPartialRendering.HasValue ?
                new ObjectParameter("SupportsPartialRendering", supportsPartialRendering) :
                new ObjectParameter("SupportsPartialRendering", typeof(bool));
    
            var supportsPopUpsParameter = supportsPopUps.HasValue ?
                new ObjectParameter("SupportsPopUps", supportsPopUps) :
                new ObjectParameter("SupportsPopUps", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddModuleControl", moduleDefIDParameter, controlKeyParameter, controlTitleParameter, controlSrcParameter, iconFileParameter, controlTypeParameter, viewOrderParameter, helpUrlParameter, supportsPartialRenderingParameter, supportsPopUpsParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddModuleDefinition(Nullable<int> desktopModuleId, string friendlyName, Nullable<int> defaultCacheTime, Nullable<int> createdByUserID)
        {
            var desktopModuleIdParameter = desktopModuleId.HasValue ?
                new ObjectParameter("DesktopModuleId", desktopModuleId) :
                new ObjectParameter("DesktopModuleId", typeof(int));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var defaultCacheTimeParameter = defaultCacheTime.HasValue ?
                new ObjectParameter("DefaultCacheTime", defaultCacheTime) :
                new ObjectParameter("DefaultCacheTime", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddModuleDefinition", desktopModuleIdParameter, friendlyNameParameter, defaultCacheTimeParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddModulePermission(Nullable<int> moduleID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> createdByUserID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddModulePermission", moduleIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, createdByUserIDParameter);
        }
    
        public virtual int AddModuleSetting(Nullable<int> moduleId, string settingName, string settingValue, Nullable<int> createdByUserID)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddModuleSetting", moduleIdParameter, settingNameParameter, settingValueParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddPackage(Nullable<int> portalID, string name, string friendlyName, string description, string packageType, string version, string license, string manifest, string owner, string organization, string url, string email, string releaseNotes, Nullable<bool> isSystemPackage, Nullable<int> createdByUserID, string folderName, string iconFile)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var packageTypeParameter = packageType != null ?
                new ObjectParameter("PackageType", packageType) :
                new ObjectParameter("PackageType", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var licenseParameter = license != null ?
                new ObjectParameter("License", license) :
                new ObjectParameter("License", typeof(string));
    
            var manifestParameter = manifest != null ?
                new ObjectParameter("Manifest", manifest) :
                new ObjectParameter("Manifest", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var releaseNotesParameter = releaseNotes != null ?
                new ObjectParameter("ReleaseNotes", releaseNotes) :
                new ObjectParameter("ReleaseNotes", typeof(string));
    
            var isSystemPackageParameter = isSystemPackage.HasValue ?
                new ObjectParameter("IsSystemPackage", isSystemPackage) :
                new ObjectParameter("IsSystemPackage", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddPackage", portalIDParameter, nameParameter, friendlyNameParameter, descriptionParameter, packageTypeParameter, versionParameter, licenseParameter, manifestParameter, ownerParameter, organizationParameter, urlParameter, emailParameter, releaseNotesParameter, isSystemPackageParameter, createdByUserIDParameter, folderNameParameter, iconFileParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddPermission(Nullable<int> moduleDefID, string permissionCode, string permissionKey, string permissionName, Nullable<int> createdByUserID)
        {
            var moduleDefIDParameter = moduleDefID.HasValue ?
                new ObjectParameter("ModuleDefID", moduleDefID) :
                new ObjectParameter("ModuleDefID", typeof(int));
    
            var permissionCodeParameter = permissionCode != null ?
                new ObjectParameter("PermissionCode", permissionCode) :
                new ObjectParameter("PermissionCode", typeof(string));
    
            var permissionKeyParameter = permissionKey != null ?
                new ObjectParameter("PermissionKey", permissionKey) :
                new ObjectParameter("PermissionKey", typeof(string));
    
            var permissionNameParameter = permissionName != null ?
                new ObjectParameter("PermissionName", permissionName) :
                new ObjectParameter("PermissionName", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddPermission", moduleDefIDParameter, permissionCodeParameter, permissionKeyParameter, permissionNameParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddPortalAlias(Nullable<int> portalID, string hTTPAlias, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var hTTPAliasParameter = hTTPAlias != null ?
                new ObjectParameter("HTTPAlias", hTTPAlias) :
                new ObjectParameter("HTTPAlias", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddPortalAlias", portalIDParameter, hTTPAliasParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddPortalDesktopModule(Nullable<int> portalID, Nullable<int> desktopModuleId, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var desktopModuleIdParameter = desktopModuleId.HasValue ?
                new ObjectParameter("DesktopModuleId", desktopModuleId) :
                new ObjectParameter("DesktopModuleId", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddPortalDesktopModule", portalIDParameter, desktopModuleIdParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddPortalGroup(string portalGroupName, string portalGroupDescription, Nullable<int> masterPortalID, string authenticationDomain, Nullable<int> createdByUserID)
        {
            var portalGroupNameParameter = portalGroupName != null ?
                new ObjectParameter("PortalGroupName", portalGroupName) :
                new ObjectParameter("PortalGroupName", typeof(string));
    
            var portalGroupDescriptionParameter = portalGroupDescription != null ?
                new ObjectParameter("PortalGroupDescription", portalGroupDescription) :
                new ObjectParameter("PortalGroupDescription", typeof(string));
    
            var masterPortalIDParameter = masterPortalID.HasValue ?
                new ObjectParameter("MasterPortalID", masterPortalID) :
                new ObjectParameter("MasterPortalID", typeof(int));
    
            var authenticationDomainParameter = authenticationDomain != null ?
                new ObjectParameter("AuthenticationDomain", authenticationDomain) :
                new ObjectParameter("AuthenticationDomain", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddPortalGroup", portalGroupNameParameter, portalGroupDescriptionParameter, masterPortalIDParameter, authenticationDomainParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddPortalInfo(string portalName, string currency, Nullable<System.DateTime> expiryDate, Nullable<decimal> hostFee, Nullable<int> hostSpace, Nullable<int> pageQuota, Nullable<int> userQuota, Nullable<int> siteLogHistory, string homeDirectory, Nullable<int> createdByUserID)
        {
            var portalNameParameter = portalName != null ?
                new ObjectParameter("PortalName", portalName) :
                new ObjectParameter("PortalName", typeof(string));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var hostFeeParameter = hostFee.HasValue ?
                new ObjectParameter("HostFee", hostFee) :
                new ObjectParameter("HostFee", typeof(decimal));
    
            var hostSpaceParameter = hostSpace.HasValue ?
                new ObjectParameter("HostSpace", hostSpace) :
                new ObjectParameter("HostSpace", typeof(int));
    
            var pageQuotaParameter = pageQuota.HasValue ?
                new ObjectParameter("PageQuota", pageQuota) :
                new ObjectParameter("PageQuota", typeof(int));
    
            var userQuotaParameter = userQuota.HasValue ?
                new ObjectParameter("UserQuota", userQuota) :
                new ObjectParameter("UserQuota", typeof(int));
    
            var siteLogHistoryParameter = siteLogHistory.HasValue ?
                new ObjectParameter("SiteLogHistory", siteLogHistory) :
                new ObjectParameter("SiteLogHistory", typeof(int));
    
            var homeDirectoryParameter = homeDirectory != null ?
                new ObjectParameter("HomeDirectory", homeDirectory) :
                new ObjectParameter("HomeDirectory", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddPortalInfo", portalNameParameter, currencyParameter, expiryDateParameter, hostFeeParameter, hostSpaceParameter, pageQuotaParameter, userQuotaParameter, siteLogHistoryParameter, homeDirectoryParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddPortalLanguage(Nullable<int> portalId, Nullable<int> languageId, Nullable<bool> isPublished, Nullable<int> createdByUserID)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddPortalLanguage", portalIdParameter, languageIdParameter, isPublishedParameter, createdByUserIDParameter);
        }
    
        public virtual int AddProfile(Nullable<int> userID, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProfile", userIDParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddPropertyDefinition(Nullable<int> portalId, Nullable<int> moduleDefId, Nullable<int> dataType, string defaultValue, string propertyCategory, string propertyName, Nullable<bool> required, string validationExpression, Nullable<int> viewOrder, Nullable<bool> visible, Nullable<int> length, Nullable<int> defaultVisibility, Nullable<int> createdByUserID)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var moduleDefIdParameter = moduleDefId.HasValue ?
                new ObjectParameter("ModuleDefId", moduleDefId) :
                new ObjectParameter("ModuleDefId", typeof(int));
    
            var dataTypeParameter = dataType.HasValue ?
                new ObjectParameter("DataType", dataType) :
                new ObjectParameter("DataType", typeof(int));
    
            var defaultValueParameter = defaultValue != null ?
                new ObjectParameter("DefaultValue", defaultValue) :
                new ObjectParameter("DefaultValue", typeof(string));
    
            var propertyCategoryParameter = propertyCategory != null ?
                new ObjectParameter("PropertyCategory", propertyCategory) :
                new ObjectParameter("PropertyCategory", typeof(string));
    
            var propertyNameParameter = propertyName != null ?
                new ObjectParameter("PropertyName", propertyName) :
                new ObjectParameter("PropertyName", typeof(string));
    
            var requiredParameter = required.HasValue ?
                new ObjectParameter("Required", required) :
                new ObjectParameter("Required", typeof(bool));
    
            var validationExpressionParameter = validationExpression != null ?
                new ObjectParameter("ValidationExpression", validationExpression) :
                new ObjectParameter("ValidationExpression", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(bool));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(int));
    
            var defaultVisibilityParameter = defaultVisibility.HasValue ?
                new ObjectParameter("DefaultVisibility", defaultVisibility) :
                new ObjectParameter("DefaultVisibility", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddPropertyDefinition", portalIdParameter, moduleDefIdParameter, dataTypeParameter, defaultValueParameter, propertyCategoryParameter, propertyNameParameter, requiredParameter, validationExpressionParameter, viewOrderParameter, visibleParameter, lengthParameter, defaultVisibilityParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddRole(Nullable<int> portalID, Nullable<int> roleGroupId, string roleName, string description, Nullable<decimal> serviceFee, Nullable<int> billingPeriod, string billingFrequency, Nullable<decimal> trialFee, Nullable<int> trialPeriod, string trialFrequency, Nullable<bool> isPublic, Nullable<bool> autoAssignment, string rSVPCode, string iconFile, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var roleGroupIdParameter = roleGroupId.HasValue ?
                new ObjectParameter("RoleGroupId", roleGroupId) :
                new ObjectParameter("RoleGroupId", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var serviceFeeParameter = serviceFee.HasValue ?
                new ObjectParameter("ServiceFee", serviceFee) :
                new ObjectParameter("ServiceFee", typeof(decimal));
    
            var billingPeriodParameter = billingPeriod.HasValue ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(int));
    
            var billingFrequencyParameter = billingFrequency != null ?
                new ObjectParameter("BillingFrequency", billingFrequency) :
                new ObjectParameter("BillingFrequency", typeof(string));
    
            var trialFeeParameter = trialFee.HasValue ?
                new ObjectParameter("TrialFee", trialFee) :
                new ObjectParameter("TrialFee", typeof(decimal));
    
            var trialPeriodParameter = trialPeriod.HasValue ?
                new ObjectParameter("TrialPeriod", trialPeriod) :
                new ObjectParameter("TrialPeriod", typeof(int));
    
            var trialFrequencyParameter = trialFrequency != null ?
                new ObjectParameter("TrialFrequency", trialFrequency) :
                new ObjectParameter("TrialFrequency", typeof(string));
    
            var isPublicParameter = isPublic.HasValue ?
                new ObjectParameter("IsPublic", isPublic) :
                new ObjectParameter("IsPublic", typeof(bool));
    
            var autoAssignmentParameter = autoAssignment.HasValue ?
                new ObjectParameter("AutoAssignment", autoAssignment) :
                new ObjectParameter("AutoAssignment", typeof(bool));
    
            var rSVPCodeParameter = rSVPCode != null ?
                new ObjectParameter("RSVPCode", rSVPCode) :
                new ObjectParameter("RSVPCode", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddRole", portalIDParameter, roleGroupIdParameter, roleNameParameter, descriptionParameter, serviceFeeParameter, billingPeriodParameter, billingFrequencyParameter, trialFeeParameter, trialPeriodParameter, trialFrequencyParameter, isPublicParameter, autoAssignmentParameter, rSVPCodeParameter, iconFileParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddRoleGroup(Nullable<int> portalID, string roleGroupName, string description, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var roleGroupNameParameter = roleGroupName != null ?
                new ObjectParameter("RoleGroupName", roleGroupName) :
                new ObjectParameter("RoleGroupName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddRoleGroup", portalIDParameter, roleGroupNameParameter, descriptionParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSchedule(string typeFullName, Nullable<int> timeLapse, string timeLapseMeasurement, Nullable<int> retryTimeLapse, string retryTimeLapseMeasurement, Nullable<int> retainHistoryNum, string attachToEvent, Nullable<bool> catchUpEnabled, Nullable<bool> enabled, string objectDependencies, string servers, Nullable<int> createdByUserID, string friendlyName)
        {
            var typeFullNameParameter = typeFullName != null ?
                new ObjectParameter("TypeFullName", typeFullName) :
                new ObjectParameter("TypeFullName", typeof(string));
    
            var timeLapseParameter = timeLapse.HasValue ?
                new ObjectParameter("TimeLapse", timeLapse) :
                new ObjectParameter("TimeLapse", typeof(int));
    
            var timeLapseMeasurementParameter = timeLapseMeasurement != null ?
                new ObjectParameter("TimeLapseMeasurement", timeLapseMeasurement) :
                new ObjectParameter("TimeLapseMeasurement", typeof(string));
    
            var retryTimeLapseParameter = retryTimeLapse.HasValue ?
                new ObjectParameter("RetryTimeLapse", retryTimeLapse) :
                new ObjectParameter("RetryTimeLapse", typeof(int));
    
            var retryTimeLapseMeasurementParameter = retryTimeLapseMeasurement != null ?
                new ObjectParameter("RetryTimeLapseMeasurement", retryTimeLapseMeasurement) :
                new ObjectParameter("RetryTimeLapseMeasurement", typeof(string));
    
            var retainHistoryNumParameter = retainHistoryNum.HasValue ?
                new ObjectParameter("RetainHistoryNum", retainHistoryNum) :
                new ObjectParameter("RetainHistoryNum", typeof(int));
    
            var attachToEventParameter = attachToEvent != null ?
                new ObjectParameter("AttachToEvent", attachToEvent) :
                new ObjectParameter("AttachToEvent", typeof(string));
    
            var catchUpEnabledParameter = catchUpEnabled.HasValue ?
                new ObjectParameter("CatchUpEnabled", catchUpEnabled) :
                new ObjectParameter("CatchUpEnabled", typeof(bool));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var objectDependenciesParameter = objectDependencies != null ?
                new ObjectParameter("ObjectDependencies", objectDependencies) :
                new ObjectParameter("ObjectDependencies", typeof(string));
    
            var serversParameter = servers != null ?
                new ObjectParameter("Servers", servers) :
                new ObjectParameter("Servers", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSchedule", typeFullNameParameter, timeLapseParameter, timeLapseMeasurementParameter, retryTimeLapseParameter, retryTimeLapseMeasurementParameter, retainHistoryNumParameter, attachToEventParameter, catchUpEnabledParameter, enabledParameter, objectDependenciesParameter, serversParameter, createdByUserIDParameter, friendlyNameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddScheduleHistory(Nullable<int> scheduleID, Nullable<System.DateTime> startDate, string server)
        {
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var serverParameter = server != null ?
                new ObjectParameter("Server", server) :
                new ObjectParameter("Server", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddScheduleHistory", scheduleIDParameter, startDateParameter, serverParameter);
        }
    
        public virtual int AddScheduleItemSetting(Nullable<int> scheduleID, string name, string value)
        {
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddScheduleItemSetting", scheduleIDParameter, nameParameter, valueParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddScopeType(string scopeType)
        {
            var scopeTypeParameter = scopeType != null ?
                new ObjectParameter("ScopeType", scopeType) :
                new ObjectParameter("ScopeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddScopeType", scopeTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSearchCommonWord(string commonWord, string locale)
        {
            var commonWordParameter = commonWord != null ?
                new ObjectParameter("CommonWord", commonWord) :
                new ObjectParameter("CommonWord", typeof(string));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSearchCommonWord", commonWordParameter, localeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSearchItem(string title, string description, Nullable<int> author, Nullable<System.DateTime> pubDate, Nullable<int> moduleId, string searchKey, string guid, Nullable<int> imageFileId)
        {
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var authorParameter = author.HasValue ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(int));
    
            var pubDateParameter = pubDate.HasValue ?
                new ObjectParameter("PubDate", pubDate) :
                new ObjectParameter("PubDate", typeof(System.DateTime));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var searchKeyParameter = searchKey != null ?
                new ObjectParameter("SearchKey", searchKey) :
                new ObjectParameter("SearchKey", typeof(string));
    
            var guidParameter = guid != null ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(string));
    
            var imageFileIdParameter = imageFileId.HasValue ?
                new ObjectParameter("ImageFileId", imageFileId) :
                new ObjectParameter("ImageFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSearchItem", titleParameter, descriptionParameter, authorParameter, pubDateParameter, moduleIdParameter, searchKeyParameter, guidParameter, imageFileIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSearchItemWord(Nullable<int> searchItemID, Nullable<int> searchWordsID, Nullable<int> occurrences)
        {
            var searchItemIDParameter = searchItemID.HasValue ?
                new ObjectParameter("SearchItemID", searchItemID) :
                new ObjectParameter("SearchItemID", typeof(int));
    
            var searchWordsIDParameter = searchWordsID.HasValue ?
                new ObjectParameter("SearchWordsID", searchWordsID) :
                new ObjectParameter("SearchWordsID", typeof(int));
    
            var occurrencesParameter = occurrences.HasValue ?
                new ObjectParameter("Occurrences", occurrences) :
                new ObjectParameter("Occurrences", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSearchItemWord", searchItemIDParameter, searchWordsIDParameter, occurrencesParameter);
        }
    
        public virtual int AddSearchItemWordPosition(Nullable<int> searchItemWordID, string contentPositions)
        {
            var searchItemWordIDParameter = searchItemWordID.HasValue ?
                new ObjectParameter("SearchItemWordID", searchItemWordID) :
                new ObjectParameter("SearchItemWordID", typeof(int));
    
            var contentPositionsParameter = contentPositions != null ?
                new ObjectParameter("ContentPositions", contentPositions) :
                new ObjectParameter("ContentPositions", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSearchItemWordPosition", searchItemWordIDParameter, contentPositionsParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSearchWord(string word)
        {
            var wordParameter = word != null ?
                new ObjectParameter("Word", word) :
                new ObjectParameter("Word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSearchWord", wordParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSimpleTerm(Nullable<int> vocabularyID, string name, string description, Nullable<int> weight, Nullable<int> createdByUserID)
        {
            var vocabularyIDParameter = vocabularyID.HasValue ?
                new ObjectParameter("VocabularyID", vocabularyID) :
                new ObjectParameter("VocabularyID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSimpleTerm", vocabularyIDParameter, nameParameter, descriptionParameter, weightParameter, createdByUserIDParameter);
        }
    
        public virtual int AddSiteLog(Nullable<System.DateTime> dateTime, Nullable<int> portalID, Nullable<int> userID, string referrer, string url, string userAgent, string userHostAddress, string userHostName, Nullable<int> tabId, Nullable<int> affiliateId)
        {
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var referrerParameter = referrer != null ?
                new ObjectParameter("Referrer", referrer) :
                new ObjectParameter("Referrer", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            var userHostAddressParameter = userHostAddress != null ?
                new ObjectParameter("UserHostAddress", userHostAddress) :
                new ObjectParameter("UserHostAddress", typeof(string));
    
            var userHostNameParameter = userHostName != null ?
                new ObjectParameter("UserHostName", userHostName) :
                new ObjectParameter("UserHostName", typeof(string));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var affiliateIdParameter = affiliateId.HasValue ?
                new ObjectParameter("AffiliateId", affiliateId) :
                new ObjectParameter("AffiliateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSiteLog", dateTimeParameter, portalIDParameter, userIDParameter, referrerParameter, urlParameter, userAgentParameter, userHostAddressParameter, userHostNameParameter, tabIdParameter, affiliateIdParameter);
        }
    
        public virtual int AddSkin(Nullable<int> skinPackageID, string skinSrc)
        {
            var skinPackageIDParameter = skinPackageID.HasValue ?
                new ObjectParameter("SkinPackageID", skinPackageID) :
                new ObjectParameter("SkinPackageID", typeof(int));
    
            var skinSrcParameter = skinSrc != null ?
                new ObjectParameter("SkinSrc", skinSrc) :
                new ObjectParameter("SkinSrc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSkin", skinPackageIDParameter, skinSrcParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSkinControl(Nullable<int> packageID, string controlKey, string controlSrc, Nullable<bool> supportsPartialRendering, Nullable<int> createdByUserID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var controlKeyParameter = controlKey != null ?
                new ObjectParameter("ControlKey", controlKey) :
                new ObjectParameter("ControlKey", typeof(string));
    
            var controlSrcParameter = controlSrc != null ?
                new ObjectParameter("ControlSrc", controlSrc) :
                new ObjectParameter("ControlSrc", typeof(string));
    
            var supportsPartialRenderingParameter = supportsPartialRendering.HasValue ?
                new ObjectParameter("SupportsPartialRendering", supportsPartialRendering) :
                new ObjectParameter("SupportsPartialRendering", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSkinControl", packageIDParameter, controlKeyParameter, controlSrcParameter, supportsPartialRenderingParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddSkinPackage(Nullable<int> packageID, Nullable<int> portalID, string skinName, string skinType, Nullable<int> createdByUserID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var skinNameParameter = skinName != null ?
                new ObjectParameter("SkinName", skinName) :
                new ObjectParameter("SkinName", typeof(string));
    
            var skinTypeParameter = skinType != null ?
                new ObjectParameter("SkinType", skinType) :
                new ObjectParameter("SkinType", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddSkinPackage", packageIDParameter, portalIDParameter, skinNameParameter, skinTypeParameter, createdByUserIDParameter);
        }
    
        public virtual int AddSystemMessage(Nullable<int> portalID, string messageName, string messageValue)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var messageNameParameter = messageName != null ?
                new ObjectParameter("MessageName", messageName) :
                new ObjectParameter("MessageName", typeof(string));
    
            var messageValueParameter = messageValue != null ?
                new ObjectParameter("MessageValue", messageValue) :
                new ObjectParameter("MessageValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSystemMessage", portalIDParameter, messageNameParameter, messageValueParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddTab(Nullable<int> contentItemID, Nullable<int> portalID, Nullable<System.Guid> uniqueId, Nullable<System.Guid> versionGuid, Nullable<System.Guid> defaultLanguageGuid, Nullable<System.Guid> localizedVersionGuid, string tabName, Nullable<bool> isVisible, Nullable<bool> disableLink, Nullable<int> parentId, string iconFile, string iconFileLarge, string title, string description, string keyWords, string url, string skinSrc, string containerSrc, string tabPath, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> refreshInterval, string pageHeadText, Nullable<bool> isSecure, Nullable<bool> permanentRedirect, Nullable<double> siteMapPriority, Nullable<int> createdByUserID, string cultureCode)
        {
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var uniqueIdParameter = uniqueId.HasValue ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(System.Guid));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var defaultLanguageGuidParameter = defaultLanguageGuid.HasValue ?
                new ObjectParameter("DefaultLanguageGuid", defaultLanguageGuid) :
                new ObjectParameter("DefaultLanguageGuid", typeof(System.Guid));
    
            var localizedVersionGuidParameter = localizedVersionGuid.HasValue ?
                new ObjectParameter("LocalizedVersionGuid", localizedVersionGuid) :
                new ObjectParameter("LocalizedVersionGuid", typeof(System.Guid));
    
            var tabNameParameter = tabName != null ?
                new ObjectParameter("TabName", tabName) :
                new ObjectParameter("TabName", typeof(string));
    
            var isVisibleParameter = isVisible.HasValue ?
                new ObjectParameter("IsVisible", isVisible) :
                new ObjectParameter("IsVisible", typeof(bool));
    
            var disableLinkParameter = disableLink.HasValue ?
                new ObjectParameter("DisableLink", disableLink) :
                new ObjectParameter("DisableLink", typeof(bool));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var iconFileLargeParameter = iconFileLarge != null ?
                new ObjectParameter("IconFileLarge", iconFileLarge) :
                new ObjectParameter("IconFileLarge", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var skinSrcParameter = skinSrc != null ?
                new ObjectParameter("SkinSrc", skinSrc) :
                new ObjectParameter("SkinSrc", typeof(string));
    
            var containerSrcParameter = containerSrc != null ?
                new ObjectParameter("ContainerSrc", containerSrc) :
                new ObjectParameter("ContainerSrc", typeof(string));
    
            var tabPathParameter = tabPath != null ?
                new ObjectParameter("TabPath", tabPath) :
                new ObjectParameter("TabPath", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var refreshIntervalParameter = refreshInterval.HasValue ?
                new ObjectParameter("RefreshInterval", refreshInterval) :
                new ObjectParameter("RefreshInterval", typeof(int));
    
            var pageHeadTextParameter = pageHeadText != null ?
                new ObjectParameter("PageHeadText", pageHeadText) :
                new ObjectParameter("PageHeadText", typeof(string));
    
            var isSecureParameter = isSecure.HasValue ?
                new ObjectParameter("IsSecure", isSecure) :
                new ObjectParameter("IsSecure", typeof(bool));
    
            var permanentRedirectParameter = permanentRedirect.HasValue ?
                new ObjectParameter("PermanentRedirect", permanentRedirect) :
                new ObjectParameter("PermanentRedirect", typeof(bool));
    
            var siteMapPriorityParameter = siteMapPriority.HasValue ?
                new ObjectParameter("SiteMapPriority", siteMapPriority) :
                new ObjectParameter("SiteMapPriority", typeof(double));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddTab", contentItemIDParameter, portalIDParameter, uniqueIdParameter, versionGuidParameter, defaultLanguageGuidParameter, localizedVersionGuidParameter, tabNameParameter, isVisibleParameter, disableLinkParameter, parentIdParameter, iconFileParameter, iconFileLargeParameter, titleParameter, descriptionParameter, keyWordsParameter, urlParameter, skinSrcParameter, containerSrcParameter, tabPathParameter, startDateParameter, endDateParameter, refreshIntervalParameter, pageHeadTextParameter, isSecureParameter, permanentRedirectParameter, siteMapPriorityParameter, createdByUserIDParameter, cultureCodeParameter);
        }
    
        public virtual int AddTabModule(Nullable<int> tabId, Nullable<int> moduleId, string moduleTitle, string header, string footer, Nullable<int> moduleOrder, string paneName, Nullable<int> cacheTime, string cacheMethod, string alignment, string color, string border, string iconFile, Nullable<int> visibility, string containerSrc, Nullable<bool> displayTitle, Nullable<bool> displayPrint, Nullable<bool> displaySyndicate, Nullable<bool> isWebSlice, string webSliceTitle, Nullable<System.DateTime> webSliceExpiryDate, Nullable<int> webSliceTTL, Nullable<System.Guid> uniqueId, Nullable<System.Guid> versionGuid, Nullable<System.Guid> defaultLanguageGuid, Nullable<System.Guid> localizedVersionGuid, string cultureCode, Nullable<int> createdByUserID)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var moduleTitleParameter = moduleTitle != null ?
                new ObjectParameter("ModuleTitle", moduleTitle) :
                new ObjectParameter("ModuleTitle", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("Header", header) :
                new ObjectParameter("Header", typeof(string));
    
            var footerParameter = footer != null ?
                new ObjectParameter("Footer", footer) :
                new ObjectParameter("Footer", typeof(string));
    
            var moduleOrderParameter = moduleOrder.HasValue ?
                new ObjectParameter("ModuleOrder", moduleOrder) :
                new ObjectParameter("ModuleOrder", typeof(int));
    
            var paneNameParameter = paneName != null ?
                new ObjectParameter("PaneName", paneName) :
                new ObjectParameter("PaneName", typeof(string));
    
            var cacheTimeParameter = cacheTime.HasValue ?
                new ObjectParameter("CacheTime", cacheTime) :
                new ObjectParameter("CacheTime", typeof(int));
    
            var cacheMethodParameter = cacheMethod != null ?
                new ObjectParameter("CacheMethod", cacheMethod) :
                new ObjectParameter("CacheMethod", typeof(string));
    
            var alignmentParameter = alignment != null ?
                new ObjectParameter("Alignment", alignment) :
                new ObjectParameter("Alignment", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var borderParameter = border != null ?
                new ObjectParameter("Border", border) :
                new ObjectParameter("Border", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var visibilityParameter = visibility.HasValue ?
                new ObjectParameter("Visibility", visibility) :
                new ObjectParameter("Visibility", typeof(int));
    
            var containerSrcParameter = containerSrc != null ?
                new ObjectParameter("ContainerSrc", containerSrc) :
                new ObjectParameter("ContainerSrc", typeof(string));
    
            var displayTitleParameter = displayTitle.HasValue ?
                new ObjectParameter("DisplayTitle", displayTitle) :
                new ObjectParameter("DisplayTitle", typeof(bool));
    
            var displayPrintParameter = displayPrint.HasValue ?
                new ObjectParameter("DisplayPrint", displayPrint) :
                new ObjectParameter("DisplayPrint", typeof(bool));
    
            var displaySyndicateParameter = displaySyndicate.HasValue ?
                new ObjectParameter("DisplaySyndicate", displaySyndicate) :
                new ObjectParameter("DisplaySyndicate", typeof(bool));
    
            var isWebSliceParameter = isWebSlice.HasValue ?
                new ObjectParameter("IsWebSlice", isWebSlice) :
                new ObjectParameter("IsWebSlice", typeof(bool));
    
            var webSliceTitleParameter = webSliceTitle != null ?
                new ObjectParameter("WebSliceTitle", webSliceTitle) :
                new ObjectParameter("WebSliceTitle", typeof(string));
    
            var webSliceExpiryDateParameter = webSliceExpiryDate.HasValue ?
                new ObjectParameter("WebSliceExpiryDate", webSliceExpiryDate) :
                new ObjectParameter("WebSliceExpiryDate", typeof(System.DateTime));
    
            var webSliceTTLParameter = webSliceTTL.HasValue ?
                new ObjectParameter("WebSliceTTL", webSliceTTL) :
                new ObjectParameter("WebSliceTTL", typeof(int));
    
            var uniqueIdParameter = uniqueId.HasValue ?
                new ObjectParameter("UniqueId", uniqueId) :
                new ObjectParameter("UniqueId", typeof(System.Guid));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var defaultLanguageGuidParameter = defaultLanguageGuid.HasValue ?
                new ObjectParameter("DefaultLanguageGuid", defaultLanguageGuid) :
                new ObjectParameter("DefaultLanguageGuid", typeof(System.Guid));
    
            var localizedVersionGuidParameter = localizedVersionGuid.HasValue ?
                new ObjectParameter("LocalizedVersionGuid", localizedVersionGuid) :
                new ObjectParameter("LocalizedVersionGuid", typeof(System.Guid));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTabModule", tabIdParameter, moduleIdParameter, moduleTitleParameter, headerParameter, footerParameter, moduleOrderParameter, paneNameParameter, cacheTimeParameter, cacheMethodParameter, alignmentParameter, colorParameter, borderParameter, iconFileParameter, visibilityParameter, containerSrcParameter, displayTitleParameter, displayPrintParameter, displaySyndicateParameter, isWebSliceParameter, webSliceTitleParameter, webSliceExpiryDateParameter, webSliceTTLParameter, uniqueIdParameter, versionGuidParameter, defaultLanguageGuidParameter, localizedVersionGuidParameter, cultureCodeParameter, createdByUserIDParameter);
        }
    
        public virtual int AddTabModuleSetting(Nullable<int> tabModuleId, string settingName, string settingValue, Nullable<int> createdByUserID)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTabModuleSetting", tabModuleIdParameter, settingNameParameter, settingValueParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddTabPermission(Nullable<int> tabID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> createdByUserID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddTabPermission", tabIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, createdByUserIDParameter);
        }
    
        public virtual int AddTabSetting(Nullable<int> tabID, string settingName, string settingValue, Nullable<int> createdByUserID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTabSetting", tabIDParameter, settingNameParameter, settingValueParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddTermToContent(Nullable<int> termID, Nullable<int> contentItemID)
        {
            var termIDParameter = termID.HasValue ?
                new ObjectParameter("TermID", termID) :
                new ObjectParameter("TermID", typeof(int));
    
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddTermToContent", termIDParameter, contentItemIDParameter);
        }
    
        public virtual int AddUrl(Nullable<int> portalID, string url)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUrl", portalIDParameter, urlParameter);
        }
    
        public virtual int AddUrlLog(Nullable<int> urlTrackingID, Nullable<int> userID)
        {
            var urlTrackingIDParameter = urlTrackingID.HasValue ?
                new ObjectParameter("UrlTrackingID", urlTrackingID) :
                new ObjectParameter("UrlTrackingID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUrlLog", urlTrackingIDParameter, userIDParameter);
        }
    
        public virtual int AddUrlTracking(Nullable<int> portalID, string url, string urlType, Nullable<bool> logActivity, Nullable<bool> trackClicks, Nullable<int> moduleId, Nullable<bool> newWindow)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var urlTypeParameter = urlType != null ?
                new ObjectParameter("UrlType", urlType) :
                new ObjectParameter("UrlType", typeof(string));
    
            var logActivityParameter = logActivity.HasValue ?
                new ObjectParameter("LogActivity", logActivity) :
                new ObjectParameter("LogActivity", typeof(bool));
    
            var trackClicksParameter = trackClicks.HasValue ?
                new ObjectParameter("TrackClicks", trackClicks) :
                new ObjectParameter("TrackClicks", typeof(bool));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var newWindowParameter = newWindow.HasValue ?
                new ObjectParameter("NewWindow", newWindow) :
                new ObjectParameter("NewWindow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUrlTracking", portalIDParameter, urlParameter, urlTypeParameter, logActivityParameter, trackClicksParameter, moduleIdParameter, newWindowParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddUser(Nullable<int> portalID, string username, string firstName, string lastName, Nullable<int> affiliateId, Nullable<bool> isSuperUser, string email, string displayName, Nullable<bool> updatePassword, Nullable<bool> authorised, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var affiliateIdParameter = affiliateId.HasValue ?
                new ObjectParameter("AffiliateId", affiliateId) :
                new ObjectParameter("AffiliateId", typeof(int));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("DisplayName", displayName) :
                new ObjectParameter("DisplayName", typeof(string));
    
            var updatePasswordParameter = updatePassword.HasValue ?
                new ObjectParameter("UpdatePassword", updatePassword) :
                new ObjectParameter("UpdatePassword", typeof(bool));
    
            var authorisedParameter = authorised.HasValue ?
                new ObjectParameter("Authorised", authorised) :
                new ObjectParameter("Authorised", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddUser", portalIDParameter, usernameParameter, firstNameParameter, lastNameParameter, affiliateIdParameter, isSuperUserParameter, emailParameter, displayNameParameter, updatePasswordParameter, authorisedParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddUserAuthentication(Nullable<int> userID, string authenticationType, string authenticationToken, Nullable<int> createdByUserID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var authenticationTypeParameter = authenticationType != null ?
                new ObjectParameter("AuthenticationType", authenticationType) :
                new ObjectParameter("AuthenticationType", typeof(string));
    
            var authenticationTokenParameter = authenticationToken != null ?
                new ObjectParameter("AuthenticationToken", authenticationToken) :
                new ObjectParameter("AuthenticationToken", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddUserAuthentication", userIDParameter, authenticationTypeParameter, authenticationTokenParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> AddUserRole(Nullable<int> portalID, Nullable<int> userID, Nullable<int> roleId, Nullable<System.DateTime> effectiveDate, Nullable<System.DateTime> expiryDate, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("AddUserRole", portalIDParameter, userIDParameter, roleIdParameter, effectiveDateParameter, expiryDateParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddVendor(Nullable<int> portalID, string vendorName, string unit, string street, string city, string region, string country, string postalCode, string telephone, string fax, string cell, string email, string website, string firstName, string lastName, string userName, string logoFile, string keyWords, Nullable<bool> authorized)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var cellParameter = cell != null ?
                new ObjectParameter("Cell", cell) :
                new ObjectParameter("Cell", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var logoFileParameter = logoFile != null ?
                new ObjectParameter("LogoFile", logoFile) :
                new ObjectParameter("LogoFile", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var authorizedParameter = authorized.HasValue ?
                new ObjectParameter("Authorized", authorized) :
                new ObjectParameter("Authorized", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddVendor", portalIDParameter, vendorNameParameter, unitParameter, streetParameter, cityParameter, regionParameter, countryParameter, postalCodeParameter, telephoneParameter, faxParameter, cellParameter, emailParameter, websiteParameter, firstNameParameter, lastNameParameter, userNameParameter, logoFileParameter, keyWordsParameter, authorizedParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddVendorClassification(Nullable<int> vendorId, Nullable<int> classificationId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var classificationIdParameter = classificationId.HasValue ?
                new ObjectParameter("ClassificationId", classificationId) :
                new ObjectParameter("ClassificationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddVendorClassification", vendorIdParameter, classificationIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> AddVocabulary(Nullable<int> vocabularyTypeID, string name, string description, Nullable<int> weight, Nullable<int> scopeID, Nullable<int> scopeTypeID, Nullable<int> createdByUserID)
        {
            var vocabularyTypeIDParameter = vocabularyTypeID.HasValue ?
                new ObjectParameter("VocabularyTypeID", vocabularyTypeID) :
                new ObjectParameter("VocabularyTypeID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("ScopeID", scopeID) :
                new ObjectParameter("ScopeID", typeof(int));
    
            var scopeTypeIDParameter = scopeTypeID.HasValue ?
                new ObjectParameter("ScopeTypeID", scopeTypeID) :
                new ObjectParameter("ScopeTypeID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("AddVocabulary", vocabularyTypeIDParameter, nameParameter, descriptionParameter, weightParameter, scopeIDParameter, scopeTypeIDParameter, createdByUserIDParameter);
        }
    
        public virtual ObjectResult<string> aspnet_AnyDataInTables(Nullable<int> tablesToCheck)
        {
            var tablesToCheckParameter = tablesToCheck.HasValue ?
                new ObjectParameter("TablesToCheck", tablesToCheck) :
                new ObjectParameter("TablesToCheck", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_AnyDataInTables", tablesToCheckParameter);
        }
    
        public virtual int aspnet_Applications_CreateApplication(string applicationName, ObjectParameter applicationId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Applications_CreateApplication", applicationNameParameter, applicationId);
        }
    
        public virtual int aspnet_CheckSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_CheckSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Membership_ChangePasswordQuestionAndAnswer(string applicationName, string userName, string newPasswordQuestion, string newPasswordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordQuestionParameter = newPasswordQuestion != null ?
                new ObjectParameter("NewPasswordQuestion", newPasswordQuestion) :
                new ObjectParameter("NewPasswordQuestion", typeof(string));
    
            var newPasswordAnswerParameter = newPasswordAnswer != null ?
                new ObjectParameter("NewPasswordAnswer", newPasswordAnswer) :
                new ObjectParameter("NewPasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ChangePasswordQuestionAndAnswer", applicationNameParameter, userNameParameter, newPasswordQuestionParameter, newPasswordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_CreateUser(string applicationName, string userName, string password, string passwordSalt, string email, string passwordQuestion, string passwordAnswer, Nullable<bool> isApproved, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> createDate, Nullable<int> uniqueEmail, Nullable<int> passwordFormat, ObjectParameter userId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordQuestionParameter = passwordQuestion != null ?
                new ObjectParameter("PasswordQuestion", passwordQuestion) :
                new ObjectParameter("PasswordQuestion", typeof(string));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_CreateUser", applicationNameParameter, userNameParameter, passwordParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, userId);
        }
    
        public virtual int aspnet_Membership_FindUsersByEmail(string applicationName, string emailToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailToMatchParameter = emailToMatch != null ?
                new ObjectParameter("EmailToMatch", emailToMatch) :
                new ObjectParameter("EmailToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByEmail", applicationNameParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_FindUsersByName(string applicationName, string userNameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_FindUsersByName", applicationNameParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetAllUsers(string applicationName, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetAllUsers", applicationNameParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual int aspnet_Membership_GetNumberOfUsersOnline(string applicationName, Nullable<int> minutesSinceLastInActive, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var minutesSinceLastInActiveParameter = minutesSinceLastInActive.HasValue ?
                new ObjectParameter("MinutesSinceLastInActive", minutesSinceLastInActive) :
                new ObjectParameter("MinutesSinceLastInActive", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_GetNumberOfUsersOnline", applicationNameParameter, minutesSinceLastInActiveParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPassword_Result> aspnet_Membership_GetPassword(string applicationName, string userName, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPassword_Result>("aspnet_Membership_GetPassword", applicationNameParameter, userNameParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, passwordAnswerParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetPasswordWithFormat_Result> aspnet_Membership_GetPasswordWithFormat(string applicationName, string userName, Nullable<bool> updateLastLoginActivityDate, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetPasswordWithFormat_Result>("aspnet_Membership_GetPasswordWithFormat", applicationNameParameter, userNameParameter, updateLastLoginActivityDateParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Membership_GetUserByEmail(string applicationName, string email)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Membership_GetUserByEmail", applicationNameParameter, emailParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByName_Result> aspnet_Membership_GetUserByName(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByName_Result>("aspnet_Membership_GetUserByName", applicationNameParameter, userNameParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual ObjectResult<aspnet_Membership_GetUserByUserId_Result> aspnet_Membership_GetUserByUserId(Nullable<System.Guid> userId, Nullable<System.DateTime> currentTimeUtc, Nullable<bool> updateLastActivity)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var updateLastActivityParameter = updateLastActivity.HasValue ?
                new ObjectParameter("UpdateLastActivity", updateLastActivity) :
                new ObjectParameter("UpdateLastActivity", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Membership_GetUserByUserId_Result>("aspnet_Membership_GetUserByUserId", userIdParameter, currentTimeUtcParameter, updateLastActivityParameter);
        }
    
        public virtual int aspnet_Membership_ResetPassword(string applicationName, string userName, string newPassword, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat, string passwordAnswer)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_ResetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter, passwordAnswerParameter);
        }
    
        public virtual int aspnet_Membership_SetPassword(string applicationName, string userName, string newPassword, string passwordSalt, Nullable<System.DateTime> currentTimeUtc, Nullable<int> passwordFormat)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var newPasswordParameter = newPassword != null ?
                new ObjectParameter("NewPassword", newPassword) :
                new ObjectParameter("NewPassword", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_SetPassword", applicationNameParameter, userNameParameter, newPasswordParameter, passwordSaltParameter, currentTimeUtcParameter, passwordFormatParameter);
        }
    
        public virtual int aspnet_Membership_UnlockUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UnlockUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUser(string applicationName, string userName, string email, string comment, Nullable<bool> isApproved, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate, Nullable<int> uniqueEmail, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUser", applicationNameParameter, userNameParameter, emailParameter, commentParameter, isApprovedParameter, lastLoginDateParameter, lastActivityDateParameter, uniqueEmailParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Membership_UpdateUserInfo(string applicationName, string userName, Nullable<bool> isPasswordCorrect, Nullable<bool> updateLastLoginActivityDate, Nullable<int> maxInvalidPasswordAttempts, Nullable<int> passwordAttemptWindow, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> lastLoginDate, Nullable<System.DateTime> lastActivityDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isPasswordCorrectParameter = isPasswordCorrect.HasValue ?
                new ObjectParameter("IsPasswordCorrect", isPasswordCorrect) :
                new ObjectParameter("IsPasswordCorrect", typeof(bool));
    
            var updateLastLoginActivityDateParameter = updateLastLoginActivityDate.HasValue ?
                new ObjectParameter("UpdateLastLoginActivityDate", updateLastLoginActivityDate) :
                new ObjectParameter("UpdateLastLoginActivityDate", typeof(bool));
    
            var maxInvalidPasswordAttemptsParameter = maxInvalidPasswordAttempts.HasValue ?
                new ObjectParameter("MaxInvalidPasswordAttempts", maxInvalidPasswordAttempts) :
                new ObjectParameter("MaxInvalidPasswordAttempts", typeof(int));
    
            var passwordAttemptWindowParameter = passwordAttemptWindow.HasValue ?
                new ObjectParameter("PasswordAttemptWindow", passwordAttemptWindow) :
                new ObjectParameter("PasswordAttemptWindow", typeof(int));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var lastLoginDateParameter = lastLoginDate.HasValue ?
                new ObjectParameter("LastLoginDate", lastLoginDate) :
                new ObjectParameter("LastLoginDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Membership_UpdateUserInfo", applicationNameParameter, userNameParameter, isPasswordCorrectParameter, updateLastLoginActivityDateParameter, maxInvalidPasswordAttemptsParameter, passwordAttemptWindowParameter, currentTimeUtcParameter, lastLoginDateParameter, lastActivityDateParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_DeleteInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_DeleteInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_Profile_DeleteProfiles(string applicationName, string userNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_DeleteProfiles", applicationNameParameter, userNamesParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> aspnet_Profile_GetNumberOfInactiveProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("aspnet_Profile_GetNumberOfInactiveProfiles", applicationNameParameter, profileAuthOptionsParameter, inactiveSinceDateParameter);
        }
    
        public virtual int aspnet_Profile_GetProfiles(string applicationName, Nullable<int> profileAuthOptions, Nullable<int> pageIndex, Nullable<int> pageSize, string userNameToMatch, Nullable<System.DateTime> inactiveSinceDate)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var profileAuthOptionsParameter = profileAuthOptions.HasValue ?
                new ObjectParameter("ProfileAuthOptions", profileAuthOptions) :
                new ObjectParameter("ProfileAuthOptions", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var inactiveSinceDateParameter = inactiveSinceDate.HasValue ?
                new ObjectParameter("InactiveSinceDate", inactiveSinceDate) :
                new ObjectParameter("InactiveSinceDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_GetProfiles", applicationNameParameter, profileAuthOptionsParameter, pageIndexParameter, pageSizeParameter, userNameToMatchParameter, inactiveSinceDateParameter);
        }
    
        public virtual ObjectResult<aspnet_Profile_GetProperties_Result> aspnet_Profile_GetProperties(string applicationName, string userName, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_Profile_GetProperties_Result>("aspnet_Profile_GetProperties", applicationNameParameter, userNameParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_Profile_SetProperties(string applicationName, string propertyNames, string propertyValuesString, byte[] propertyValuesBinary, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var propertyNamesParameter = propertyNames != null ?
                new ObjectParameter("PropertyNames", propertyNames) :
                new ObjectParameter("PropertyNames", typeof(string));
    
            var propertyValuesStringParameter = propertyValuesString != null ?
                new ObjectParameter("PropertyValuesString", propertyValuesString) :
                new ObjectParameter("PropertyValuesString", typeof(string));
    
            var propertyValuesBinaryParameter = propertyValuesBinary != null ?
                new ObjectParameter("PropertyValuesBinary", propertyValuesBinary) :
                new ObjectParameter("PropertyValuesBinary", typeof(byte[]));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Profile_SetProperties", applicationNameParameter, propertyNamesParameter, propertyValuesStringParameter, propertyValuesBinaryParameter, userNameParameter, isUserAnonymousParameter, currentTimeUtcParameter);
        }
    
        public virtual int aspnet_RegisterSchemaVersion(string feature, string compatibleSchemaVersion, Nullable<bool> isCurrentVersion, Nullable<bool> removeIncompatibleSchema)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            var isCurrentVersionParameter = isCurrentVersion.HasValue ?
                new ObjectParameter("IsCurrentVersion", isCurrentVersion) :
                new ObjectParameter("IsCurrentVersion", typeof(bool));
    
            var removeIncompatibleSchemaParameter = removeIncompatibleSchema.HasValue ?
                new ObjectParameter("RemoveIncompatibleSchema", removeIncompatibleSchema) :
                new ObjectParameter("RemoveIncompatibleSchema", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_RegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter, isCurrentVersionParameter, removeIncompatibleSchemaParameter);
        }
    
        public virtual int aspnet_Roles_CreateRole(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_CreateRole", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Roles_DeleteRole(string applicationName, string roleName, Nullable<bool> deleteOnlyIfRoleIsEmpty)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var deleteOnlyIfRoleIsEmptyParameter = deleteOnlyIfRoleIsEmpty.HasValue ?
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", deleteOnlyIfRoleIsEmpty) :
                new ObjectParameter("DeleteOnlyIfRoleIsEmpty", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_DeleteRole", applicationNameParameter, roleNameParameter, deleteOnlyIfRoleIsEmptyParameter);
        }
    
        public virtual ObjectResult<string> aspnet_Roles_GetAllRoles(string applicationName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_Roles_GetAllRoles", applicationNameParameter);
        }
    
        public virtual int aspnet_Roles_RoleExists(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Roles_RoleExists", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_Setup_RemoveAllRoleMembers(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Setup_RemoveAllRoleMembers", nameParameter);
        }
    
        public virtual int aspnet_UnRegisterSchemaVersion(string feature, string compatibleSchemaVersion)
        {
            var featureParameter = feature != null ?
                new ObjectParameter("Feature", feature) :
                new ObjectParameter("Feature", typeof(string));
    
            var compatibleSchemaVersionParameter = compatibleSchemaVersion != null ?
                new ObjectParameter("CompatibleSchemaVersion", compatibleSchemaVersion) :
                new ObjectParameter("CompatibleSchemaVersion", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UnRegisterSchemaVersion", featureParameter, compatibleSchemaVersionParameter);
        }
    
        public virtual int aspnet_Users_CreateUser(Nullable<System.Guid> applicationId, string userName, Nullable<bool> isUserAnonymous, Nullable<System.DateTime> lastActivityDate, ObjectParameter userId)
        {
            var applicationIdParameter = applicationId.HasValue ?
                new ObjectParameter("ApplicationId", applicationId) :
                new ObjectParameter("ApplicationId", typeof(System.Guid));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var isUserAnonymousParameter = isUserAnonymous.HasValue ?
                new ObjectParameter("IsUserAnonymous", isUserAnonymous) :
                new ObjectParameter("IsUserAnonymous", typeof(bool));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_CreateUser", applicationIdParameter, userNameParameter, isUserAnonymousParameter, lastActivityDateParameter, userId);
        }
    
        public virtual int aspnet_Users_DeleteUser(string applicationName, string userName, Nullable<int> tablesToDeleteFrom, ObjectParameter numTablesDeletedFrom)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var tablesToDeleteFromParameter = tablesToDeleteFrom.HasValue ?
                new ObjectParameter("TablesToDeleteFrom", tablesToDeleteFrom) :
                new ObjectParameter("TablesToDeleteFrom", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_Users_DeleteUser", applicationNameParameter, userNameParameter, tablesToDeleteFromParameter, numTablesDeletedFrom);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_AddUsersToRoles(string applicationName, string userNames, string roleNames, Nullable<System.DateTime> currentTimeUtc)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_AddUsersToRoles", applicationNameParameter, userNamesParameter, roleNamesParameter, currentTimeUtcParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_FindUsersInRole(string applicationName, string roleName, string userNameToMatch)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_FindUsersInRole", applicationNameParameter, roleNameParameter, userNameToMatchParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetRolesForUser(string applicationName, string userName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetRolesForUser", applicationNameParameter, userNameParameter);
        }
    
        public virtual ObjectResult<string> aspnet_UsersInRoles_GetUsersInRoles(string applicationName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("aspnet_UsersInRoles_GetUsersInRoles", applicationNameParameter, roleNameParameter);
        }
    
        public virtual int aspnet_UsersInRoles_IsUserInRole(string applicationName, string userName, string roleName)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("aspnet_UsersInRoles_IsUserInRole", applicationNameParameter, userNameParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<aspnet_UsersInRoles_RemoveUsersFromRoles_Result> aspnet_UsersInRoles_RemoveUsersFromRoles(string applicationName, string userNames, string roleNames)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNamesParameter = userNames != null ?
                new ObjectParameter("UserNames", userNames) :
                new ObjectParameter("UserNames", typeof(string));
    
            var roleNamesParameter = roleNames != null ?
                new ObjectParameter("RoleNames", roleNames) :
                new ObjectParameter("RoleNames", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<aspnet_UsersInRoles_RemoveUsersFromRoles_Result>("aspnet_UsersInRoles_RemoveUsersFromRoles", applicationNameParameter, userNamesParameter, roleNamesParameter);
        }
    
        public virtual int CalculatePagingInformation(Nullable<int> pageIndex, Nullable<int> pageSize, ObjectParameter rowsToReturn, ObjectParameter pageLowerBound, ObjectParameter pageUpperBound)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("pageIndex", pageIndex) :
                new ObjectParameter("pageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("pageSize", pageSize) :
                new ObjectParameter("pageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CalculatePagingInformation", pageIndexParameter, pageSizeParameter, rowsToReturn, pageLowerBound, pageUpperBound);
        }
    
        public virtual ObjectResult<Nullable<int>> CanDeleteSkin(string skinType, string skinFolderName)
        {
            var skinTypeParameter = skinType != null ?
                new ObjectParameter("SkinType", skinType) :
                new ObjectParameter("SkinType", typeof(string));
    
            var skinFolderNameParameter = skinFolderName != null ?
                new ObjectParameter("SkinFolderName", skinFolderName) :
                new ObjectParameter("SkinFolderName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CanDeleteSkin", skinTypeParameter, skinFolderNameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddAdvCat(Nullable<int> portalId, string advCatName, Nullable<bool> isVisible, Nullable<bool> disableLink, Nullable<int> parentId, string iconFile, string title, string description, string keyWords, string advCatImportID, string url, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var advCatNameParameter = advCatName != null ?
                new ObjectParameter("AdvCatName", advCatName) :
                new ObjectParameter("AdvCatName", typeof(string));
    
            var isVisibleParameter = isVisible.HasValue ?
                new ObjectParameter("IsVisible", isVisible) :
                new ObjectParameter("IsVisible", typeof(bool));
    
            var disableLinkParameter = disableLink.HasValue ?
                new ObjectParameter("DisableLink", disableLink) :
                new ObjectParameter("DisableLink", typeof(bool));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var advCatImportIDParameter = advCatImportID != null ?
                new ObjectParameter("AdvCatImportID", advCatImportID) :
                new ObjectParameter("AdvCatImportID", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddAdvCat", portalIdParameter, advCatNameParameter, isVisibleParameter, disableLinkParameter, parentIdParameter, iconFileParameter, titleParameter, descriptionParameter, keyWordsParameter, advCatImportIDParameter, urlParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddAdvCatPermission(Nullable<int> advCatID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddAdvCatPermission", advCatIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter);
        }
    
        public virtual int CAT_AddAdvCatProduct(Nullable<int> advCatID, Nullable<int> productID)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddAdvCatProduct", advCatIDParameter, productIDParameter);
        }
    
        public virtual int CAT_AddAdvCatProductImport(string advCatImportID, Nullable<int> productID, Nullable<int> portalID)
        {
            var advCatImportIDParameter = advCatImportID != null ?
                new ObjectParameter("AdvCatImportID", advCatImportID) :
                new ObjectParameter("AdvCatImportID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddAdvCatProductImport", advCatImportIDParameter, productIDParameter, portalIDParameter);
        }
    
        public virtual int CAT_AddCheckout(string cartID, string message, Nullable<int> paymentMethodID, string shippingCompany, string rate, Nullable<decimal> shippingCharge, Nullable<int> shipToID, string taxRateName, Nullable<System.DateTime> despatchDate, Nullable<System.DateTime> deliveryDate, Nullable<System.DateTime> pickUpDate, Nullable<int> shippingRateID, Nullable<decimal> shipTax, Nullable<decimal> shipTax2)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            var shippingCompanyParameter = shippingCompany != null ?
                new ObjectParameter("ShippingCompany", shippingCompany) :
                new ObjectParameter("ShippingCompany", typeof(string));
    
            var rateParameter = rate != null ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(string));
    
            var shippingChargeParameter = shippingCharge.HasValue ?
                new ObjectParameter("ShippingCharge", shippingCharge) :
                new ObjectParameter("ShippingCharge", typeof(decimal));
    
            var shipToIDParameter = shipToID.HasValue ?
                new ObjectParameter("ShipToID", shipToID) :
                new ObjectParameter("ShipToID", typeof(int));
    
            var taxRateNameParameter = taxRateName != null ?
                new ObjectParameter("TaxRateName", taxRateName) :
                new ObjectParameter("TaxRateName", typeof(string));
    
            var despatchDateParameter = despatchDate.HasValue ?
                new ObjectParameter("DespatchDate", despatchDate) :
                new ObjectParameter("DespatchDate", typeof(System.DateTime));
    
            var deliveryDateParameter = deliveryDate.HasValue ?
                new ObjectParameter("DeliveryDate", deliveryDate) :
                new ObjectParameter("DeliveryDate", typeof(System.DateTime));
    
            var pickUpDateParameter = pickUpDate.HasValue ?
                new ObjectParameter("PickUpDate", pickUpDate) :
                new ObjectParameter("PickUpDate", typeof(System.DateTime));
    
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            var shipTaxParameter = shipTax.HasValue ?
                new ObjectParameter("ShipTax", shipTax) :
                new ObjectParameter("ShipTax", typeof(decimal));
    
            var shipTax2Parameter = shipTax2.HasValue ?
                new ObjectParameter("ShipTax2", shipTax2) :
                new ObjectParameter("ShipTax2", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddCheckout", cartIDParameter, messageParameter, paymentMethodIDParameter, shippingCompanyParameter, rateParameter, shippingChargeParameter, shipToIDParameter, taxRateNameParameter, despatchDateParameter, deliveryDateParameter, pickUpDateParameter, shippingRateIDParameter, shipTaxParameter, shipTax2Parameter);
        }
    
        public virtual int CAT_AddCreditNote(Nullable<int> customerID, Nullable<decimal> netAmount, string reference, Nullable<decimal> tax)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var netAmountParameter = netAmount.HasValue ?
                new ObjectParameter("netAmount", netAmount) :
                new ObjectParameter("netAmount", typeof(decimal));
    
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddCreditNote", customerIDParameter, netAmountParameter, referenceParameter, taxParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddListItemText(Nullable<int> portalID, Nullable<int> createdByUser, string listItemTextDescr)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var listItemTextDescrParameter = listItemTextDescr != null ?
                new ObjectParameter("ListItemTextDescr", listItemTextDescr) :
                new ObjectParameter("ListItemTextDescr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddListItemText", portalIDParameter, createdByUserParameter, listItemTextDescrParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddListItemType(Nullable<int> portalID, Nullable<int> createdByUser, string listItemTypeName, string categoryIDs)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var listItemTypeNameParameter = listItemTypeName != null ?
                new ObjectParameter("ListItemTypeName", listItemTypeName) :
                new ObjectParameter("ListItemTypeName", typeof(string));
    
            var categoryIDsParameter = categoryIDs != null ?
                new ObjectParameter("CategoryIDs", categoryIDs) :
                new ObjectParameter("CategoryIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddListItemType", portalIDParameter, createdByUserParameter, listItemTypeNameParameter, categoryIDsParameter);
        }
    
        public virtual int CAT_AddNativeLanguage(string iD, string langName, Nullable<float> exchangeRate, string currencySymbol)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var langNameParameter = langName != null ?
                new ObjectParameter("LangName", langName) :
                new ObjectParameter("LangName", typeof(string));
    
            var exchangeRateParameter = exchangeRate.HasValue ?
                new ObjectParameter("ExchangeRate", exchangeRate) :
                new ObjectParameter("ExchangeRate", typeof(float));
    
            var currencySymbolParameter = currencySymbol != null ?
                new ObjectParameter("CurrencySymbol", currencySymbol) :
                new ObjectParameter("CurrencySymbol", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddNativeLanguage", iDParameter, langNameParameter, exchangeRateParameter, currencySymbolParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddOption(Nullable<int> portalID, Nullable<int> createdByUser, string optionName, string title, string description, string selections, string optionImage, string preselection, string status, Nullable<int> repeatCol, string controlType, Nullable<int> length, Nullable<int> columns, Nullable<int> rows, string spellCheck, string controlProperties, Nullable<bool> addToPOSelID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var optionNameParameter = optionName != null ?
                new ObjectParameter("OptionName", optionName) :
                new ObjectParameter("OptionName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var selectionsParameter = selections != null ?
                new ObjectParameter("Selections", selections) :
                new ObjectParameter("Selections", typeof(string));
    
            var optionImageParameter = optionImage != null ?
                new ObjectParameter("OptionImage", optionImage) :
                new ObjectParameter("OptionImage", typeof(string));
    
            var preselectionParameter = preselection != null ?
                new ObjectParameter("Preselection", preselection) :
                new ObjectParameter("Preselection", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var repeatColParameter = repeatCol.HasValue ?
                new ObjectParameter("RepeatCol", repeatCol) :
                new ObjectParameter("RepeatCol", typeof(int));
    
            var controlTypeParameter = controlType != null ?
                new ObjectParameter("ControlType", controlType) :
                new ObjectParameter("ControlType", typeof(string));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(int));
    
            var columnsParameter = columns.HasValue ?
                new ObjectParameter("Columns", columns) :
                new ObjectParameter("Columns", typeof(int));
    
            var rowsParameter = rows.HasValue ?
                new ObjectParameter("Rows", rows) :
                new ObjectParameter("Rows", typeof(int));
    
            var spellCheckParameter = spellCheck != null ?
                new ObjectParameter("SpellCheck", spellCheck) :
                new ObjectParameter("SpellCheck", typeof(string));
    
            var controlPropertiesParameter = controlProperties != null ?
                new ObjectParameter("ControlProperties", controlProperties) :
                new ObjectParameter("ControlProperties", typeof(string));
    
            var addToPOSelIDParameter = addToPOSelID.HasValue ?
                new ObjectParameter("AddToPOSelID", addToPOSelID) :
                new ObjectParameter("AddToPOSelID", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddOption", portalIDParameter, createdByUserParameter, optionNameParameter, titleParameter, descriptionParameter, selectionsParameter, optionImageParameter, preselectionParameter, statusParameter, repeatColParameter, controlTypeParameter, lengthParameter, columnsParameter, rowsParameter, spellCheckParameter, controlPropertiesParameter, addToPOSelIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddPaymentMethodPermission(Nullable<int> paymentMethodID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> createdByUserID)
        {
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddPaymentMethodPermission", paymentMethodIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, createdByUserIDParameter);
        }
    
        public virtual int CAT_AddPayPalSubscrOrder(Nullable<int> customerID, Nullable<int> productID, Nullable<decimal> unitCost, Nullable<System.DateTime> orderDate, string paymentType, string paymentState, Nullable<int> referrerUserID, string uRLReferrer, Nullable<decimal> vendorCommission, Nullable<decimal> referrerCommission, Nullable<int> rewardPeriod, string options, Nullable<decimal> tax, Nullable<decimal> tax2, string taxRateName, ObjectParameter orderID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var paymentStateParameter = paymentState != null ?
                new ObjectParameter("PaymentState", paymentState) :
                new ObjectParameter("PaymentState", typeof(string));
    
            var referrerUserIDParameter = referrerUserID.HasValue ?
                new ObjectParameter("ReferrerUserID", referrerUserID) :
                new ObjectParameter("ReferrerUserID", typeof(int));
    
            var uRLReferrerParameter = uRLReferrer != null ?
                new ObjectParameter("URLReferrer", uRLReferrer) :
                new ObjectParameter("URLReferrer", typeof(string));
    
            var vendorCommissionParameter = vendorCommission.HasValue ?
                new ObjectParameter("VendorCommission", vendorCommission) :
                new ObjectParameter("VendorCommission", typeof(decimal));
    
            var referrerCommissionParameter = referrerCommission.HasValue ?
                new ObjectParameter("ReferrerCommission", referrerCommission) :
                new ObjectParameter("ReferrerCommission", typeof(decimal));
    
            var rewardPeriodParameter = rewardPeriod.HasValue ?
                new ObjectParameter("RewardPeriod", rewardPeriod) :
                new ObjectParameter("RewardPeriod", typeof(int));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var tax2Parameter = tax2.HasValue ?
                new ObjectParameter("Tax2", tax2) :
                new ObjectParameter("Tax2", typeof(decimal));
    
            var taxRateNameParameter = taxRateName != null ?
                new ObjectParameter("TaxRateName", taxRateName) :
                new ObjectParameter("TaxRateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddPayPalSubscrOrder", customerIDParameter, productIDParameter, unitCostParameter, orderDateParameter, paymentTypeParameter, paymentStateParameter, referrerUserIDParameter, uRLReferrerParameter, vendorCommissionParameter, referrerCommissionParameter, rewardPeriodParameter, optionsParameter, taxParameter, tax2Parameter, taxRateNameParameter, orderID);
        }
    
        public virtual int CAT_AddPeriod(Nullable<int> productID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> minDays, Nullable<decimal> seasonalPrice, Nullable<int> seasonID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var minDaysParameter = minDays.HasValue ?
                new ObjectParameter("MinDays", minDays) :
                new ObjectParameter("MinDays", typeof(int));
    
            var seasonalPriceParameter = seasonalPrice.HasValue ?
                new ObjectParameter("SeasonalPrice", seasonalPrice) :
                new ObjectParameter("SeasonalPrice", typeof(decimal));
    
            var seasonIDParameter = seasonID.HasValue ?
                new ObjectParameter("SeasonID", seasonID) :
                new ObjectParameter("SeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddPeriod", productIDParameter, startDateParameter, endDateParameter, minDaysParameter, seasonalPriceParameter, seasonIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddPermission(Nullable<int> moduleDefID, string permissionCode, string permissionKey, string permissionName)
        {
            var moduleDefIDParameter = moduleDefID.HasValue ?
                new ObjectParameter("ModuleDefID", moduleDefID) :
                new ObjectParameter("ModuleDefID", typeof(int));
    
            var permissionCodeParameter = permissionCode != null ?
                new ObjectParameter("PermissionCode", permissionCode) :
                new ObjectParameter("PermissionCode", typeof(string));
    
            var permissionKeyParameter = permissionKey != null ?
                new ObjectParameter("PermissionKey", permissionKey) :
                new ObjectParameter("PermissionKey", typeof(string));
    
            var permissionNameParameter = permissionName != null ?
                new ObjectParameter("PermissionName", permissionName) :
                new ObjectParameter("PermissionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddPermission", moduleDefIDParameter, permissionCodeParameter, permissionKeyParameter, permissionNameParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddPriceRule(Nullable<int> portalID, string description, Nullable<int> productID, Nullable<int> alsoPurchasedProductID, Nullable<int> userID, string roles, Nullable<int> categoryID, Nullable<int> category2ID, string category3, Nullable<int> advCatID, string formula, Nullable<decimal> minimum, string couponCodes, Nullable<bool> removeUsedCoupons, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> cartTotal, Nullable<int> billingPeriod, Nullable<decimal> pointsPerCurrencyUnit)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var alsoPurchasedProductIDParameter = alsoPurchasedProductID.HasValue ?
                new ObjectParameter("AlsoPurchasedProductID", alsoPurchasedProductID) :
                new ObjectParameter("AlsoPurchasedProductID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var minimumParameter = minimum.HasValue ?
                new ObjectParameter("Minimum", minimum) :
                new ObjectParameter("Minimum", typeof(decimal));
    
            var couponCodesParameter = couponCodes != null ?
                new ObjectParameter("CouponCodes", couponCodes) :
                new ObjectParameter("CouponCodes", typeof(string));
    
            var removeUsedCouponsParameter = removeUsedCoupons.HasValue ?
                new ObjectParameter("RemoveUsedCoupons", removeUsedCoupons) :
                new ObjectParameter("RemoveUsedCoupons", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cartTotalParameter = cartTotal.HasValue ?
                new ObjectParameter("CartTotal", cartTotal) :
                new ObjectParameter("CartTotal", typeof(decimal));
    
            var billingPeriodParameter = billingPeriod.HasValue ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(int));
    
            var pointsPerCurrencyUnitParameter = pointsPerCurrencyUnit.HasValue ?
                new ObjectParameter("PointsPerCurrencyUnit", pointsPerCurrencyUnit) :
                new ObjectParameter("PointsPerCurrencyUnit", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddPriceRule", portalIDParameter, descriptionParameter, productIDParameter, alsoPurchasedProductIDParameter, userIDParameter, rolesParameter, categoryIDParameter, category2IDParameter, category3Parameter, advCatIDParameter, formulaParameter, minimumParameter, couponCodesParameter, removeUsedCouponsParameter, startDateParameter, endDateParameter, cartTotalParameter, billingPeriodParameter, pointsPerCurrencyUnitParameter);
        }
    
        public virtual int CAT_AddProductFile(Nullable<int> productID, string fileName, string description, string mediaType, Nullable<int> viewOrder, string title, string buttonIcon, Nullable<int> viewerID, string displayLocation, string viewPermissions, Nullable<int> maxNumberOfClicks, Nullable<int> accessPeriod, string reOrderLink, string pOSelID, string maxThumbWidth, string maxThumbHeight, Nullable<bool> applyToExitingOrders, Nullable<int> createdByUserID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var mediaTypeParameter = mediaType != null ?
                new ObjectParameter("MediaType", mediaType) :
                new ObjectParameter("MediaType", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var buttonIconParameter = buttonIcon != null ?
                new ObjectParameter("ButtonIcon", buttonIcon) :
                new ObjectParameter("ButtonIcon", typeof(string));
    
            var viewerIDParameter = viewerID.HasValue ?
                new ObjectParameter("ViewerID", viewerID) :
                new ObjectParameter("ViewerID", typeof(int));
    
            var displayLocationParameter = displayLocation != null ?
                new ObjectParameter("DisplayLocation", displayLocation) :
                new ObjectParameter("DisplayLocation", typeof(string));
    
            var viewPermissionsParameter = viewPermissions != null ?
                new ObjectParameter("ViewPermissions", viewPermissions) :
                new ObjectParameter("ViewPermissions", typeof(string));
    
            var maxNumberOfClicksParameter = maxNumberOfClicks.HasValue ?
                new ObjectParameter("MaxNumberOfClicks", maxNumberOfClicks) :
                new ObjectParameter("MaxNumberOfClicks", typeof(int));
    
            var accessPeriodParameter = accessPeriod.HasValue ?
                new ObjectParameter("AccessPeriod", accessPeriod) :
                new ObjectParameter("AccessPeriod", typeof(int));
    
            var reOrderLinkParameter = reOrderLink != null ?
                new ObjectParameter("ReOrderLink", reOrderLink) :
                new ObjectParameter("ReOrderLink", typeof(string));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var maxThumbWidthParameter = maxThumbWidth != null ?
                new ObjectParameter("MaxThumbWidth", maxThumbWidth) :
                new ObjectParameter("MaxThumbWidth", typeof(string));
    
            var maxThumbHeightParameter = maxThumbHeight != null ?
                new ObjectParameter("MaxThumbHeight", maxThumbHeight) :
                new ObjectParameter("MaxThumbHeight", typeof(string));
    
            var applyToExitingOrdersParameter = applyToExitingOrders.HasValue ?
                new ObjectParameter("ApplyToExitingOrders", applyToExitingOrders) :
                new ObjectParameter("ApplyToExitingOrders", typeof(bool));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddProductFile", productIDParameter, fileNameParameter, descriptionParameter, mediaTypeParameter, viewOrderParameter, titleParameter, buttonIconParameter, viewerIDParameter, displayLocationParameter, viewPermissionsParameter, maxNumberOfClicksParameter, accessPeriodParameter, reOrderLinkParameter, pOSelIDParameter, maxThumbWidthParameter, maxThumbHeightParameter, applyToExitingOrdersParameter, createdByUserIDParameter);
        }
    
        public virtual int CAT_AddProductImage(Nullable<int> productID, string imageFile, string description, string imageType, Nullable<int> viewOrder)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var imageFileParameter = imageFile != null ?
                new ObjectParameter("ImageFile", imageFile) :
                new ObjectParameter("ImageFile", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var imageTypeParameter = imageType != null ?
                new ObjectParameter("ImageType", imageType) :
                new ObjectParameter("ImageType", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddProductImage", productIDParameter, imageFileParameter, descriptionParameter, imageTypeParameter, viewOrderParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddProductLITypeText(Nullable<int> productID, Nullable<int> typeTextID, Nullable<bool> multiSelect, Nullable<int> listItemTypeID, Nullable<int> listItemTextID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var typeTextIDParameter = typeTextID.HasValue ?
                new ObjectParameter("TypeTextID", typeTextID) :
                new ObjectParameter("TypeTextID", typeof(int));
    
            var multiSelectParameter = multiSelect.HasValue ?
                new ObjectParameter("MultiSelect", multiSelect) :
                new ObjectParameter("MultiSelect", typeof(bool));
    
            var listItemTypeIDParameter = listItemTypeID.HasValue ?
                new ObjectParameter("ListItemTypeID", listItemTypeID) :
                new ObjectParameter("ListItemTypeID", typeof(int));
    
            var listItemTextIDParameter = listItemTextID.HasValue ?
                new ObjectParameter("ListItemTextID", listItemTextID) :
                new ObjectParameter("ListItemTextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddProductLITypeText", productIDParameter, typeTextIDParameter, multiSelectParameter, listItemTypeIDParameter, listItemTextIDParameter);
        }
    
        public virtual int CAT_AddProductOption(Nullable<int> productID, Nullable<int> optionID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var optionIDParameter = optionID.HasValue ?
                new ObjectParameter("OptionID", optionID) :
                new ObjectParameter("OptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddProductOption", productIDParameter, optionIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddProductPermission(Nullable<int> productID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> createdByUserID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddProductPermission", productIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, createdByUserIDParameter);
        }
    
        public virtual int CAT_AddProductSlot(Nullable<int> productID, Nullable<int> slotID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var slotIDParameter = slotID.HasValue ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddProductSlot", productIDParameter, slotIDParameter);
        }
    
        public virtual int CAT_AddProductType(Nullable<int> portalID, Nullable<int> createdByUser, string productTypeName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var productTypeNameParameter = productTypeName != null ?
                new ObjectParameter("ProductTypeName", productTypeName) :
                new ObjectParameter("ProductTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddProductType", portalIDParameter, createdByUserParameter, productTypeNameParameter);
        }
    
        public virtual int CAT_AddProductTypeSpec(Nullable<int> productID, Nullable<int> typeSpecID, string kindOfProductTypeSpec)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var typeSpecIDParameter = typeSpecID.HasValue ?
                new ObjectParameter("TypeSpecID", typeSpecID) :
                new ObjectParameter("TypeSpecID", typeof(int));
    
            var kindOfProductTypeSpecParameter = kindOfProductTypeSpec != null ?
                new ObjectParameter("KindOfProductTypeSpec", kindOfProductTypeSpec) :
                new ObjectParameter("KindOfProductTypeSpec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddProductTypeSpec", productIDParameter, typeSpecIDParameter, kindOfProductTypeSpecParameter);
        }
    
        public virtual int CAT_AddProductZoneTax(Nullable<int> productID, Nullable<int> zoneNameID, Nullable<decimal> tax)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var zoneNameIDParameter = zoneNameID.HasValue ?
                new ObjectParameter("ZoneNameID", zoneNameID) :
                new ObjectParameter("ZoneNameID", typeof(int));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddProductZoneTax", productIDParameter, zoneNameIDParameter, taxParameter);
        }
    
        public virtual int CAT_AddRecurringOrder(Nullable<int> orderDetailsID, string paymentState, Nullable<decimal> vendorCommission, Nullable<decimal> referrerCommission, string options, ObjectParameter orderID)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var paymentStateParameter = paymentState != null ?
                new ObjectParameter("PaymentState", paymentState) :
                new ObjectParameter("PaymentState", typeof(string));
    
            var vendorCommissionParameter = vendorCommission.HasValue ?
                new ObjectParameter("VendorCommission", vendorCommission) :
                new ObjectParameter("VendorCommission", typeof(decimal));
    
            var referrerCommissionParameter = referrerCommission.HasValue ?
                new ObjectParameter("ReferrerCommission", referrerCommission) :
                new ObjectParameter("ReferrerCommission", typeof(decimal));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddRecurringOrder", orderDetailsIDParameter, paymentStateParameter, vendorCommissionParameter, referrerCommissionParameter, optionsParameter, orderID);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddShippingRate(string company, string rateName, string formula, string country, string stateProvince, Nullable<decimal> minimum, string adjustRate, string shipTime, Nullable<bool> visible, Nullable<bool> active, Nullable<int> portalID, string zipPostal, Nullable<int> createdByUser, string shipperEmailAddress, string shipperEmailSubjectTemplate, string shipperEmailMessageTemplate, string shipperEmailSendType)
        {
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var rateNameParameter = rateName != null ?
                new ObjectParameter("RateName", rateName) :
                new ObjectParameter("RateName", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var stateProvinceParameter = stateProvince != null ?
                new ObjectParameter("StateProvince", stateProvince) :
                new ObjectParameter("StateProvince", typeof(string));
    
            var minimumParameter = minimum.HasValue ?
                new ObjectParameter("Minimum", minimum) :
                new ObjectParameter("Minimum", typeof(decimal));
    
            var adjustRateParameter = adjustRate != null ?
                new ObjectParameter("AdjustRate", adjustRate) :
                new ObjectParameter("AdjustRate", typeof(string));
    
            var shipTimeParameter = shipTime != null ?
                new ObjectParameter("ShipTime", shipTime) :
                new ObjectParameter("ShipTime", typeof(string));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var zipPostalParameter = zipPostal != null ?
                new ObjectParameter("ZipPostal", zipPostal) :
                new ObjectParameter("ZipPostal", typeof(string));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var shipperEmailAddressParameter = shipperEmailAddress != null ?
                new ObjectParameter("ShipperEmailAddress", shipperEmailAddress) :
                new ObjectParameter("ShipperEmailAddress", typeof(string));
    
            var shipperEmailSubjectTemplateParameter = shipperEmailSubjectTemplate != null ?
                new ObjectParameter("ShipperEmailSubjectTemplate", shipperEmailSubjectTemplate) :
                new ObjectParameter("ShipperEmailSubjectTemplate", typeof(string));
    
            var shipperEmailMessageTemplateParameter = shipperEmailMessageTemplate != null ?
                new ObjectParameter("ShipperEmailMessageTemplate", shipperEmailMessageTemplate) :
                new ObjectParameter("ShipperEmailMessageTemplate", typeof(string));
    
            var shipperEmailSendTypeParameter = shipperEmailSendType != null ?
                new ObjectParameter("ShipperEmailSendType", shipperEmailSendType) :
                new ObjectParameter("ShipperEmailSendType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddShippingRate", companyParameter, rateNameParameter, formulaParameter, countryParameter, stateProvinceParameter, minimumParameter, adjustRateParameter, shipTimeParameter, visibleParameter, activeParameter, portalIDParameter, zipPostalParameter, createdByUserParameter, shipperEmailAddressParameter, shipperEmailSubjectTemplateParameter, shipperEmailMessageTemplateParameter, shipperEmailSendTypeParameter);
        }
    
        public virtual int CAT_AddSingleShipTo(Nullable<int> userID, string firstName, string lastName, string street, string unit, string city, string region, string country, string postalCode, string telephone, string profileProperties, ObjectParameter shipToID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddSingleShipTo", userIDParameter, firstNameParameter, lastNameParameter, streetParameter, unitParameter, cityParameter, regionParameter, countryParameter, postalCodeParameter, telephoneParameter, profilePropertiesParameter, shipToID);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddSlot(Nullable<int> portalID, Nullable<int> createdByUser, string slotName, string title, string description, string slotImage, Nullable<int> preselection, string status, Nullable<int> preselQuant)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var slotNameParameter = slotName != null ?
                new ObjectParameter("SlotName", slotName) :
                new ObjectParameter("SlotName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var slotImageParameter = slotImage != null ?
                new ObjectParameter("SlotImage", slotImage) :
                new ObjectParameter("SlotImage", typeof(string));
    
            var preselectionParameter = preselection.HasValue ?
                new ObjectParameter("Preselection", preselection) :
                new ObjectParameter("Preselection", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var preselQuantParameter = preselQuant.HasValue ?
                new ObjectParameter("PreselQuant", preselQuant) :
                new ObjectParameter("PreselQuant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddSlot", portalIDParameter, createdByUserParameter, slotNameParameter, titleParameter, descriptionParameter, slotImageParameter, preselectionParameter, statusParameter, preselQuantParameter);
        }
    
        public virtual int CAT_AddSlotProductType(Nullable<int> slotID, Nullable<int> productTypeID)
        {
            var slotIDParameter = slotID.HasValue ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(int));
    
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddSlotProductType", slotIDParameter, productTypeIDParameter);
        }
    
        public virtual int CAT_AddSpecification(Nullable<int> portalID, Nullable<int> createdByUser, string specificationName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var specificationNameParameter = specificationName != null ?
                new ObjectParameter("SpecificationName", specificationName) :
                new ObjectParameter("SpecificationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddSpecification", portalIDParameter, createdByUserParameter, specificationNameParameter);
        }
    
        public virtual int CAT_AddStoreCurrency(string storeCurrency, Nullable<float> exchangeRate, ObjectParameter storeCurrencyID)
        {
            var storeCurrencyParameter = storeCurrency != null ?
                new ObjectParameter("StoreCurrency", storeCurrency) :
                new ObjectParameter("StoreCurrency", typeof(string));
    
            var exchangeRateParameter = exchangeRate.HasValue ?
                new ObjectParameter("ExchangeRate", exchangeRate) :
                new ObjectParameter("ExchangeRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddStoreCurrency", storeCurrencyParameter, exchangeRateParameter, storeCurrencyID);
        }
    
        public virtual int CAT_AddSubscrExpiryDate(Nullable<int> orderDetailsID, Nullable<System.DateTime> subscrExpiryDate)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var subscrExpiryDateParameter = subscrExpiryDate.HasValue ?
                new ObjectParameter("SubscrExpiryDate", subscrExpiryDate) :
                new ObjectParameter("SubscrExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddSubscrExpiryDate", orderDetailsIDParameter, subscrExpiryDateParameter);
        }
    
        public virtual int CAT_AddSubZone(Nullable<int> mainZoneID, Nullable<int> zoneNameID, string city, string postalCode, Nullable<decimal> tax, Nullable<bool> taxShipping)
        {
            var mainZoneIDParameter = mainZoneID.HasValue ?
                new ObjectParameter("MainZoneID", mainZoneID) :
                new ObjectParameter("MainZoneID", typeof(int));
    
            var zoneNameIDParameter = zoneNameID.HasValue ?
                new ObjectParameter("ZoneNameID", zoneNameID) :
                new ObjectParameter("ZoneNameID", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var taxShippingParameter = taxShipping.HasValue ?
                new ObjectParameter("TaxShipping", taxShipping) :
                new ObjectParameter("TaxShipping", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddSubZone", mainZoneIDParameter, zoneNameIDParameter, cityParameter, postalCodeParameter, taxParameter, taxShippingParameter);
        }
    
        public virtual int CAT_AddTypeSpec(Nullable<int> productTypeID, Nullable<int> specificationID)
        {
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var specificationIDParameter = specificationID.HasValue ?
                new ObjectParameter("SpecificationID", specificationID) :
                new ObjectParameter("SpecificationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddTypeSpec", productTypeIDParameter, specificationIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddTypeText(Nullable<int> listItemTypeID, Nullable<int> listItemTextID)
        {
            var listItemTypeIDParameter = listItemTypeID.HasValue ?
                new ObjectParameter("ListItemTypeID", listItemTypeID) :
                new ObjectParameter("ListItemTypeID", typeof(int));
    
            var listItemTextIDParameter = listItemTextID.HasValue ?
                new ObjectParameter("ListItemTextID", listItemTextID) :
                new ObjectParameter("ListItemTextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddTypeText", listItemTypeIDParameter, listItemTextIDParameter);
        }
    
        public virtual int CAT_AddUpdatePOSel(string pOSelID, Nullable<int> pOSelStock, string pOSelImage, string pOSelSKU, string formula)
        {
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var pOSelStockParameter = pOSelStock.HasValue ?
                new ObjectParameter("POSelStock", pOSelStock) :
                new ObjectParameter("POSelStock", typeof(int));
    
            var pOSelImageParameter = pOSelImage != null ?
                new ObjectParameter("POSelImage", pOSelImage) :
                new ObjectParameter("POSelImage", typeof(string));
    
            var pOSelSKUParameter = pOSelSKU != null ?
                new ObjectParameter("POSelSKU", pOSelSKU) :
                new ObjectParameter("POSelSKU", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddUpdatePOSel", pOSelIDParameter, pOSelStockParameter, pOSelImageParameter, pOSelSKUParameter, formulaParameter);
        }
    
        public virtual int CAT_AddUpdateReferrer(Nullable<int> userID, Nullable<int> referrerUserID, Nullable<System.DateTime> rewardExpiryDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var referrerUserIDParameter = referrerUserID.HasValue ?
                new ObjectParameter("ReferrerUserID", referrerUserID) :
                new ObjectParameter("ReferrerUserID", typeof(int));
    
            var rewardExpiryDateParameter = rewardExpiryDate.HasValue ?
                new ObjectParameter("RewardExpiryDate", rewardExpiryDate) :
                new ObjectParameter("RewardExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddUpdateReferrer", userIDParameter, referrerUserIDParameter, rewardExpiryDateParameter);
        }
    
        public virtual int CAT_AddUpdateResource(string name, string value)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddUpdateResource", nameParameter, valueParameter);
        }
    
        public virtual int CAT_AddUpdateSettings(Nullable<int> portalID, Nullable<int> storeOwnerUserID, Nullable<int> postItems, Nullable<bool> storePriceType, Nullable<decimal> storeTax, string payPalID, string payPalCartName, Nullable<int> payPalReturnTabID, string storeEmail, string sMTPUserName, string sMTPPassword, Nullable<int> sMTPPort, string sMTPServer, Nullable<bool> showNodeImages, Nullable<bool> showPriceHistory, Nullable<bool> showPriceAgent, string payPalButtonURL, string licenceKey, Nullable<int> storePaymentTypes, Nullable<int> startPaymentTypes, Nullable<int> storeCCTypes, string cCLogin, string cCTransactionKey, string cCPassword, string cCCryptoPassword, string cCMerchantHash, Nullable<int> storeCurrencyID, Nullable<int> cCPaymentProcessorID, Nullable<bool> stockControl, string stockImage1, string stockImage2, string stockImage3, string stockImage4, Nullable<int> stockLimit1, Nullable<int> stockLimit2, Nullable<int> stockLimit3, string topTemplate, string bottomTemplate, string titleSide, Nullable<decimal> freightFlatRate, Nullable<decimal> freightCostsForKg, string freightCostsType, Nullable<decimal> freightCODCosts, Nullable<decimal> freightInsurance, Nullable<decimal> woFreightFromLimit, Nullable<bool> stockControlType, Nullable<decimal> orderUnderLimit, Nullable<bool> showOnlyIfStock, string priceOfferDescription, Nullable<bool> publicAttributes, Nullable<int> pagingPageSize, Nullable<bool> doNotShowTerms, Nullable<bool> enableShipping, Nullable<bool> folderLinks, Nullable<int> rewardPeriod, Nullable<decimal> referrerCommission, Nullable<decimal> vendorCommission, string skin, string emailTemplatePackage, Nullable<bool> saveCCData, string origCountry, string origStateProvince, string origZipPostal, string origCity, string uPSUserName, string uPSPassword, string uPSAccessLicense, string uSPSUserName, string uSPSPassword, string canPostMerchCPCID, Nullable<int> shippingCompanies, string limitRates, string excludeRates, string uPSPickup, string uPSPack, string dHLServices, string fedExPack, Nullable<bool> fedExGround, string rateBackup, string rateFailover, string adjustRate, string weightUnit, Nullable<bool> enableRequQuote, string importFields, string importFile, Nullable<bool> syncItems, Nullable<bool> currencyConverter, string invoiceCreationType, string cCTransactionType, string cCAdditionalParameters, string optionsTextFilter, Nullable<bool> inventoryCheck, string watermarkParams, string freightInsuranceBasis, Nullable<bool> cCTestMode, Nullable<bool> uSPSTestMode, string emailEncoding, string cCBlockList, string iPBlockList, string fedExAccountNumber, string fedExPickup, string fedExURL, Nullable<int> numberDecimalDigits, string uPSAccountNumber, Nullable<bool> uPSNegotiatedRates, string payPalURL, string payPalSandboxURL, Nullable<int> payPalCurrencyID, string payPalShippingAddress, Nullable<bool> payPalPassingIndividualItems, string unitOfMeasurement, Nullable<bool> emailSender1, Nullable<bool> enableAJAX, Nullable<int> pointsConversionRate, string affiliateCode, string analyticsCode, string fraktguideUserCode, string fraktguideProductIDs, string bidIncrementFormula, Nullable<bool> storePriceInputType, string cCUserName, Nullable<int> roleExpiryDateOffset, string uSPSServices, string origStreet, Nullable<bool> fedExNegotiatedRates)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var storeOwnerUserIDParameter = storeOwnerUserID.HasValue ?
                new ObjectParameter("StoreOwnerUserID", storeOwnerUserID) :
                new ObjectParameter("StoreOwnerUserID", typeof(int));
    
            var postItemsParameter = postItems.HasValue ?
                new ObjectParameter("PostItems", postItems) :
                new ObjectParameter("PostItems", typeof(int));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            var storeTaxParameter = storeTax.HasValue ?
                new ObjectParameter("StoreTax", storeTax) :
                new ObjectParameter("StoreTax", typeof(decimal));
    
            var payPalIDParameter = payPalID != null ?
                new ObjectParameter("PayPalID", payPalID) :
                new ObjectParameter("PayPalID", typeof(string));
    
            var payPalCartNameParameter = payPalCartName != null ?
                new ObjectParameter("PayPalCartName", payPalCartName) :
                new ObjectParameter("PayPalCartName", typeof(string));
    
            var payPalReturnTabIDParameter = payPalReturnTabID.HasValue ?
                new ObjectParameter("PayPalReturnTabID", payPalReturnTabID) :
                new ObjectParameter("PayPalReturnTabID", typeof(int));
    
            var storeEmailParameter = storeEmail != null ?
                new ObjectParameter("StoreEmail", storeEmail) :
                new ObjectParameter("StoreEmail", typeof(string));
    
            var sMTPUserNameParameter = sMTPUserName != null ?
                new ObjectParameter("SMTPUserName", sMTPUserName) :
                new ObjectParameter("SMTPUserName", typeof(string));
    
            var sMTPPasswordParameter = sMTPPassword != null ?
                new ObjectParameter("SMTPPassword", sMTPPassword) :
                new ObjectParameter("SMTPPassword", typeof(string));
    
            var sMTPPortParameter = sMTPPort.HasValue ?
                new ObjectParameter("SMTPPort", sMTPPort) :
                new ObjectParameter("SMTPPort", typeof(int));
    
            var sMTPServerParameter = sMTPServer != null ?
                new ObjectParameter("SMTPServer", sMTPServer) :
                new ObjectParameter("SMTPServer", typeof(string));
    
            var showNodeImagesParameter = showNodeImages.HasValue ?
                new ObjectParameter("ShowNodeImages", showNodeImages) :
                new ObjectParameter("ShowNodeImages", typeof(bool));
    
            var showPriceHistoryParameter = showPriceHistory.HasValue ?
                new ObjectParameter("ShowPriceHistory", showPriceHistory) :
                new ObjectParameter("ShowPriceHistory", typeof(bool));
    
            var showPriceAgentParameter = showPriceAgent.HasValue ?
                new ObjectParameter("ShowPriceAgent", showPriceAgent) :
                new ObjectParameter("ShowPriceAgent", typeof(bool));
    
            var payPalButtonURLParameter = payPalButtonURL != null ?
                new ObjectParameter("PayPalButtonURL", payPalButtonURL) :
                new ObjectParameter("PayPalButtonURL", typeof(string));
    
            var licenceKeyParameter = licenceKey != null ?
                new ObjectParameter("LicenceKey", licenceKey) :
                new ObjectParameter("LicenceKey", typeof(string));
    
            var storePaymentTypesParameter = storePaymentTypes.HasValue ?
                new ObjectParameter("StorePaymentTypes", storePaymentTypes) :
                new ObjectParameter("StorePaymentTypes", typeof(int));
    
            var startPaymentTypesParameter = startPaymentTypes.HasValue ?
                new ObjectParameter("StartPaymentTypes", startPaymentTypes) :
                new ObjectParameter("StartPaymentTypes", typeof(int));
    
            var storeCCTypesParameter = storeCCTypes.HasValue ?
                new ObjectParameter("StoreCCTypes", storeCCTypes) :
                new ObjectParameter("StoreCCTypes", typeof(int));
    
            var cCLoginParameter = cCLogin != null ?
                new ObjectParameter("CCLogin", cCLogin) :
                new ObjectParameter("CCLogin", typeof(string));
    
            var cCTransactionKeyParameter = cCTransactionKey != null ?
                new ObjectParameter("CCTransactionKey", cCTransactionKey) :
                new ObjectParameter("CCTransactionKey", typeof(string));
    
            var cCPasswordParameter = cCPassword != null ?
                new ObjectParameter("CCPassword", cCPassword) :
                new ObjectParameter("CCPassword", typeof(string));
    
            var cCCryptoPasswordParameter = cCCryptoPassword != null ?
                new ObjectParameter("CCCryptoPassword", cCCryptoPassword) :
                new ObjectParameter("CCCryptoPassword", typeof(string));
    
            var cCMerchantHashParameter = cCMerchantHash != null ?
                new ObjectParameter("CCMerchantHash", cCMerchantHash) :
                new ObjectParameter("CCMerchantHash", typeof(string));
    
            var storeCurrencyIDParameter = storeCurrencyID.HasValue ?
                new ObjectParameter("StoreCurrencyID", storeCurrencyID) :
                new ObjectParameter("StoreCurrencyID", typeof(int));
    
            var cCPaymentProcessorIDParameter = cCPaymentProcessorID.HasValue ?
                new ObjectParameter("CCPaymentProcessorID", cCPaymentProcessorID) :
                new ObjectParameter("CCPaymentProcessorID", typeof(int));
    
            var stockControlParameter = stockControl.HasValue ?
                new ObjectParameter("StockControl", stockControl) :
                new ObjectParameter("StockControl", typeof(bool));
    
            var stockImage1Parameter = stockImage1 != null ?
                new ObjectParameter("StockImage1", stockImage1) :
                new ObjectParameter("StockImage1", typeof(string));
    
            var stockImage2Parameter = stockImage2 != null ?
                new ObjectParameter("StockImage2", stockImage2) :
                new ObjectParameter("StockImage2", typeof(string));
    
            var stockImage3Parameter = stockImage3 != null ?
                new ObjectParameter("StockImage3", stockImage3) :
                new ObjectParameter("StockImage3", typeof(string));
    
            var stockImage4Parameter = stockImage4 != null ?
                new ObjectParameter("StockImage4", stockImage4) :
                new ObjectParameter("StockImage4", typeof(string));
    
            var stockLimit1Parameter = stockLimit1.HasValue ?
                new ObjectParameter("StockLimit1", stockLimit1) :
                new ObjectParameter("StockLimit1", typeof(int));
    
            var stockLimit2Parameter = stockLimit2.HasValue ?
                new ObjectParameter("StockLimit2", stockLimit2) :
                new ObjectParameter("StockLimit2", typeof(int));
    
            var stockLimit3Parameter = stockLimit3.HasValue ?
                new ObjectParameter("StockLimit3", stockLimit3) :
                new ObjectParameter("StockLimit3", typeof(int));
    
            var topTemplateParameter = topTemplate != null ?
                new ObjectParameter("TopTemplate", topTemplate) :
                new ObjectParameter("TopTemplate", typeof(string));
    
            var bottomTemplateParameter = bottomTemplate != null ?
                new ObjectParameter("BottomTemplate", bottomTemplate) :
                new ObjectParameter("BottomTemplate", typeof(string));
    
            var titleSideParameter = titleSide != null ?
                new ObjectParameter("TitleSide", titleSide) :
                new ObjectParameter("TitleSide", typeof(string));
    
            var freightFlatRateParameter = freightFlatRate.HasValue ?
                new ObjectParameter("FreightFlatRate", freightFlatRate) :
                new ObjectParameter("FreightFlatRate", typeof(decimal));
    
            var freightCostsForKgParameter = freightCostsForKg.HasValue ?
                new ObjectParameter("FreightCostsForKg", freightCostsForKg) :
                new ObjectParameter("FreightCostsForKg", typeof(decimal));
    
            var freightCostsTypeParameter = freightCostsType != null ?
                new ObjectParameter("FreightCostsType", freightCostsType) :
                new ObjectParameter("FreightCostsType", typeof(string));
    
            var freightCODCostsParameter = freightCODCosts.HasValue ?
                new ObjectParameter("FreightCODCosts", freightCODCosts) :
                new ObjectParameter("FreightCODCosts", typeof(decimal));
    
            var freightInsuranceParameter = freightInsurance.HasValue ?
                new ObjectParameter("FreightInsurance", freightInsurance) :
                new ObjectParameter("FreightInsurance", typeof(decimal));
    
            var woFreightFromLimitParameter = woFreightFromLimit.HasValue ?
                new ObjectParameter("woFreightFromLimit", woFreightFromLimit) :
                new ObjectParameter("woFreightFromLimit", typeof(decimal));
    
            var stockControlTypeParameter = stockControlType.HasValue ?
                new ObjectParameter("StockControlType", stockControlType) :
                new ObjectParameter("StockControlType", typeof(bool));
    
            var orderUnderLimitParameter = orderUnderLimit.HasValue ?
                new ObjectParameter("OrderUnderLimit", orderUnderLimit) :
                new ObjectParameter("OrderUnderLimit", typeof(decimal));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var priceOfferDescriptionParameter = priceOfferDescription != null ?
                new ObjectParameter("PriceOfferDescription", priceOfferDescription) :
                new ObjectParameter("PriceOfferDescription", typeof(string));
    
            var publicAttributesParameter = publicAttributes.HasValue ?
                new ObjectParameter("PublicAttributes", publicAttributes) :
                new ObjectParameter("PublicAttributes", typeof(bool));
    
            var pagingPageSizeParameter = pagingPageSize.HasValue ?
                new ObjectParameter("PagingPageSize", pagingPageSize) :
                new ObjectParameter("PagingPageSize", typeof(int));
    
            var doNotShowTermsParameter = doNotShowTerms.HasValue ?
                new ObjectParameter("DoNotShowTerms", doNotShowTerms) :
                new ObjectParameter("DoNotShowTerms", typeof(bool));
    
            var enableShippingParameter = enableShipping.HasValue ?
                new ObjectParameter("EnableShipping", enableShipping) :
                new ObjectParameter("EnableShipping", typeof(bool));
    
            var folderLinksParameter = folderLinks.HasValue ?
                new ObjectParameter("FolderLinks", folderLinks) :
                new ObjectParameter("FolderLinks", typeof(bool));
    
            var rewardPeriodParameter = rewardPeriod.HasValue ?
                new ObjectParameter("RewardPeriod", rewardPeriod) :
                new ObjectParameter("RewardPeriod", typeof(int));
    
            var referrerCommissionParameter = referrerCommission.HasValue ?
                new ObjectParameter("ReferrerCommission", referrerCommission) :
                new ObjectParameter("ReferrerCommission", typeof(decimal));
    
            var vendorCommissionParameter = vendorCommission.HasValue ?
                new ObjectParameter("VendorCommission", vendorCommission) :
                new ObjectParameter("VendorCommission", typeof(decimal));
    
            var skinParameter = skin != null ?
                new ObjectParameter("Skin", skin) :
                new ObjectParameter("Skin", typeof(string));
    
            var emailTemplatePackageParameter = emailTemplatePackage != null ?
                new ObjectParameter("EmailTemplatePackage", emailTemplatePackage) :
                new ObjectParameter("EmailTemplatePackage", typeof(string));
    
            var saveCCDataParameter = saveCCData.HasValue ?
                new ObjectParameter("SaveCCData", saveCCData) :
                new ObjectParameter("SaveCCData", typeof(bool));
    
            var origCountryParameter = origCountry != null ?
                new ObjectParameter("OrigCountry", origCountry) :
                new ObjectParameter("OrigCountry", typeof(string));
    
            var origStateProvinceParameter = origStateProvince != null ?
                new ObjectParameter("OrigStateProvince", origStateProvince) :
                new ObjectParameter("OrigStateProvince", typeof(string));
    
            var origZipPostalParameter = origZipPostal != null ?
                new ObjectParameter("OrigZipPostal", origZipPostal) :
                new ObjectParameter("OrigZipPostal", typeof(string));
    
            var origCityParameter = origCity != null ?
                new ObjectParameter("OrigCity", origCity) :
                new ObjectParameter("OrigCity", typeof(string));
    
            var uPSUserNameParameter = uPSUserName != null ?
                new ObjectParameter("UPSUserName", uPSUserName) :
                new ObjectParameter("UPSUserName", typeof(string));
    
            var uPSPasswordParameter = uPSPassword != null ?
                new ObjectParameter("UPSPassword", uPSPassword) :
                new ObjectParameter("UPSPassword", typeof(string));
    
            var uPSAccessLicenseParameter = uPSAccessLicense != null ?
                new ObjectParameter("UPSAccessLicense", uPSAccessLicense) :
                new ObjectParameter("UPSAccessLicense", typeof(string));
    
            var uSPSUserNameParameter = uSPSUserName != null ?
                new ObjectParameter("USPSUserName", uSPSUserName) :
                new ObjectParameter("USPSUserName", typeof(string));
    
            var uSPSPasswordParameter = uSPSPassword != null ?
                new ObjectParameter("USPSPassword", uSPSPassword) :
                new ObjectParameter("USPSPassword", typeof(string));
    
            var canPostMerchCPCIDParameter = canPostMerchCPCID != null ?
                new ObjectParameter("CanPostMerchCPCID", canPostMerchCPCID) :
                new ObjectParameter("CanPostMerchCPCID", typeof(string));
    
            var shippingCompaniesParameter = shippingCompanies.HasValue ?
                new ObjectParameter("ShippingCompanies", shippingCompanies) :
                new ObjectParameter("ShippingCompanies", typeof(int));
    
            var limitRatesParameter = limitRates != null ?
                new ObjectParameter("LimitRates", limitRates) :
                new ObjectParameter("LimitRates", typeof(string));
    
            var excludeRatesParameter = excludeRates != null ?
                new ObjectParameter("ExcludeRates", excludeRates) :
                new ObjectParameter("ExcludeRates", typeof(string));
    
            var uPSPickupParameter = uPSPickup != null ?
                new ObjectParameter("UPSPickup", uPSPickup) :
                new ObjectParameter("UPSPickup", typeof(string));
    
            var uPSPackParameter = uPSPack != null ?
                new ObjectParameter("UPSPack", uPSPack) :
                new ObjectParameter("UPSPack", typeof(string));
    
            var dHLServicesParameter = dHLServices != null ?
                new ObjectParameter("DHLServices", dHLServices) :
                new ObjectParameter("DHLServices", typeof(string));
    
            var fedExPackParameter = fedExPack != null ?
                new ObjectParameter("FedExPack", fedExPack) :
                new ObjectParameter("FedExPack", typeof(string));
    
            var fedExGroundParameter = fedExGround.HasValue ?
                new ObjectParameter("FedExGround", fedExGround) :
                new ObjectParameter("FedExGround", typeof(bool));
    
            var rateBackupParameter = rateBackup != null ?
                new ObjectParameter("RateBackup", rateBackup) :
                new ObjectParameter("RateBackup", typeof(string));
    
            var rateFailoverParameter = rateFailover != null ?
                new ObjectParameter("RateFailover", rateFailover) :
                new ObjectParameter("RateFailover", typeof(string));
    
            var adjustRateParameter = adjustRate != null ?
                new ObjectParameter("AdjustRate", adjustRate) :
                new ObjectParameter("AdjustRate", typeof(string));
    
            var weightUnitParameter = weightUnit != null ?
                new ObjectParameter("WeightUnit", weightUnit) :
                new ObjectParameter("WeightUnit", typeof(string));
    
            var enableRequQuoteParameter = enableRequQuote.HasValue ?
                new ObjectParameter("EnableRequQuote", enableRequQuote) :
                new ObjectParameter("EnableRequQuote", typeof(bool));
    
            var importFieldsParameter = importFields != null ?
                new ObjectParameter("ImportFields", importFields) :
                new ObjectParameter("ImportFields", typeof(string));
    
            var importFileParameter = importFile != null ?
                new ObjectParameter("ImportFile", importFile) :
                new ObjectParameter("ImportFile", typeof(string));
    
            var syncItemsParameter = syncItems.HasValue ?
                new ObjectParameter("SyncItems", syncItems) :
                new ObjectParameter("SyncItems", typeof(bool));
    
            var currencyConverterParameter = currencyConverter.HasValue ?
                new ObjectParameter("CurrencyConverter", currencyConverter) :
                new ObjectParameter("CurrencyConverter", typeof(bool));
    
            var invoiceCreationTypeParameter = invoiceCreationType != null ?
                new ObjectParameter("InvoiceCreationType", invoiceCreationType) :
                new ObjectParameter("InvoiceCreationType", typeof(string));
    
            var cCTransactionTypeParameter = cCTransactionType != null ?
                new ObjectParameter("CCTransactionType", cCTransactionType) :
                new ObjectParameter("CCTransactionType", typeof(string));
    
            var cCAdditionalParametersParameter = cCAdditionalParameters != null ?
                new ObjectParameter("CCAdditionalParameters", cCAdditionalParameters) :
                new ObjectParameter("CCAdditionalParameters", typeof(string));
    
            var optionsTextFilterParameter = optionsTextFilter != null ?
                new ObjectParameter("OptionsTextFilter", optionsTextFilter) :
                new ObjectParameter("OptionsTextFilter", typeof(string));
    
            var inventoryCheckParameter = inventoryCheck.HasValue ?
                new ObjectParameter("InventoryCheck", inventoryCheck) :
                new ObjectParameter("InventoryCheck", typeof(bool));
    
            var watermarkParamsParameter = watermarkParams != null ?
                new ObjectParameter("WatermarkParams", watermarkParams) :
                new ObjectParameter("WatermarkParams", typeof(string));
    
            var freightInsuranceBasisParameter = freightInsuranceBasis != null ?
                new ObjectParameter("FreightInsuranceBasis", freightInsuranceBasis) :
                new ObjectParameter("FreightInsuranceBasis", typeof(string));
    
            var cCTestModeParameter = cCTestMode.HasValue ?
                new ObjectParameter("CCTestMode", cCTestMode) :
                new ObjectParameter("CCTestMode", typeof(bool));
    
            var uSPSTestModeParameter = uSPSTestMode.HasValue ?
                new ObjectParameter("USPSTestMode", uSPSTestMode) :
                new ObjectParameter("USPSTestMode", typeof(bool));
    
            var emailEncodingParameter = emailEncoding != null ?
                new ObjectParameter("EmailEncoding", emailEncoding) :
                new ObjectParameter("EmailEncoding", typeof(string));
    
            var cCBlockListParameter = cCBlockList != null ?
                new ObjectParameter("CCBlockList", cCBlockList) :
                new ObjectParameter("CCBlockList", typeof(string));
    
            var iPBlockListParameter = iPBlockList != null ?
                new ObjectParameter("IPBlockList", iPBlockList) :
                new ObjectParameter("IPBlockList", typeof(string));
    
            var fedExAccountNumberParameter = fedExAccountNumber != null ?
                new ObjectParameter("FedExAccountNumber", fedExAccountNumber) :
                new ObjectParameter("FedExAccountNumber", typeof(string));
    
            var fedExPickupParameter = fedExPickup != null ?
                new ObjectParameter("FedExPickup", fedExPickup) :
                new ObjectParameter("FedExPickup", typeof(string));
    
            var fedExURLParameter = fedExURL != null ?
                new ObjectParameter("FedExURL", fedExURL) :
                new ObjectParameter("FedExURL", typeof(string));
    
            var numberDecimalDigitsParameter = numberDecimalDigits.HasValue ?
                new ObjectParameter("NumberDecimalDigits", numberDecimalDigits) :
                new ObjectParameter("NumberDecimalDigits", typeof(int));
    
            var uPSAccountNumberParameter = uPSAccountNumber != null ?
                new ObjectParameter("UPSAccountNumber", uPSAccountNumber) :
                new ObjectParameter("UPSAccountNumber", typeof(string));
    
            var uPSNegotiatedRatesParameter = uPSNegotiatedRates.HasValue ?
                new ObjectParameter("UPSNegotiatedRates", uPSNegotiatedRates) :
                new ObjectParameter("UPSNegotiatedRates", typeof(bool));
    
            var payPalURLParameter = payPalURL != null ?
                new ObjectParameter("PayPalURL", payPalURL) :
                new ObjectParameter("PayPalURL", typeof(string));
    
            var payPalSandboxURLParameter = payPalSandboxURL != null ?
                new ObjectParameter("PayPalSandboxURL", payPalSandboxURL) :
                new ObjectParameter("PayPalSandboxURL", typeof(string));
    
            var payPalCurrencyIDParameter = payPalCurrencyID.HasValue ?
                new ObjectParameter("PayPalCurrencyID", payPalCurrencyID) :
                new ObjectParameter("PayPalCurrencyID", typeof(int));
    
            var payPalShippingAddressParameter = payPalShippingAddress != null ?
                new ObjectParameter("PayPalShippingAddress", payPalShippingAddress) :
                new ObjectParameter("PayPalShippingAddress", typeof(string));
    
            var payPalPassingIndividualItemsParameter = payPalPassingIndividualItems.HasValue ?
                new ObjectParameter("PayPalPassingIndividualItems", payPalPassingIndividualItems) :
                new ObjectParameter("PayPalPassingIndividualItems", typeof(bool));
    
            var unitOfMeasurementParameter = unitOfMeasurement != null ?
                new ObjectParameter("UnitOfMeasurement", unitOfMeasurement) :
                new ObjectParameter("UnitOfMeasurement", typeof(string));
    
            var emailSender1Parameter = emailSender1.HasValue ?
                new ObjectParameter("EmailSender1", emailSender1) :
                new ObjectParameter("EmailSender1", typeof(bool));
    
            var enableAJAXParameter = enableAJAX.HasValue ?
                new ObjectParameter("EnableAJAX", enableAJAX) :
                new ObjectParameter("EnableAJAX", typeof(bool));
    
            var pointsConversionRateParameter = pointsConversionRate.HasValue ?
                new ObjectParameter("PointsConversionRate", pointsConversionRate) :
                new ObjectParameter("PointsConversionRate", typeof(int));
    
            var affiliateCodeParameter = affiliateCode != null ?
                new ObjectParameter("AffiliateCode", affiliateCode) :
                new ObjectParameter("AffiliateCode", typeof(string));
    
            var analyticsCodeParameter = analyticsCode != null ?
                new ObjectParameter("AnalyticsCode", analyticsCode) :
                new ObjectParameter("AnalyticsCode", typeof(string));
    
            var fraktguideUserCodeParameter = fraktguideUserCode != null ?
                new ObjectParameter("FraktguideUserCode", fraktguideUserCode) :
                new ObjectParameter("FraktguideUserCode", typeof(string));
    
            var fraktguideProductIDsParameter = fraktguideProductIDs != null ?
                new ObjectParameter("FraktguideProductIDs", fraktguideProductIDs) :
                new ObjectParameter("FraktguideProductIDs", typeof(string));
    
            var bidIncrementFormulaParameter = bidIncrementFormula != null ?
                new ObjectParameter("BidIncrementFormula", bidIncrementFormula) :
                new ObjectParameter("BidIncrementFormula", typeof(string));
    
            var storePriceInputTypeParameter = storePriceInputType.HasValue ?
                new ObjectParameter("StorePriceInputType", storePriceInputType) :
                new ObjectParameter("StorePriceInputType", typeof(bool));
    
            var cCUserNameParameter = cCUserName != null ?
                new ObjectParameter("CCUserName", cCUserName) :
                new ObjectParameter("CCUserName", typeof(string));
    
            var roleExpiryDateOffsetParameter = roleExpiryDateOffset.HasValue ?
                new ObjectParameter("RoleExpiryDateOffset", roleExpiryDateOffset) :
                new ObjectParameter("RoleExpiryDateOffset", typeof(int));
    
            var uSPSServicesParameter = uSPSServices != null ?
                new ObjectParameter("USPSServices", uSPSServices) :
                new ObjectParameter("USPSServices", typeof(string));
    
            var origStreetParameter = origStreet != null ?
                new ObjectParameter("OrigStreet", origStreet) :
                new ObjectParameter("OrigStreet", typeof(string));
    
            var fedExNegotiatedRatesParameter = fedExNegotiatedRates.HasValue ?
                new ObjectParameter("FedExNegotiatedRates", fedExNegotiatedRates) :
                new ObjectParameter("FedExNegotiatedRates", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddUpdateSettings", portalIDParameter, storeOwnerUserIDParameter, postItemsParameter, storePriceTypeParameter, storeTaxParameter, payPalIDParameter, payPalCartNameParameter, payPalReturnTabIDParameter, storeEmailParameter, sMTPUserNameParameter, sMTPPasswordParameter, sMTPPortParameter, sMTPServerParameter, showNodeImagesParameter, showPriceHistoryParameter, showPriceAgentParameter, payPalButtonURLParameter, licenceKeyParameter, storePaymentTypesParameter, startPaymentTypesParameter, storeCCTypesParameter, cCLoginParameter, cCTransactionKeyParameter, cCPasswordParameter, cCCryptoPasswordParameter, cCMerchantHashParameter, storeCurrencyIDParameter, cCPaymentProcessorIDParameter, stockControlParameter, stockImage1Parameter, stockImage2Parameter, stockImage3Parameter, stockImage4Parameter, stockLimit1Parameter, stockLimit2Parameter, stockLimit3Parameter, topTemplateParameter, bottomTemplateParameter, titleSideParameter, freightFlatRateParameter, freightCostsForKgParameter, freightCostsTypeParameter, freightCODCostsParameter, freightInsuranceParameter, woFreightFromLimitParameter, stockControlTypeParameter, orderUnderLimitParameter, showOnlyIfStockParameter, priceOfferDescriptionParameter, publicAttributesParameter, pagingPageSizeParameter, doNotShowTermsParameter, enableShippingParameter, folderLinksParameter, rewardPeriodParameter, referrerCommissionParameter, vendorCommissionParameter, skinParameter, emailTemplatePackageParameter, saveCCDataParameter, origCountryParameter, origStateProvinceParameter, origZipPostalParameter, origCityParameter, uPSUserNameParameter, uPSPasswordParameter, uPSAccessLicenseParameter, uSPSUserNameParameter, uSPSPasswordParameter, canPostMerchCPCIDParameter, shippingCompaniesParameter, limitRatesParameter, excludeRatesParameter, uPSPickupParameter, uPSPackParameter, dHLServicesParameter, fedExPackParameter, fedExGroundParameter, rateBackupParameter, rateFailoverParameter, adjustRateParameter, weightUnitParameter, enableRequQuoteParameter, importFieldsParameter, importFileParameter, syncItemsParameter, currencyConverterParameter, invoiceCreationTypeParameter, cCTransactionTypeParameter, cCAdditionalParametersParameter, optionsTextFilterParameter, inventoryCheckParameter, watermarkParamsParameter, freightInsuranceBasisParameter, cCTestModeParameter, uSPSTestModeParameter, emailEncodingParameter, cCBlockListParameter, iPBlockListParameter, fedExAccountNumberParameter, fedExPickupParameter, fedExURLParameter, numberDecimalDigitsParameter, uPSAccountNumberParameter, uPSNegotiatedRatesParameter, payPalURLParameter, payPalSandboxURLParameter, payPalCurrencyIDParameter, payPalShippingAddressParameter, payPalPassingIndividualItemsParameter, unitOfMeasurementParameter, emailSender1Parameter, enableAJAXParameter, pointsConversionRateParameter, affiliateCodeParameter, analyticsCodeParameter, fraktguideUserCodeParameter, fraktguideProductIDsParameter, bidIncrementFormulaParameter, storePriceInputTypeParameter, cCUserNameParameter, roleExpiryDateOffsetParameter, uSPSServicesParameter, origStreetParameter, fedExNegotiatedRatesParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_AddVendorPermission(Nullable<int> portalID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<int> maxCount, Nullable<int> userID, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var maxCountParameter = maxCount.HasValue ?
                new ObjectParameter("MaxCount", maxCount) :
                new ObjectParameter("MaxCount", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_AddVendorPermission", portalIDParameter, permissionIDParameter, roleIDParameter, maxCountParameter, userIDParameter, createdByUserIDParameter);
        }
    
        public virtual int CAT_AddZoneName(Nullable<int> portalID, string zoneName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var zoneNameParameter = zoneName != null ?
                new ObjectParameter("ZoneName", zoneName) :
                new ObjectParameter("ZoneName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AddZoneName", portalIDParameter, zoneNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_AdvCatIDByAdvCatImportID(string advCatImportID, Nullable<int> portalID)
        {
            var advCatImportIDParameter = advCatImportID != null ?
                new ObjectParameter("AdvCatImportID", advCatImportID) :
                new ObjectParameter("AdvCatImportID", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_AdvCatIDByAdvCatImportID", advCatImportIDParameter, portalIDParameter);
        }
    
        public virtual int CAT_AuditLogDelete(Nullable<int> auditLogID, string versionGUID)
        {
            var auditLogIDParameter = auditLogID.HasValue ?
                new ObjectParameter("AuditLogID", auditLogID) :
                new ObjectParameter("AuditLogID", typeof(int));
    
            var versionGUIDParameter = versionGUID != null ?
                new ObjectParameter("VersionGUID", versionGUID) :
                new ObjectParameter("VersionGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AuditLogDelete", auditLogIDParameter, versionGUIDParameter);
        }
    
        public virtual ObjectResult<CAT_AuditLogGet_Result> CAT_AuditLogGet(Nullable<int> auditLogID)
        {
            var auditLogIDParameter = auditLogID.HasValue ?
                new ObjectParameter("AuditLogID", auditLogID) :
                new ObjectParameter("AuditLogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_AuditLogGet_Result>("CAT_AuditLogGet", auditLogIDParameter);
        }
    
        public virtual int CAT_AuditLogRestore(Nullable<int> auditLogID, string versionGUID, string oldNew, Nullable<int> lastModifiedByUserID)
        {
            var auditLogIDParameter = auditLogID.HasValue ?
                new ObjectParameter("AuditLogID", auditLogID) :
                new ObjectParameter("AuditLogID", typeof(int));
    
            var versionGUIDParameter = versionGUID != null ?
                new ObjectParameter("VersionGUID", versionGUID) :
                new ObjectParameter("VersionGUID", typeof(string));
    
            var oldNewParameter = oldNew != null ?
                new ObjectParameter("OldNew", oldNew) :
                new ObjectParameter("OldNew", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_AuditLogRestore", auditLogIDParameter, versionGUIDParameter, oldNewParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual ObjectResult<CAT_AuditLogsGet_Result> CAT_AuditLogsGet(Nullable<int> portalID, string versionGUID, Nullable<bool> groupByVersion)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var versionGUIDParameter = versionGUID != null ?
                new ObjectParameter("VersionGUID", versionGUID) :
                new ObjectParameter("VersionGUID", typeof(string));
    
            var groupByVersionParameter = groupByVersion.HasValue ?
                new ObjectParameter("GroupByVersion", groupByVersion) :
                new ObjectParameter("GroupByVersion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_AuditLogsGet_Result>("CAT_AuditLogsGet", portalIDParameter, versionGUIDParameter, groupByVersionParameter);
        }
    
        public virtual ObjectResult<CAT_AuditLogsOrdersGet_Result> CAT_AuditLogsOrdersGet(Nullable<int> portalID, string versionGUID, Nullable<bool> groupByVersion)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var versionGUIDParameter = versionGUID != null ?
                new ObjectParameter("VersionGUID", versionGUID) :
                new ObjectParameter("VersionGUID", typeof(string));
    
            var groupByVersionParameter = groupByVersion.HasValue ?
                new ObjectParameter("GroupByVersion", groupByVersion) :
                new ObjectParameter("GroupByVersion", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_AuditLogsOrdersGet_Result>("CAT_AuditLogsOrdersGet", portalIDParameter, versionGUIDParameter, groupByVersionParameter);
        }
    
        public virtual int CAT_BidDelete(Nullable<int> bidID)
        {
            var bidIDParameter = bidID.HasValue ?
                new ObjectParameter("BidID", bidID) :
                new ObjectParameter("BidID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_BidDelete", bidIDParameter);
        }
    
        public virtual int CAT_BidsGet(Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_BidsGet", portalIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_CartInsuredValue(string cartID, ObjectParameter insuredValue)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CartInsuredValue", cartIDParameter, insuredValue);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_CartPriceRuleAdd(Nullable<int> portalID, Nullable<int> ruleProductID, string description, Nullable<int> userID, string roles, string formula, string formula2, Nullable<bool> usableWithOtherRules, Nullable<bool> usableWithOtherCoupons, string productIDs, string categoryIDs, Nullable<int> maxNumberOfUses, Nullable<int> paymentTypes, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> enabled, Nullable<int> maxNumberOfUsesByUser, Nullable<int> applyFormulaTo)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var ruleProductIDParameter = ruleProductID.HasValue ?
                new ObjectParameter("RuleProductID", ruleProductID) :
                new ObjectParameter("RuleProductID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var formula2Parameter = formula2 != null ?
                new ObjectParameter("Formula2", formula2) :
                new ObjectParameter("Formula2", typeof(string));
    
            var usableWithOtherRulesParameter = usableWithOtherRules.HasValue ?
                new ObjectParameter("UsableWithOtherRules", usableWithOtherRules) :
                new ObjectParameter("UsableWithOtherRules", typeof(bool));
    
            var usableWithOtherCouponsParameter = usableWithOtherCoupons.HasValue ?
                new ObjectParameter("UsableWithOtherCoupons", usableWithOtherCoupons) :
                new ObjectParameter("UsableWithOtherCoupons", typeof(bool));
    
            var productIDsParameter = productIDs != null ?
                new ObjectParameter("ProductIDs", productIDs) :
                new ObjectParameter("ProductIDs", typeof(string));
    
            var categoryIDsParameter = categoryIDs != null ?
                new ObjectParameter("CategoryIDs", categoryIDs) :
                new ObjectParameter("CategoryIDs", typeof(string));
    
            var maxNumberOfUsesParameter = maxNumberOfUses.HasValue ?
                new ObjectParameter("MaxNumberOfUses", maxNumberOfUses) :
                new ObjectParameter("MaxNumberOfUses", typeof(int));
    
            var paymentTypesParameter = paymentTypes.HasValue ?
                new ObjectParameter("PaymentTypes", paymentTypes) :
                new ObjectParameter("PaymentTypes", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var maxNumberOfUsesByUserParameter = maxNumberOfUsesByUser.HasValue ?
                new ObjectParameter("MaxNumberOfUsesByUser", maxNumberOfUsesByUser) :
                new ObjectParameter("MaxNumberOfUsesByUser", typeof(int));
    
            var applyFormulaToParameter = applyFormulaTo.HasValue ?
                new ObjectParameter("ApplyFormulaTo", applyFormulaTo) :
                new ObjectParameter("ApplyFormulaTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_CartPriceRuleAdd", portalIDParameter, ruleProductIDParameter, descriptionParameter, userIDParameter, rolesParameter, formulaParameter, formula2Parameter, usableWithOtherRulesParameter, usableWithOtherCouponsParameter, productIDsParameter, categoryIDsParameter, maxNumberOfUsesParameter, paymentTypesParameter, startDateParameter, endDateParameter, enabledParameter, maxNumberOfUsesByUserParameter, applyFormulaToParameter);
        }
    
        public virtual int CAT_CartPriceRuleDelete(Nullable<int> cartPriceRuleID)
        {
            var cartPriceRuleIDParameter = cartPriceRuleID.HasValue ?
                new ObjectParameter("CartPriceRuleID", cartPriceRuleID) :
                new ObjectParameter("CartPriceRuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CartPriceRuleDelete", cartPriceRuleIDParameter);
        }
    
        public virtual ObjectResult<CAT_CartPriceRuleGet_Result> CAT_CartPriceRuleGet(Nullable<int> cartPriceRuleID)
        {
            var cartPriceRuleIDParameter = cartPriceRuleID.HasValue ?
                new ObjectParameter("CartPriceRuleID", cartPriceRuleID) :
                new ObjectParameter("CartPriceRuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CartPriceRuleGet_Result>("CAT_CartPriceRuleGet", cartPriceRuleIDParameter);
        }
    
        public virtual ObjectResult<CAT_CartPriceRuleGetByCoupon_Result> CAT_CartPriceRuleGetByCoupon(string code, Nullable<int> portalID, Nullable<bool> searchInDisabledRules)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var searchInDisabledRulesParameter = searchInDisabledRules.HasValue ?
                new ObjectParameter("SearchInDisabledRules", searchInDisabledRules) :
                new ObjectParameter("SearchInDisabledRules", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CartPriceRuleGetByCoupon_Result>("CAT_CartPriceRuleGetByCoupon", codeParameter, portalIDParameter, searchInDisabledRulesParameter);
        }
    
        public virtual ObjectResult<CAT_CartPriceRuleItemsExists_Result> CAT_CartPriceRuleItemsExists(Nullable<int> couponCodeID, string cartID)
        {
            var couponCodeIDParameter = couponCodeID.HasValue ?
                new ObjectParameter("CouponCodeID", couponCodeID) :
                new ObjectParameter("CouponCodeID", typeof(int));
    
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CartPriceRuleItemsExists_Result>("CAT_CartPriceRuleItemsExists", couponCodeIDParameter, cartIDParameter);
        }
    
        public virtual int CAT_CartPriceRuleItemsRemove(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CartPriceRuleItemsRemove", cartIDParameter);
        }
    
        public virtual int CAT_CartPriceRulesGet(Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CartPriceRulesGet", portalIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_CartPriceRulesGetByCoupon(string code, Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CartPriceRulesGetByCoupon", codeParameter, portalIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_CartPriceRuleUpdate(Nullable<int> cartPriceRuleID, Nullable<int> ruleProductID, string description, Nullable<int> userID, string roles, string formula, string formula2, Nullable<bool> usableWithOtherRules, Nullable<bool> usableWithOtherCoupons, string productIDs, string categoryIDs, Nullable<int> maxNumberOfUses, Nullable<int> paymentTypes, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> enabled, Nullable<int> maxNumberOfUsesByUser, Nullable<int> applyFormulaTo)
        {
            var cartPriceRuleIDParameter = cartPriceRuleID.HasValue ?
                new ObjectParameter("CartPriceRuleID", cartPriceRuleID) :
                new ObjectParameter("CartPriceRuleID", typeof(int));
    
            var ruleProductIDParameter = ruleProductID.HasValue ?
                new ObjectParameter("RuleProductID", ruleProductID) :
                new ObjectParameter("RuleProductID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var formula2Parameter = formula2 != null ?
                new ObjectParameter("Formula2", formula2) :
                new ObjectParameter("Formula2", typeof(string));
    
            var usableWithOtherRulesParameter = usableWithOtherRules.HasValue ?
                new ObjectParameter("UsableWithOtherRules", usableWithOtherRules) :
                new ObjectParameter("UsableWithOtherRules", typeof(bool));
    
            var usableWithOtherCouponsParameter = usableWithOtherCoupons.HasValue ?
                new ObjectParameter("UsableWithOtherCoupons", usableWithOtherCoupons) :
                new ObjectParameter("UsableWithOtherCoupons", typeof(bool));
    
            var productIDsParameter = productIDs != null ?
                new ObjectParameter("ProductIDs", productIDs) :
                new ObjectParameter("ProductIDs", typeof(string));
    
            var categoryIDsParameter = categoryIDs != null ?
                new ObjectParameter("CategoryIDs", categoryIDs) :
                new ObjectParameter("CategoryIDs", typeof(string));
    
            var maxNumberOfUsesParameter = maxNumberOfUses.HasValue ?
                new ObjectParameter("MaxNumberOfUses", maxNumberOfUses) :
                new ObjectParameter("MaxNumberOfUses", typeof(int));
    
            var paymentTypesParameter = paymentTypes.HasValue ?
                new ObjectParameter("PaymentTypes", paymentTypes) :
                new ObjectParameter("PaymentTypes", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var maxNumberOfUsesByUserParameter = maxNumberOfUsesByUser.HasValue ?
                new ObjectParameter("MaxNumberOfUsesByUser", maxNumberOfUsesByUser) :
                new ObjectParameter("MaxNumberOfUsesByUser", typeof(int));
    
            var applyFormulaToParameter = applyFormulaTo.HasValue ?
                new ObjectParameter("ApplyFormulaTo", applyFormulaTo) :
                new ObjectParameter("ApplyFormulaTo", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CartPriceRuleUpdate", cartPriceRuleIDParameter, ruleProductIDParameter, descriptionParameter, userIDParameter, rolesParameter, formulaParameter, formula2Parameter, usableWithOtherRulesParameter, usableWithOtherCouponsParameter, productIDsParameter, categoryIDsParameter, maxNumberOfUsesParameter, paymentTypesParameter, startDateParameter, endDateParameter, enabledParameter, maxNumberOfUsesByUserParameter, applyFormulaToParameter);
        }
    
        public virtual ObjectResult<string> CAT_CartShipExempt(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_CartShipExempt", cartIDParameter);
        }
    
        public virtual ObjectResult<string> CAT_CartShippingAddress(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_CartShippingAddress", cartIDParameter);
        }
    
        public virtual ObjectResult<CAT_Category1Dist_Result> CAT_Category1Dist(Nullable<int> portalID, Nullable<bool> showOnlyIfStock, Nullable<bool> isAdminRequest, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var isAdminRequestParameter = isAdminRequest.HasValue ?
                new ObjectParameter("IsAdminRequest", isAdminRequest) :
                new ObjectParameter("IsAdminRequest", typeof(bool));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_Category1Dist_Result>("CAT_Category1Dist", portalIDParameter, showOnlyIfStockParameter, isAdminRequestParameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_Category1HasChilds(string categoryID, Nullable<bool> showOnlyIfStock, ObjectParameter exists)
        {
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_Category1HasChilds", categoryIDParameter, showOnlyIfStockParameter, exists);
        }
    
        public virtual ObjectResult<CAT_Category2Dist_Result> CAT_Category2Dist(Nullable<int> categoryID, Nullable<bool> showOnlyIfStock)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_Category2Dist_Result>("CAT_Category2Dist", categoryIDParameter, showOnlyIfStockParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_Category2HasChilds(Nullable<int> categoryID, Nullable<int> category2ID, Nullable<bool> showOnlyIfStock, ObjectParameter exists)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_Category2HasChilds", categoryIDParameter, category2IDParameter, showOnlyIfStockParameter, exists);
        }
    
        public virtual ObjectResult<string> CAT_Category3Dist(Nullable<int> categoryID, Nullable<int> category2ID, Nullable<bool> showOnlyIfStock)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_Category3Dist", categoryIDParameter, category2IDParameter, showOnlyIfStockParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_CategoryExists(string categoryImportID, Nullable<int> portalID, ObjectParameter exists)
        {
            var categoryImportIDParameter = categoryImportID != null ?
                new ObjectParameter("CategoryImportID", categoryImportID) :
                new ObjectParameter("CategoryImportID", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_CategoryExists", categoryImportIDParameter, portalIDParameter, exists);
        }
    
        public virtual ObjectResult<CAT_CheckAllocation_Result> CAT_CheckAllocation(Nullable<int> productID, Nullable<System.DateTime> allocDate, Nullable<bool> showOnlyIfStock, string cartID, Nullable<bool> stockControlType)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var stockControlTypeParameter = stockControlType.HasValue ?
                new ObjectParameter("StockControlType", stockControlType) :
                new ObjectParameter("StockControlType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CheckAllocation_Result>("CAT_CheckAllocation", productIDParameter, allocDateParameter, showOnlyIfStockParameter, cartIDParameter, stockControlTypeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_CheckOrderState(Nullable<int> orderID, ObjectParameter completed)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_CheckOrderState", orderIDParameter, completed);
        }
    
        public virtual int CAT_ClearProductsandCategoriesDB(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ClearProductsandCategoriesDB", portalIDParameter);
        }
    
        public virtual int CAT_CloneProduct(Nullable<int> origProductID, ObjectParameter cloneProductID)
        {
            var origProductIDParameter = origProductID.HasValue ?
                new ObjectParameter("OrigProductID", origProductID) :
                new ObjectParameter("OrigProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CloneProduct", origProductIDParameter, cloneProductID);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_CommentAdd(Nullable<int> feedBackID, Nullable<int> createdByUser, Nullable<int> userID, string fromUserStatus, Nullable<int> portalID, Nullable<int> itemID, Nullable<int> recordID, Nullable<int> rating, string comment, Nullable<bool> approved)
        {
            var feedBackIDParameter = feedBackID.HasValue ?
                new ObjectParameter("FeedBackID", feedBackID) :
                new ObjectParameter("FeedBackID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var fromUserStatusParameter = fromUserStatus != null ?
                new ObjectParameter("FromUserStatus", fromUserStatus) :
                new ObjectParameter("FromUserStatus", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var commentParameter = comment != null ?
                new ObjectParameter("Comment", comment) :
                new ObjectParameter("Comment", typeof(string));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_CommentAdd", feedBackIDParameter, createdByUserParameter, userIDParameter, fromUserStatusParameter, portalIDParameter, itemIDParameter, recordIDParameter, ratingParameter, commentParameter, approvedParameter);
        }
    
        public virtual ObjectResult<CAT_CommentGetAll_Result> CAT_CommentGetAll(Nullable<int> feedBackID, Nullable<bool> descending, Nullable<int> recordID, Nullable<int> receiverUserID)
        {
            var feedBackIDParameter = feedBackID.HasValue ?
                new ObjectParameter("FeedBackID", feedBackID) :
                new ObjectParameter("FeedBackID", typeof(int));
    
            var descendingParameter = descending.HasValue ?
                new ObjectParameter("Descending", descending) :
                new ObjectParameter("Descending", typeof(bool));
    
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            var receiverUserIDParameter = receiverUserID.HasValue ?
                new ObjectParameter("ReceiverUserID", receiverUserID) :
                new ObjectParameter("ReceiverUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CommentGetAll_Result>("CAT_CommentGetAll", feedBackIDParameter, descendingParameter, recordIDParameter, receiverUserIDParameter);
        }
    
        public virtual int CAT_ConfigAddItem(string cartID, Nullable<int> productID, string options, Nullable<int> productSlotID, Nullable<System.DateTime> allocDate, Nullable<int> quantity, string sKU)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var productSlotIDParameter = productSlotID.HasValue ?
                new ObjectParameter("ProductSlotID", productSlotID) :
                new ObjectParameter("ProductSlotID", typeof(int));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ConfigAddItem", cartIDParameter, productIDParameter, optionsParameter, productSlotIDParameter, allocDateParameter, quantityParameter, sKUParameter);
        }
    
        public virtual int CAT_CouponCodeAdd(Nullable<int> cartPriceRuleID, string code, Nullable<bool> enabled)
        {
            var cartPriceRuleIDParameter = cartPriceRuleID.HasValue ?
                new ObjectParameter("CartPriceRuleID", cartPriceRuleID) :
                new ObjectParameter("CartPriceRuleID", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CouponCodeAdd", cartPriceRuleIDParameter, codeParameter, enabledParameter);
        }
    
        public virtual int CAT_CouponCodeDelete(Nullable<int> couponCodeID)
        {
            var couponCodeIDParameter = couponCodeID.HasValue ?
                new ObjectParameter("CouponCodeID", couponCodeID) :
                new ObjectParameter("CouponCodeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CouponCodeDelete", couponCodeIDParameter);
        }
    
        public virtual ObjectResult<CAT_CouponCodeGet_Result> CAT_CouponCodeGet(Nullable<int> couponCodeID)
        {
            var couponCodeIDParameter = couponCodeID.HasValue ?
                new ObjectParameter("CouponCodeID", couponCodeID) :
                new ObjectParameter("CouponCodeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CouponCodeGet_Result>("CAT_CouponCodeGet", couponCodeIDParameter);
        }
    
        public virtual ObjectResult<CAT_CouponCodeGetDetails_Result> CAT_CouponCodeGetDetails(Nullable<int> couponCodeID, Nullable<int> userID, string cartID)
        {
            var couponCodeIDParameter = couponCodeID.HasValue ?
                new ObjectParameter("CouponCodeID", couponCodeID) :
                new ObjectParameter("CouponCodeID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CouponCodeGetDetails_Result>("CAT_CouponCodeGetDetails", couponCodeIDParameter, userIDParameter, cartIDParameter);
        }
    
        public virtual int CAT_CouponCodesGetByPriceRule(Nullable<int> cartPriceRuleID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var cartPriceRuleIDParameter = cartPriceRuleID.HasValue ?
                new ObjectParameter("CartPriceRuleID", cartPriceRuleID) :
                new ObjectParameter("CartPriceRuleID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CouponCodesGetByPriceRule", cartPriceRuleIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_CouponCodeUpdate(Nullable<int> couponCodeID, string code, Nullable<bool> enabled)
        {
            var couponCodeIDParameter = couponCodeID.HasValue ?
                new ObjectParameter("CouponCodeID", couponCodeID) :
                new ObjectParameter("CouponCodeID", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CouponCodeUpdate", couponCodeIDParameter, codeParameter, enabledParameter);
        }
    
        public virtual ObjectResult<CAT_CustomerAlsoBought_Result> CAT_CustomerAlsoBought(Nullable<int> productID, Nullable<bool> showOnlyIfStock, Nullable<int> portalID, Nullable<int> numberOfItems)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var numberOfItemsParameter = numberOfItems.HasValue ?
                new ObjectParameter("NumberOfItems", numberOfItems) :
                new ObjectParameter("NumberOfItems", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_CustomerAlsoBought_Result>("CAT_CustomerAlsoBought", productIDParameter, showOnlyIfStockParameter, portalIDParameter, numberOfItemsParameter);
        }
    
        public virtual int CAT_CustomerBankAccountUpdate(Nullable<int> customerID, string bankName, string sortCode, string accountNumber, string accountOwnerName, string accountType)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var sortCodeParameter = sortCode != null ?
                new ObjectParameter("SortCode", sortCode) :
                new ObjectParameter("SortCode", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var accountOwnerNameParameter = accountOwnerName != null ?
                new ObjectParameter("AccountOwnerName", accountOwnerName) :
                new ObjectParameter("AccountOwnerName", typeof(string));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CustomerBankAccountUpdate", customerIDParameter, bankNameParameter, sortCodeParameter, accountNumberParameter, accountOwnerNameParameter, accountTypeParameter);
        }
    
        public virtual int CAT_CustomerInfoUpdate(Nullable<int> customerID, string customerNumber, string company, string department, string taxNumber, string taxIdentNumber, Nullable<decimal> tax, Nullable<int> price, Nullable<int> discount, Nullable<int> paymentTypes, string accountType, string account, string bankName, string sortCode, string bankAddress, string accountNumber, string accountOwnerName, string iBAN, string bIC, Nullable<bool> emailNotifications, string logoImage, Nullable<int> accountStatus, string statusNotes, Nullable<int> homePage, string classification)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("CustomerNumber", customerNumber) :
                new ObjectParameter("CustomerNumber", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var taxNumberParameter = taxNumber != null ?
                new ObjectParameter("TaxNumber", taxNumber) :
                new ObjectParameter("TaxNumber", typeof(string));
    
            var taxIdentNumberParameter = taxIdentNumber != null ?
                new ObjectParameter("TaxIdentNumber", taxIdentNumber) :
                new ObjectParameter("TaxIdentNumber", typeof(string));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(int));
    
            var discountParameter = discount.HasValue ?
                new ObjectParameter("Discount", discount) :
                new ObjectParameter("Discount", typeof(int));
    
            var paymentTypesParameter = paymentTypes.HasValue ?
                new ObjectParameter("PaymentTypes", paymentTypes) :
                new ObjectParameter("PaymentTypes", typeof(int));
    
            var accountTypeParameter = accountType != null ?
                new ObjectParameter("AccountType", accountType) :
                new ObjectParameter("AccountType", typeof(string));
    
            var accountParameter = account != null ?
                new ObjectParameter("Account", account) :
                new ObjectParameter("Account", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var sortCodeParameter = sortCode != null ?
                new ObjectParameter("SortCode", sortCode) :
                new ObjectParameter("SortCode", typeof(string));
    
            var bankAddressParameter = bankAddress != null ?
                new ObjectParameter("BankAddress", bankAddress) :
                new ObjectParameter("BankAddress", typeof(string));
    
            var accountNumberParameter = accountNumber != null ?
                new ObjectParameter("AccountNumber", accountNumber) :
                new ObjectParameter("AccountNumber", typeof(string));
    
            var accountOwnerNameParameter = accountOwnerName != null ?
                new ObjectParameter("AccountOwnerName", accountOwnerName) :
                new ObjectParameter("AccountOwnerName", typeof(string));
    
            var iBANParameter = iBAN != null ?
                new ObjectParameter("IBAN", iBAN) :
                new ObjectParameter("IBAN", typeof(string));
    
            var bICParameter = bIC != null ?
                new ObjectParameter("BIC", bIC) :
                new ObjectParameter("BIC", typeof(string));
    
            var emailNotificationsParameter = emailNotifications.HasValue ?
                new ObjectParameter("EmailNotifications", emailNotifications) :
                new ObjectParameter("EmailNotifications", typeof(bool));
    
            var logoImageParameter = logoImage != null ?
                new ObjectParameter("LogoImage", logoImage) :
                new ObjectParameter("LogoImage", typeof(string));
    
            var accountStatusParameter = accountStatus.HasValue ?
                new ObjectParameter("AccountStatus", accountStatus) :
                new ObjectParameter("AccountStatus", typeof(int));
    
            var statusNotesParameter = statusNotes != null ?
                new ObjectParameter("StatusNotes", statusNotes) :
                new ObjectParameter("StatusNotes", typeof(string));
    
            var homePageParameter = homePage.HasValue ?
                new ObjectParameter("HomePage", homePage) :
                new ObjectParameter("HomePage", typeof(int));
    
            var classificationParameter = classification != null ?
                new ObjectParameter("Classification", classification) :
                new ObjectParameter("Classification", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CustomerInfoUpdate", customerIDParameter, customerNumberParameter, companyParameter, departmentParameter, taxNumberParameter, taxIdentNumberParameter, taxParameter, priceParameter, discountParameter, paymentTypesParameter, accountTypeParameter, accountParameter, bankNameParameter, sortCodeParameter, bankAddressParameter, accountNumberParameter, accountOwnerNameParameter, iBANParameter, bICParameter, emailNotificationsParameter, logoImageParameter, accountStatusParameter, statusNotesParameter, homePageParameter, classificationParameter);
        }
    
        public virtual int CAT_CustomerSmallInfoUpdate(Nullable<int> customerID, string customerNumber, string company, string department, string taxNumber, string taxIdentNumber, Nullable<decimal> tax)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("CustomerNumber", customerNumber) :
                new ObjectParameter("CustomerNumber", typeof(string));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var departmentParameter = department != null ?
                new ObjectParameter("Department", department) :
                new ObjectParameter("Department", typeof(string));
    
            var taxNumberParameter = taxNumber != null ?
                new ObjectParameter("TaxNumber", taxNumber) :
                new ObjectParameter("TaxNumber", typeof(string));
    
            var taxIdentNumberParameter = taxIdentNumber != null ?
                new ObjectParameter("TaxIdentNumber", taxIdentNumber) :
                new ObjectParameter("TaxIdentNumber", typeof(string));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_CustomerSmallInfoUpdate", customerIDParameter, customerNumberParameter, companyParameter, departmentParameter, taxNumberParameter, taxIdentNumberParameter, taxParameter);
        }
    
        public virtual int CAT_DeleteAdvCat(Nullable<int> advCatId)
        {
            var advCatIdParameter = advCatId.HasValue ?
                new ObjectParameter("AdvCatId", advCatId) :
                new ObjectParameter("AdvCatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteAdvCat", advCatIdParameter);
        }
    
        public virtual int CAT_DeleteAdvCatPermission(Nullable<int> advCatPermissionID)
        {
            var advCatPermissionIDParameter = advCatPermissionID.HasValue ?
                new ObjectParameter("AdvCatPermissionID", advCatPermissionID) :
                new ObjectParameter("AdvCatPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteAdvCatPermission", advCatPermissionIDParameter);
        }
    
        public virtual int CAT_DeleteAdvCatPermissionsByAdvCatID(Nullable<int> advCatID)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteAdvCatPermissionsByAdvCatID", advCatIDParameter);
        }
    
        public virtual int CAT_DeleteAdvCatProduct(Nullable<int> advCatID, Nullable<int> productID)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteAdvCatProduct", advCatIDParameter, productIDParameter);
        }
    
        public virtual int CAT_DeleteCheckout(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteCheckout", cartIDParameter);
        }
    
        public virtual int CAT_DeleteCreditNote(Nullable<int> creditNoteID)
        {
            var creditNoteIDParameter = creditNoteID.HasValue ?
                new ObjectParameter("CreditNoteID", creditNoteID) :
                new ObjectParameter("CreditNoteID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteCreditNote", creditNoteIDParameter);
        }
    
        public virtual int CAT_DeleteCreditNoteData(Nullable<int> orderID, Nullable<int> creditNoteNumber, Nullable<int> lastModifiedByUserID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var creditNoteNumberParameter = creditNoteNumber.HasValue ?
                new ObjectParameter("CreditNoteNumber", creditNoteNumber) :
                new ObjectParameter("CreditNoteNumber", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteCreditNoteData", orderIDParameter, creditNoteNumberParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_DeleteInvoiceData(Nullable<int> orderID, Nullable<int> invoiceNumber, Nullable<int> lastModifiedByUserID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber.HasValue ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteInvoiceData", orderIDParameter, invoiceNumberParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_DeleteListItemText(Nullable<int> listItemTextID)
        {
            var listItemTextIDParameter = listItemTextID.HasValue ?
                new ObjectParameter("ListItemTextID", listItemTextID) :
                new ObjectParameter("ListItemTextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteListItemText", listItemTextIDParameter);
        }
    
        public virtual int CAT_DeleteListItemType(Nullable<int> listItemTypeID)
        {
            var listItemTypeIDParameter = listItemTypeID.HasValue ?
                new ObjectParameter("ListItemTypeID", listItemTypeID) :
                new ObjectParameter("ListItemTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteListItemType", listItemTypeIDParameter);
        }
    
        public virtual int CAT_DeleteNativeLanguage(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteNativeLanguage", iDParameter);
        }
    
        public virtual int CAT_DeleteOption(Nullable<int> optionID)
        {
            var optionIDParameter = optionID.HasValue ?
                new ObjectParameter("OptionID", optionID) :
                new ObjectParameter("OptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteOption", optionIDParameter);
        }
    
        public virtual int CAT_DeletePaymentMethodPermission(Nullable<int> paymentMethodPermissionID)
        {
            var paymentMethodPermissionIDParameter = paymentMethodPermissionID.HasValue ?
                new ObjectParameter("PaymentMethodPermissionID", paymentMethodPermissionID) :
                new ObjectParameter("PaymentMethodPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeletePaymentMethodPermission", paymentMethodPermissionIDParameter);
        }
    
        public virtual int CAT_DeletePaymentMethodPermissionsByPaymentMethodID(Nullable<int> paymentMethodID)
        {
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeletePaymentMethodPermissionsByPaymentMethodID", paymentMethodIDParameter);
        }
    
        public virtual int CAT_DeletePaymentMethodPermissionsByUserID(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeletePaymentMethodPermissionsByUserID", portalIDParameter, userIDParameter);
        }
    
        public virtual int CAT_DeletePeriod(Nullable<int> periodID)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeletePeriod", periodIDParameter);
        }
    
        public virtual int CAT_DeletePermission(Nullable<int> permissionID)
        {
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeletePermission", permissionIDParameter);
        }
    
        public virtual int CAT_DeletePOSel(string pOSelID)
        {
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeletePOSel", pOSelIDParameter);
        }
    
        public virtual int CAT_DeletePriceRule(Nullable<int> priceRuleID)
        {
            var priceRuleIDParameter = priceRuleID.HasValue ?
                new ObjectParameter("PriceRuleID", priceRuleID) :
                new ObjectParameter("PriceRuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeletePriceRule", priceRuleIDParameter);
        }
    
        public virtual int CAT_DeleteProductAdvCats(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductAdvCats", productIDParameter);
        }
    
        public virtual int CAT_DeleteProductFile(Nullable<int> fileID)
        {
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductFile", fileIDParameter);
        }
    
        public virtual int CAT_DeleteProductImage(Nullable<int> imageID)
        {
            var imageIDParameter = imageID.HasValue ?
                new ObjectParameter("ImageID", imageID) :
                new ObjectParameter("ImageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductImage", imageIDParameter);
        }
    
        public virtual int CAT_DeleteProductLITypeText(Nullable<int> productLITypeTextID)
        {
            var productLITypeTextIDParameter = productLITypeTextID.HasValue ?
                new ObjectParameter("ProductLITypeTextID", productLITypeTextID) :
                new ObjectParameter("ProductLITypeTextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductLITypeText", productLITypeTextIDParameter);
        }
    
        public virtual int CAT_DeleteProductOption(Nullable<int> productOptionID)
        {
            var productOptionIDParameter = productOptionID.HasValue ?
                new ObjectParameter("ProductOptionID", productOptionID) :
                new ObjectParameter("ProductOptionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductOption", productOptionIDParameter);
        }
    
        public virtual int CAT_DeleteProductPermission(Nullable<int> productPermissionID)
        {
            var productPermissionIDParameter = productPermissionID.HasValue ?
                new ObjectParameter("ProductPermissionID", productPermissionID) :
                new ObjectParameter("ProductPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductPermission", productPermissionIDParameter);
        }
    
        public virtual int CAT_DeleteProductPermissionsByProductID(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductPermissionsByProductID", productIDParameter);
        }
    
        public virtual int CAT_DeleteProductPermissionsByUserID(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductPermissionsByUserID", portalIDParameter, userIDParameter);
        }
    
        public virtual int CAT_DeleteProductSlot(Nullable<int> productSlotID)
        {
            var productSlotIDParameter = productSlotID.HasValue ?
                new ObjectParameter("ProductSlotID", productSlotID) :
                new ObjectParameter("ProductSlotID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductSlot", productSlotIDParameter);
        }
    
        public virtual int CAT_DeleteProductType(Nullable<int> productTypeID)
        {
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductType", productTypeIDParameter);
        }
    
        public virtual int CAT_DeleteProductTypeSpec(Nullable<int> productTypeSpecID)
        {
            var productTypeSpecIDParameter = productTypeSpecID.HasValue ?
                new ObjectParameter("ProductTypeSpecID", productTypeSpecID) :
                new ObjectParameter("ProductTypeSpecID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductTypeSpec", productTypeSpecIDParameter);
        }
    
        public virtual int CAT_DeleteProductZoneTax(Nullable<int> productZoneTaxID)
        {
            var productZoneTaxIDParameter = productZoneTaxID.HasValue ?
                new ObjectParameter("ProductZoneTaxID", productZoneTaxID) :
                new ObjectParameter("ProductZoneTaxID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteProductZoneTax", productZoneTaxIDParameter);
        }
    
        public virtual int CAT_DeleteResource(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteResource", nameParameter);
        }
    
        public virtual int CAT_DeleteResources(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteResources", nameParameter);
        }
    
        public virtual int CAT_DeleteShippingRate(Nullable<int> shippingRateID)
        {
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteShippingRate", shippingRateIDParameter);
        }
    
        public virtual int CAT_DeleteSlot(Nullable<int> slotID)
        {
            var slotIDParameter = slotID.HasValue ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteSlot", slotIDParameter);
        }
    
        public virtual int CAT_DeleteSlotProductType(Nullable<int> slotProductTypeID)
        {
            var slotProductTypeIDParameter = slotProductTypeID.HasValue ?
                new ObjectParameter("SlotProductTypeID", slotProductTypeID) :
                new ObjectParameter("SlotProductTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteSlotProductType", slotProductTypeIDParameter);
        }
    
        public virtual int CAT_DeleteSpecification(Nullable<int> specificationID)
        {
            var specificationIDParameter = specificationID.HasValue ?
                new ObjectParameter("SpecificationID", specificationID) :
                new ObjectParameter("SpecificationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteSpecification", specificationIDParameter);
        }
    
        public virtual int CAT_DeleteSubZone(Nullable<int> subZoneID)
        {
            var subZoneIDParameter = subZoneID.HasValue ?
                new ObjectParameter("SubZoneID", subZoneID) :
                new ObjectParameter("SubZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteSubZone", subZoneIDParameter);
        }
    
        public virtual int CAT_DeleteTypeSpec(Nullable<int> typeSpecID)
        {
            var typeSpecIDParameter = typeSpecID.HasValue ?
                new ObjectParameter("TypeSpecID", typeSpecID) :
                new ObjectParameter("TypeSpecID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteTypeSpec", typeSpecIDParameter);
        }
    
        public virtual int CAT_DeleteTypeText(Nullable<int> typeTextID)
        {
            var typeTextIDParameter = typeTextID.HasValue ?
                new ObjectParameter("TypeTextID", typeTextID) :
                new ObjectParameter("TypeTextID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteTypeText", typeTextIDParameter);
        }
    
        public virtual int CAT_DeleteVendorPermissionsByPortalID(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteVendorPermissionsByPortalID", portalIDParameter);
        }
    
        public virtual int CAT_DeleteVendorPermissionsByUserID(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_DeleteVendorPermissionsByUserID", portalIDParameter, userIDParameter);
        }
    
        public virtual int CAT_EmailBlockListAddItem(Nullable<int> portalID, string email)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_EmailBlockListAddItem", portalIDParameter, emailParameter);
        }
    
        public virtual ObjectResult<string> CAT_EmailBlockListExists(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_EmailBlockListExists", emailParameter);
        }
    
        public virtual int CAT_EmailBlockListRemoveEmail(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_EmailBlockListRemoveEmail", emailParameter);
        }
    
        public virtual int CAT_EmailBlockListRemoveItem(Nullable<int> emailBlockListID)
        {
            var emailBlockListIDParameter = emailBlockListID.HasValue ?
                new ObjectParameter("EmailBlockListID", emailBlockListID) :
                new ObjectParameter("EmailBlockListID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_EmailBlockListRemoveItem", emailBlockListIDParameter);
        }
    
        public virtual ObjectResult<CAT_ExtendedSearch_Result> CAT_ExtendedSearch(Nullable<bool> availabilityType, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> requestedNumber, Nullable<int> portalID, Nullable<int> advCatID, Nullable<int> categoryID, Nullable<int> category2ID, string category3, Nullable<decimal> minUnitCost, Nullable<decimal> maxUnitCost, Nullable<int> createdByUser, Nullable<bool> showOnlyIfStock, Nullable<int> listItemTypeID0, string listItemTextID0, Nullable<int> listItemTypeID1, string listItemTextID1, Nullable<int> listItemTypeID2, string listItemTextID2, Nullable<int> listItemTypeID3, string listItemTextID3, Nullable<int> listItemTypeID4, string listItemTextID4, Nullable<int> listItemTypeID5, string listItemTextID5, Nullable<int> listItemTypeID6, string listItemTextID6, Nullable<int> listItemTypeID7, string listItemTextID7, Nullable<int> listItemTypeID8, string listItemTextID8, Nullable<int> listItemTypeID9, string listItemTextID9)
        {
            var availabilityTypeParameter = availabilityType.HasValue ?
                new ObjectParameter("AvailabilityType", availabilityType) :
                new ObjectParameter("AvailabilityType", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var requestedNumberParameter = requestedNumber.HasValue ?
                new ObjectParameter("RequestedNumber", requestedNumber) :
                new ObjectParameter("RequestedNumber", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var minUnitCostParameter = minUnitCost.HasValue ?
                new ObjectParameter("MinUnitCost", minUnitCost) :
                new ObjectParameter("MinUnitCost", typeof(decimal));
    
            var maxUnitCostParameter = maxUnitCost.HasValue ?
                new ObjectParameter("MaxUnitCost", maxUnitCost) :
                new ObjectParameter("MaxUnitCost", typeof(decimal));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var listItemTypeID0Parameter = listItemTypeID0.HasValue ?
                new ObjectParameter("ListItemTypeID0", listItemTypeID0) :
                new ObjectParameter("ListItemTypeID0", typeof(int));
    
            var listItemTextID0Parameter = listItemTextID0 != null ?
                new ObjectParameter("ListItemTextID0", listItemTextID0) :
                new ObjectParameter("ListItemTextID0", typeof(string));
    
            var listItemTypeID1Parameter = listItemTypeID1.HasValue ?
                new ObjectParameter("ListItemTypeID1", listItemTypeID1) :
                new ObjectParameter("ListItemTypeID1", typeof(int));
    
            var listItemTextID1Parameter = listItemTextID1 != null ?
                new ObjectParameter("ListItemTextID1", listItemTextID1) :
                new ObjectParameter("ListItemTextID1", typeof(string));
    
            var listItemTypeID2Parameter = listItemTypeID2.HasValue ?
                new ObjectParameter("ListItemTypeID2", listItemTypeID2) :
                new ObjectParameter("ListItemTypeID2", typeof(int));
    
            var listItemTextID2Parameter = listItemTextID2 != null ?
                new ObjectParameter("ListItemTextID2", listItemTextID2) :
                new ObjectParameter("ListItemTextID2", typeof(string));
    
            var listItemTypeID3Parameter = listItemTypeID3.HasValue ?
                new ObjectParameter("ListItemTypeID3", listItemTypeID3) :
                new ObjectParameter("ListItemTypeID3", typeof(int));
    
            var listItemTextID3Parameter = listItemTextID3 != null ?
                new ObjectParameter("ListItemTextID3", listItemTextID3) :
                new ObjectParameter("ListItemTextID3", typeof(string));
    
            var listItemTypeID4Parameter = listItemTypeID4.HasValue ?
                new ObjectParameter("ListItemTypeID4", listItemTypeID4) :
                new ObjectParameter("ListItemTypeID4", typeof(int));
    
            var listItemTextID4Parameter = listItemTextID4 != null ?
                new ObjectParameter("ListItemTextID4", listItemTextID4) :
                new ObjectParameter("ListItemTextID4", typeof(string));
    
            var listItemTypeID5Parameter = listItemTypeID5.HasValue ?
                new ObjectParameter("ListItemTypeID5", listItemTypeID5) :
                new ObjectParameter("ListItemTypeID5", typeof(int));
    
            var listItemTextID5Parameter = listItemTextID5 != null ?
                new ObjectParameter("ListItemTextID5", listItemTextID5) :
                new ObjectParameter("ListItemTextID5", typeof(string));
    
            var listItemTypeID6Parameter = listItemTypeID6.HasValue ?
                new ObjectParameter("ListItemTypeID6", listItemTypeID6) :
                new ObjectParameter("ListItemTypeID6", typeof(int));
    
            var listItemTextID6Parameter = listItemTextID6 != null ?
                new ObjectParameter("ListItemTextID6", listItemTextID6) :
                new ObjectParameter("ListItemTextID6", typeof(string));
    
            var listItemTypeID7Parameter = listItemTypeID7.HasValue ?
                new ObjectParameter("ListItemTypeID7", listItemTypeID7) :
                new ObjectParameter("ListItemTypeID7", typeof(int));
    
            var listItemTextID7Parameter = listItemTextID7 != null ?
                new ObjectParameter("ListItemTextID7", listItemTextID7) :
                new ObjectParameter("ListItemTextID7", typeof(string));
    
            var listItemTypeID8Parameter = listItemTypeID8.HasValue ?
                new ObjectParameter("ListItemTypeID8", listItemTypeID8) :
                new ObjectParameter("ListItemTypeID8", typeof(int));
    
            var listItemTextID8Parameter = listItemTextID8 != null ?
                new ObjectParameter("ListItemTextID8", listItemTextID8) :
                new ObjectParameter("ListItemTextID8", typeof(string));
    
            var listItemTypeID9Parameter = listItemTypeID9.HasValue ?
                new ObjectParameter("ListItemTypeID9", listItemTypeID9) :
                new ObjectParameter("ListItemTypeID9", typeof(int));
    
            var listItemTextID9Parameter = listItemTextID9 != null ?
                new ObjectParameter("ListItemTextID9", listItemTextID9) :
                new ObjectParameter("ListItemTextID9", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ExtendedSearch_Result>("CAT_ExtendedSearch", availabilityTypeParameter, startDateParameter, endDateParameter, requestedNumberParameter, portalIDParameter, advCatIDParameter, categoryIDParameter, category2IDParameter, category3Parameter, minUnitCostParameter, maxUnitCostParameter, createdByUserParameter, showOnlyIfStockParameter, listItemTypeID0Parameter, listItemTextID0Parameter, listItemTypeID1Parameter, listItemTextID1Parameter, listItemTypeID2Parameter, listItemTextID2Parameter, listItemTypeID3Parameter, listItemTextID3Parameter, listItemTypeID4Parameter, listItemTextID4Parameter, listItemTypeID5Parameter, listItemTextID5Parameter, listItemTypeID6Parameter, listItemTextID6Parameter, listItemTypeID7Parameter, listItemTextID7Parameter, listItemTypeID8Parameter, listItemTextID8Parameter, listItemTypeID9Parameter, listItemTextID9Parameter);
        }
    
        public virtual int CAT_FeedBackAdd(Nullable<int> feedBackID, Nullable<int> userID, string fromUserStatus, Nullable<int> portalID, Nullable<int> itemID, Nullable<int> recordID, Nullable<int> rating, Nullable<bool> approved)
        {
            var feedBackIDParameter = feedBackID.HasValue ?
                new ObjectParameter("FeedBackID", feedBackID) :
                new ObjectParameter("FeedBackID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var fromUserStatusParameter = fromUserStatus != null ?
                new ObjectParameter("FromUserStatus", fromUserStatus) :
                new ObjectParameter("FromUserStatus", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_FeedBackAdd", feedBackIDParameter, userIDParameter, fromUserStatusParameter, portalIDParameter, itemIDParameter, recordIDParameter, ratingParameter, approvedParameter);
        }
    
        public virtual int CAT_FeedBackGetAll(Nullable<int> portalID, Nullable<int> itemID, Nullable<int> userID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_FeedBackGetAll", portalIDParameter, itemIDParameter, userIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_FeedBackGetCount(Nullable<int> portalID, Nullable<int> itemID, Nullable<int> userID, string filter)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_FeedBackGetCount", portalIDParameter, itemIDParameter, userIDParameter, filterParameter);
        }
    
        public virtual int CAT_FeedBackUpdate(Nullable<int> feedBackID, Nullable<bool> approved, Nullable<int> rating)
        {
            var feedBackIDParameter = feedBackID.HasValue ?
                new ObjectParameter("FeedBackID", feedBackID) :
                new ObjectParameter("FeedBackID", typeof(int));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_FeedBackUpdate", feedBackIDParameter, approvedParameter, ratingParameter);
        }
    
        public virtual ObjectResult<CAT_GetActiveSubscriptions_Result> CAT_GetActiveSubscriptions(Nullable<int> portalID, Nullable<int> userID, Nullable<int> productID, Nullable<System.DateTime> subscrExpiryDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var subscrExpiryDateParameter = subscrExpiryDate.HasValue ?
                new ObjectParameter("SubscrExpiryDate", subscrExpiryDate) :
                new ObjectParameter("SubscrExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetActiveSubscriptions_Result>("CAT_GetActiveSubscriptions", portalIDParameter, userIDParameter, productIDParameter, subscrExpiryDateParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCat_Result> CAT_GetAdvCat(Nullable<int> advCatId)
        {
            var advCatIdParameter = advCatId.HasValue ?
                new ObjectParameter("AdvCatId", advCatId) :
                new ObjectParameter("AdvCatId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCat_Result>("CAT_GetAdvCat", advCatIdParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatByName_Result> CAT_GetAdvCatByName(string advCatName, Nullable<int> portalId)
        {
            var advCatNameParameter = advCatName != null ?
                new ObjectParameter("AdvCatName", advCatName) :
                new ObjectParameter("AdvCatName", typeof(string));
    
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatByName_Result>("CAT_GetAdvCatByName", advCatNameParameter, portalIdParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatPermission_Result> CAT_GetAdvCatPermission(Nullable<int> advCatPermissionID)
        {
            var advCatPermissionIDParameter = advCatPermissionID.HasValue ?
                new ObjectParameter("AdvCatPermissionID", advCatPermissionID) :
                new ObjectParameter("AdvCatPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatPermission_Result>("CAT_GetAdvCatPermission", advCatPermissionIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatPermissionsByAdvCatID_Result> CAT_GetAdvCatPermissionsByAdvCatID(Nullable<int> advCatID, Nullable<int> permissionID)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatPermissionsByAdvCatID_Result>("CAT_GetAdvCatPermissionsByAdvCatID", advCatIDParameter, permissionIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatPermissionsByPortal_Result> CAT_GetAdvCatPermissionsByPortal(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatPermissionsByPortal_Result>("CAT_GetAdvCatPermissionsByPortal", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatProducts_Result> CAT_GetAdvCatProducts(Nullable<int> advCatID, Nullable<int> portalID, Nullable<bool> showOnlyIfStock)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatProducts_Result>("CAT_GetAdvCatProducts", advCatIDParameter, portalIDParameter, showOnlyIfStockParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCats_Result> CAT_GetAdvCats(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCats_Result>("CAT_GetAdvCats", portalIdParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatsByParentId_Result> CAT_GetAdvCatsByParentId(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatsByParentId_Result>("CAT_GetAdvCatsByParentId", parentIdParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatsProduct_Result> CAT_GetAdvCatsProduct(Nullable<int> portalId, Nullable<int> productID)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatsProduct_Result>("CAT_GetAdvCatsProduct", portalIdParameter, productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAdvCatsProducts_Result> CAT_GetAdvCatsProducts(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAdvCatsProducts_Result>("CAT_GetAdvCatsProducts", portalIdParameter);
        }
    
        public virtual ObjectResult<CAT_GetAllAdvCats_Result> CAT_GetAllAdvCats()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAllAdvCats_Result>("CAT_GetAllAdvCats");
        }
    
        public virtual ObjectResult<string> CAT_GetAllCategory3(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_GetAllCategory3", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAllCustomers_Result> CAT_GetAllCustomers(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAllCustomers_Result>("CAT_GetAllCustomers", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAllFromEmailBlockList_Result> CAT_GetAllFromEmailBlockList(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAllFromEmailBlockList_Result>("CAT_GetAllFromEmailBlockList", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAllNativeLanguages_Result> CAT_GetAllNativeLanguages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAllNativeLanguages_Result>("CAT_GetAllNativeLanguages");
        }
    
        public virtual ObjectResult<CAT_GetAllRelatedProducts_Result> CAT_GetAllRelatedProducts(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAllRelatedProducts_Result>("CAT_GetAllRelatedProducts", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetAllVendors_Result> CAT_GetAllVendors(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetAllVendors_Result>("CAT_GetAllVendors", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetBaseProductColors_Result> CAT_GetBaseProductColors(Nullable<int> advCatID, Nullable<bool> showOnlyIfStock)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetBaseProductColors_Result>("CAT_GetBaseProductColors", advCatIDParameter, showOnlyIfStockParameter);
        }
    
        public virtual int CAT_GetCartProductCount(string cartID, Nullable<int> productID, string options, Nullable<System.DateTime> allocDate, string sKU, ObjectParameter productCount)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetCartProductCount", cartIDParameter, productIDParameter, optionsParameter, allocDateParameter, sKUParameter, productCount);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_GetCartProductCount2(string cartID, Nullable<int> productID, string options, Nullable<System.DateTime> allocDate, string sKU)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_GetCartProductCount2", cartIDParameter, productIDParameter, optionsParameter, allocDateParameter, sKUParameter);
        }
    
        public virtual ObjectResult<CAT_GetCategory_Result> CAT_GetCategory(Nullable<int> portalID, string categoryID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryIDParameter = categoryID != null ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCategory_Result>("CAT_GetCategory", portalIDParameter, categoryIDParameter);
        }
    
        public virtual ObjectResult<string> CAT_GetCategory3(Nullable<int> portalID, Nullable<bool> showOnlyIfStock)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_GetCategory3", portalIDParameter, showOnlyIfStockParameter);
        }
    
        public virtual int CAT_GetCategoryIDByCategoryImportID(Nullable<int> portalID, string categoryImportID, ObjectParameter categoryID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryImportIDParameter = categoryImportID != null ?
                new ObjectParameter("CategoryImportID", categoryImportID) :
                new ObjectParameter("CategoryImportID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetCategoryIDByCategoryImportID", portalIDParameter, categoryImportIDParameter, categoryID);
        }
    
        public virtual ObjectResult<CAT_GetCCCryptoData_Result> CAT_GetCCCryptoData(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCCCryptoData_Result>("CAT_GetCCCryptoData", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetCCPaymentProcessors_Result> CAT_GetCCPaymentProcessors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCCPaymentProcessors_Result>("CAT_GetCCPaymentProcessors");
        }
    
        public virtual ObjectResult<CAT_GetCCTransactionID_Result> CAT_GetCCTransactionID(string authCode, string transactionType)
        {
            var authCodeParameter = authCode != null ?
                new ObjectParameter("AuthCode", authCode) :
                new ObjectParameter("AuthCode", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCCTransactionID_Result>("CAT_GetCCTransactionID", authCodeParameter, transactionTypeParameter);
        }
    
        public virtual ObjectResult<CAT_GetCheckout_Result> CAT_GetCheckout(Nullable<int> orderID, string cartID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCheckout_Result>("CAT_GetCheckout", orderIDParameter, cartIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetCompanyDetails_Result> CAT_GetCompanyDetails(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCompanyDetails_Result>("CAT_GetCompanyDetails", userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_GetConfigurationStatus(string cartID, Nullable<int> productID, Nullable<bool> showOnlyIfStock, Nullable<int> portalID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_GetConfigurationStatus", cartIDParameter, productIDParameter, showOnlyIfStockParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetCreditNoteDetails_Result> CAT_GetCreditNoteDetails(Nullable<int> orderID, Nullable<int> creditNoteNumber, Nullable<bool> storePriceType, ObjectParameter orderDate, ObjectParameter shipDate, ObjectParameter shipToID, ObjectParameter paymentType, ObjectParameter paymentState, ObjectParameter goodsPrice, ObjectParameter shipCosts, ObjectParameter shipTax, ObjectParameter shipTax2, ObjectParameter goodsTax1, ObjectParameter goodsTax2, ObjectParameter taxRateName, ObjectParameter purchaseOrderNumber, ObjectParameter shipTaxAmount1, ObjectParameter shipTaxAmount2, ObjectParameter total)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var creditNoteNumberParameter = creditNoteNumber.HasValue ?
                new ObjectParameter("CreditNoteNumber", creditNoteNumber) :
                new ObjectParameter("CreditNoteNumber", typeof(int));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCreditNoteDetails_Result>("CAT_GetCreditNoteDetails", orderIDParameter, creditNoteNumberParameter, storePriceTypeParameter, orderDate, shipDate, shipToID, paymentType, paymentState, goodsPrice, shipCosts, shipTax, shipTax2, goodsTax1, goodsTax2, taxRateName, purchaseOrderNumber, shipTaxAmount1, shipTaxAmount2, total);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_GetCreditNoteNumbers(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_GetCreditNoteNumbers", orderIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetCreditNotes_Result> CAT_GetCreditNotes(Nullable<int> creditNoteID, Nullable<int> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string reference, Nullable<int> portalID)
        {
            var creditNoteIDParameter = creditNoteID.HasValue ?
                new ObjectParameter("CreditNoteID", creditNoteID) :
                new ObjectParameter("CreditNoteID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCreditNotes_Result>("CAT_GetCreditNotes", creditNoteIDParameter, userIDParameter, startDateParameter, endDateParameter, referenceParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetCreditNoteTotals_Result> CAT_GetCreditNoteTotals(Nullable<int> userID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string reference, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var referenceParameter = reference != null ?
                new ObjectParameter("Reference", reference) :
                new ObjectParameter("Reference", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCreditNoteTotals_Result>("CAT_GetCreditNoteTotals", userIDParameter, startDateParameter, endDateParameter, referenceParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetCustomerLoyaltyPoints_Result> CAT_GetCustomerLoyaltyPoints(Nullable<int> portalID, Nullable<int> customerID, Nullable<bool> storePriceType)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetCustomerLoyaltyPoints_Result>("CAT_GetCustomerLoyaltyPoints", portalIDParameter, customerIDParameter, storePriceTypeParameter);
        }
    
        public virtual ObjectResult<CAT_GetExpiredSubscr_Result> CAT_GetExpiredSubscr(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetExpiredSubscr_Result>("CAT_GetExpiredSubscr", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetInvoiceDetails_Result> CAT_GetInvoiceDetails(Nullable<int> orderID, Nullable<int> invoiceNumber, Nullable<bool> storePriceType, ObjectParameter orderDate, ObjectParameter shipDate, ObjectParameter shipToID, ObjectParameter paymentType, ObjectParameter paymentState, ObjectParameter goodsPrice, ObjectParameter shipCosts, ObjectParameter shipTax, ObjectParameter shipTax2, ObjectParameter goodsTax1, ObjectParameter goodsTax2, ObjectParameter taxRateName, ObjectParameter purchaseOrderNumber, ObjectParameter shipTaxAmount1, ObjectParameter shipTaxAmount2, ObjectParameter total, Nullable<int> createdByUser)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber.HasValue ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(int));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetInvoiceDetails_Result>("CAT_GetInvoiceDetails", orderIDParameter, invoiceNumberParameter, storePriceTypeParameter, orderDate, shipDate, shipToID, paymentType, paymentState, goodsPrice, shipCosts, shipTax, shipTax2, goodsTax1, goodsTax2, taxRateName, purchaseOrderNumber, shipTaxAmount1, shipTaxAmount2, total, createdByUserParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_GetInvoiceNumbers(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_GetInvoiceNumbers", orderIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetListEntries_Result> CAT_GetListEntries(string listName, string parentKey, Nullable<int> entryID, Nullable<int> definitionID, string text)
        {
            var listNameParameter = listName != null ?
                new ObjectParameter("ListName", listName) :
                new ObjectParameter("ListName", typeof(string));
    
            var parentKeyParameter = parentKey != null ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(string));
    
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(int));
    
            var definitionIDParameter = definitionID.HasValue ?
                new ObjectParameter("DefinitionID", definitionID) :
                new ObjectParameter("DefinitionID", typeof(int));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetListEntries_Result>("CAT_GetListEntries", listNameParameter, parentKeyParameter, entryIDParameter, definitionIDParameter, textParameter);
        }
    
        public virtual ObjectResult<CAT_GetListItemTexts_Result> CAT_GetListItemTexts(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetListItemTexts_Result>("CAT_GetListItemTexts", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetListItemTypes_Result> CAT_GetListItemTypes(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetListItemTypes_Result>("CAT_GetListItemTypes", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetLoyaltyPoints_Result> CAT_GetLoyaltyPoints(Nullable<int> portalID, Nullable<int> customerID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> storePriceType)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetLoyaltyPoints_Result>("CAT_GetLoyaltyPoints", portalIDParameter, customerIDParameter, startDateParameter, endDateParameter, storePriceTypeParameter);
        }
    
        public virtual int CAT_GetMainZones(Nullable<int> portalID, string countryCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetMainZones", portalIDParameter, countryCodeParameter);
        }
    
        public virtual ObjectResult<CAT_GetModuleControl_Result> CAT_GetModuleControl(string controlSrc)
        {
            var controlSrcParameter = controlSrc != null ?
                new ObjectParameter("ControlSrc", controlSrc) :
                new ObjectParameter("ControlSrc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetModuleControl_Result>("CAT_GetModuleControl", controlSrcParameter);
        }
    
        public virtual ObjectResult<CAT_GetModuleIDsByPortalID_Result> CAT_GetModuleIDsByPortalID(Nullable<int> portalID, string moduleName, string cultureCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetModuleIDsByPortalID_Result>("CAT_GetModuleIDsByPortalID", portalIDParameter, moduleNameParameter, cultureCodeParameter);
        }
    
        public virtual ObjectResult<CAT_GetNativeLanguage_Result> CAT_GetNativeLanguage(string iD)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetNativeLanguage_Result>("CAT_GetNativeLanguage", iDParameter);
        }
    
        public virtual ObjectResult<CAT_GetNativeLanguages_Result> CAT_GetNativeLanguages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetNativeLanguages_Result>("CAT_GetNativeLanguages");
        }
    
        public virtual ObjectResult<CAT_GetNewReleases_Result> CAT_GetNewReleases(Nullable<int> portalID, Nullable<bool> showOnlyIfStock, Nullable<int> period, Nullable<int> numberOfItems, Nullable<int> advCatID, Nullable<int> categoryID, Nullable<int> category2ID, string category3)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var periodParameter = period.HasValue ?
                new ObjectParameter("Period", period) :
                new ObjectParameter("Period", typeof(int));
    
            var numberOfItemsParameter = numberOfItems.HasValue ?
                new ObjectParameter("NumberOfItems", numberOfItems) :
                new ObjectParameter("NumberOfItems", typeof(int));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetNewReleases_Result>("CAT_GetNewReleases", portalIDParameter, showOnlyIfStockParameter, periodParameter, numberOfItemsParameter, advCatIDParameter, categoryIDParameter, category2IDParameter, category3Parameter);
        }
    
        public virtual int CAT_GetNextCreditNoteNumber(Nullable<int> portalID, ObjectParameter nextCreditNoteNumber)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetNextCreditNoteNumber", portalIDParameter, nextCreditNoteNumber);
        }
    
        public virtual int CAT_GetNextInvoiceNumber(Nullable<int> portalID, ObjectParameter nextInvoiceNumber)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetNextInvoiceNumber", portalIDParameter, nextInvoiceNumber);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_GetNumberOrderedItems(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_GetNumberOrderedItems", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetOptions_Result> CAT_GetOptions(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetOptions_Result>("CAT_GetOptions", portalIDParameter);
        }
    
        public virtual int CAT_GetOrderShipCosts(Nullable<int> orderID, ObjectParameter shipCosts)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetOrderShipCosts", orderIDParameter, shipCosts);
        }
    
        public virtual ObjectResult<CAT_GetPaymentMethodPermissionsByPaymentMethodID_Result> CAT_GetPaymentMethodPermissionsByPaymentMethodID(Nullable<int> paymentMethodID, Nullable<int> permissionID)
        {
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPaymentMethodPermissionsByPaymentMethodID_Result>("CAT_GetPaymentMethodPermissionsByPaymentMethodID", paymentMethodIDParameter, permissionIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetPaymentMethodPermissionsByPortal_Result> CAT_GetPaymentMethodPermissionsByPortal(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPaymentMethodPermissionsByPortal_Result>("CAT_GetPaymentMethodPermissionsByPortal", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetPeriodByAllocDate_Result> CAT_GetPeriodByAllocDate(Nullable<int> productID, Nullable<System.DateTime> allocDate)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPeriodByAllocDate_Result>("CAT_GetPeriodByAllocDate", productIDParameter, allocDateParameter);
        }
    
        public virtual ObjectResult<CAT_GetPeriods_Result> CAT_GetPeriods(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPeriods_Result>("CAT_GetPeriods", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetPermission_Result> CAT_GetPermission(Nullable<int> permissionID)
        {
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPermission_Result>("CAT_GetPermission", permissionIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetPermissionsByCode_Result> CAT_GetPermissionsByCode(string permissionCode)
        {
            var permissionCodeParameter = permissionCode != null ?
                new ObjectParameter("PermissionCode", permissionCode) :
                new ObjectParameter("PermissionCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPermissionsByCode_Result>("CAT_GetPermissionsByCode", permissionCodeParameter);
        }
    
        public virtual ObjectResult<CAT_GetPOSel_Result> CAT_GetPOSel(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPOSel_Result>("CAT_GetPOSel", productIDParameter);
        }
    
        public virtual ObjectResult<string> CAT_GetPOSelAvailability(string pOSelID, string optionsSelectionsDisplayType)
        {
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var optionsSelectionsDisplayTypeParameter = optionsSelectionsDisplayType != null ?
                new ObjectParameter("OptionsSelectionsDisplayType", optionsSelectionsDisplayType) :
                new ObjectParameter("OptionsSelectionsDisplayType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_GetPOSelAvailability", pOSelIDParameter, optionsSelectionsDisplayTypeParameter);
        }
    
        public virtual ObjectResult<CAT_GetPriceRule_Result> CAT_GetPriceRule(Nullable<int> priceRuleID)
        {
            var priceRuleIDParameter = priceRuleID.HasValue ?
                new ObjectParameter("PriceRuleID", priceRuleID) :
                new ObjectParameter("PriceRuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPriceRule_Result>("CAT_GetPriceRule", priceRuleIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetPriceRules_Result> CAT_GetPriceRules(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetPriceRules_Result>("CAT_GetPriceRules", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductFile_Result> CAT_GetProductFile(Nullable<int> fileID)
        {
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductFile_Result>("CAT_GetProductFile", fileIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductFiles_Result> CAT_GetProductFiles(Nullable<int> productID, string displayLocation)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var displayLocationParameter = displayLocation != null ?
                new ObjectParameter("DisplayLocation", displayLocation) :
                new ObjectParameter("DisplayLocation", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductFiles_Result>("CAT_GetProductFiles", productIDParameter, displayLocationParameter);
        }
    
        public virtual int CAT_GetProductIDbyProductNumber(string productNumber, Nullable<int> portalID, ObjectParameter productID)
        {
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetProductIDbyProductNumber", productNumberParameter, portalIDParameter, productID);
        }
    
        public virtual ObjectResult<CAT_GetProductImage_Result> CAT_GetProductImage(Nullable<int> imageID)
        {
            var imageIDParameter = imageID.HasValue ?
                new ObjectParameter("ImageID", imageID) :
                new ObjectParameter("ImageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductImage_Result>("CAT_GetProductImage", imageIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductImages_Result> CAT_GetProductImages(Nullable<int> productID, string imageType)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var imageTypeParameter = imageType != null ?
                new ObjectParameter("ImageType", imageType) :
                new ObjectParameter("ImageType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductImages_Result>("CAT_GetProductImages", productIDParameter, imageTypeParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductOptions_Result> CAT_GetProductOptions(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductOptions_Result>("CAT_GetProductOptions", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductPermissionsByPortal_Result> CAT_GetProductPermissionsByPortal(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductPermissionsByPortal_Result>("CAT_GetProductPermissionsByPortal", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductPermissionsByProductID_Result> CAT_GetProductPermissionsByProductID(Nullable<int> productID, Nullable<int> permissionID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductPermissionsByProductID_Result>("CAT_GetProductPermissionsByProductID", productIDParameter, permissionIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductPriceHistory_Result> CAT_GetProductPriceHistory(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductPriceHistory_Result>("CAT_GetProductPriceHistory", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductsLITypesTexts_Result> CAT_GetProductsLITypesTexts(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductsLITypesTexts_Result>("CAT_GetProductsLITypesTexts", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductSlots_Result> CAT_GetProductSlots(string cartID, Nullable<int> productID, Nullable<bool> showOnlyIfStock, Nullable<int> portalID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductSlots_Result>("CAT_GetProductSlots", cartIDParameter, productIDParameter, showOnlyIfStockParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<string> CAT_GetProductStatus(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_GetProductStatus", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductsTypesSpecs_Result> CAT_GetProductsTypesSpecs(Nullable<int> productID, string kindOfProductTypeSpec)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var kindOfProductTypeSpecParameter = kindOfProductTypeSpec != null ?
                new ObjectParameter("KindOfProductTypeSpec", kindOfProductTypeSpec) :
                new ObjectParameter("KindOfProductTypeSpec", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductsTypesSpecs_Result>("CAT_GetProductsTypesSpecs", productIDParameter, kindOfProductTypeSpecParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductTax_Result> CAT_GetProductTax(Nullable<int> productID, string countryCode, string stateCode, string city, string postalCode, Nullable<decimal> storeTax, Nullable<int> portalID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var storeTaxParameter = storeTax.HasValue ?
                new ObjectParameter("StoreTax", storeTax) :
                new ObjectParameter("StoreTax", typeof(decimal));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductTax_Result>("CAT_GetProductTax", productIDParameter, countryCodeParameter, stateCodeParameter, cityParameter, postalCodeParameter, storeTaxParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductType_Result> CAT_GetProductType(Nullable<int> productTypeID)
        {
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductType_Result>("CAT_GetProductType", productTypeIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductTypes_Result> CAT_GetProductTypes(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductTypes_Result>("CAT_GetProductTypes", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetProductZonesTax_Result> CAT_GetProductZonesTax(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetProductZonesTax_Result>("CAT_GetProductZonesTax", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetReferrals_Result> CAT_GetReferrals(Nullable<int> portalID, Nullable<int> referrerUserID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> storePriceType, Nullable<bool> groupByOrders)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var referrerUserIDParameter = referrerUserID.HasValue ?
                new ObjectParameter("ReferrerUserID", referrerUserID) :
                new ObjectParameter("ReferrerUserID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            var groupByOrdersParameter = groupByOrders.HasValue ?
                new ObjectParameter("GroupByOrders", groupByOrders) :
                new ObjectParameter("GroupByOrders", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetReferrals_Result>("CAT_GetReferrals", portalIDParameter, referrerUserIDParameter, startDateParameter, endDateParameter, storePriceTypeParameter, groupByOrdersParameter);
        }
    
        public virtual ObjectResult<CAT_GetReferrer_Result> CAT_GetReferrer(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetReferrer_Result>("CAT_GetReferrer", orderIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetReferrerByUser_Result> CAT_GetReferrerByUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetReferrerByUser_Result>("CAT_GetReferrerByUser", userIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetReferrerCommissions_Result> CAT_GetReferrerCommissions(Nullable<int> portalID, Nullable<int> referrerUserID, Nullable<bool> storePriceType)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var referrerUserIDParameter = referrerUserID.HasValue ?
                new ObjectParameter("ReferrerUserID", referrerUserID) :
                new ObjectParameter("ReferrerUserID", typeof(int));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetReferrerCommissions_Result>("CAT_GetReferrerCommissions", portalIDParameter, referrerUserIDParameter, storePriceTypeParameter);
        }
    
        public virtual ObjectResult<CAT_GetRelatedProductsByProductID1_Result> CAT_GetRelatedProductsByProductID1(Nullable<int> productID1, Nullable<int> itemViewerID)
        {
            var productID1Parameter = productID1.HasValue ?
                new ObjectParameter("ProductID1", productID1) :
                new ObjectParameter("ProductID1", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetRelatedProductsByProductID1_Result>("CAT_GetRelatedProductsByProductID1", productID1Parameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetRelatedProductsOnlyByProductID1_Result> CAT_GetRelatedProductsOnlyByProductID1(Nullable<int> productID1, Nullable<bool> showOnlyIfStock)
        {
            var productID1Parameter = productID1.HasValue ?
                new ObjectParameter("ProductID1", productID1) :
                new ObjectParameter("ProductID1", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetRelatedProductsOnlyByProductID1_Result>("CAT_GetRelatedProductsOnlyByProductID1", productID1Parameter, showOnlyIfStockParameter);
        }
    
        public virtual ObjectResult<CAT_GetRequiredTypesSpecs_Result> CAT_GetRequiredTypesSpecs(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetRequiredTypesSpecs_Result>("CAT_GetRequiredTypesSpecs", productIDParameter);
        }
    
        public virtual ObjectResult<string> CAT_GetResource(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_GetResource", nameParameter);
        }
    
        public virtual ObjectResult<CAT_GetResources_Result> CAT_GetResources()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetResources_Result>("CAT_GetResources");
        }
    
        public virtual ObjectResult<CAT_GetSalesStatistics_Result> CAT_GetSalesStatistics(Nullable<int> portalID, Nullable<int> customerID, Nullable<int> productID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> bookingDate, string pOSelID, string purchaseOrderNumber, Nullable<int> createdByUser, string sKU, Nullable<bool> storePriceType, string invoices, string credits, string paymentState, Nullable<int> orderID, Nullable<int> invoiceNumber, Nullable<int> creditNoteNumber, string productSerialNumber, string sRSerialNumber, string orderSerialNumber)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var purchaseOrderNumberParameter = purchaseOrderNumber != null ?
                new ObjectParameter("PurchaseOrderNumber", purchaseOrderNumber) :
                new ObjectParameter("PurchaseOrderNumber", typeof(string));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            var invoicesParameter = invoices != null ?
                new ObjectParameter("Invoices", invoices) :
                new ObjectParameter("Invoices", typeof(string));
    
            var creditsParameter = credits != null ?
                new ObjectParameter("Credits", credits) :
                new ObjectParameter("Credits", typeof(string));
    
            var paymentStateParameter = paymentState != null ?
                new ObjectParameter("PaymentState", paymentState) :
                new ObjectParameter("PaymentState", typeof(string));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber.HasValue ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(int));
    
            var creditNoteNumberParameter = creditNoteNumber.HasValue ?
                new ObjectParameter("CreditNoteNumber", creditNoteNumber) :
                new ObjectParameter("CreditNoteNumber", typeof(int));
    
            var productSerialNumberParameter = productSerialNumber != null ?
                new ObjectParameter("ProductSerialNumber", productSerialNumber) :
                new ObjectParameter("ProductSerialNumber", typeof(string));
    
            var sRSerialNumberParameter = sRSerialNumber != null ?
                new ObjectParameter("SRSerialNumber", sRSerialNumber) :
                new ObjectParameter("SRSerialNumber", typeof(string));
    
            var orderSerialNumberParameter = orderSerialNumber != null ?
                new ObjectParameter("OrderSerialNumber", orderSerialNumber) :
                new ObjectParameter("OrderSerialNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSalesStatistics_Result>("CAT_GetSalesStatistics", portalIDParameter, customerIDParameter, productIDParameter, startDateParameter, endDateParameter, bookingDateParameter, pOSelIDParameter, purchaseOrderNumberParameter, createdByUserParameter, sKUParameter, storePriceTypeParameter, invoicesParameter, creditsParameter, paymentStateParameter, orderIDParameter, invoiceNumberParameter, creditNoteNumberParameter, productSerialNumberParameter, sRSerialNumberParameter, orderSerialNumberParameter);
        }
    
        public virtual ObjectResult<CAT_GetSeasons_Result> CAT_GetSeasons(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSeasons_Result>("CAT_GetSeasons", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSelProdTypesSpecs_Result> CAT_GetSelProdTypesSpecs(Nullable<int> productSlotID, string cartID)
        {
            var productSlotIDParameter = productSlotID.HasValue ?
                new ObjectParameter("ProductSlotID", productSlotID) :
                new ObjectParameter("ProductSlotID", typeof(int));
    
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSelProdTypesSpecs_Result>("CAT_GetSelProdTypesSpecs", productSlotIDParameter, cartIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSettings_Result> CAT_GetSettings(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSettings_Result>("CAT_GetSettings", portalIDParameter);
        }
    
        public virtual int CAT_GetShipCosts(Nullable<int> orderID, ObjectParameter shipCost)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetShipCosts", orderIDParameter, shipCost);
        }
    
        public virtual ObjectResult<CAT_GetShippingRates_Result> CAT_GetShippingRates(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetShippingRates_Result>("CAT_GetShippingRates", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetShipTax_Result> CAT_GetShipTax(string countryCode, string stateCode, string city, string postalCode, Nullable<decimal> storeTax, Nullable<int> portalID)
        {
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            var stateCodeParameter = stateCode != null ?
                new ObjectParameter("StateCode", stateCode) :
                new ObjectParameter("StateCode", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var storeTaxParameter = storeTax.HasValue ?
                new ObjectParameter("StoreTax", storeTax) :
                new ObjectParameter("StoreTax", typeof(decimal));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetShipTax_Result>("CAT_GetShipTax", countryCodeParameter, stateCodeParameter, cityParameter, postalCodeParameter, storeTaxParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetShipToAll_Result> CAT_GetShipToAll(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetShipToAll_Result>("CAT_GetShipToAll", userIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSinglePayPalCurreny_Result> CAT_GetSinglePayPalCurreny(Nullable<int> storeCurrencyID)
        {
            var storeCurrencyIDParameter = storeCurrencyID.HasValue ?
                new ObjectParameter("StoreCurrencyID", storeCurrencyID) :
                new ObjectParameter("StoreCurrencyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSinglePayPalCurreny_Result>("CAT_GetSinglePayPalCurreny", storeCurrencyIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSinglePOS_Result> CAT_GetSinglePOS(string pOSelID)
        {
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSinglePOS_Result>("CAT_GetSinglePOS", pOSelIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSingleProducts_Result> CAT_GetSingleProducts(Nullable<int> productID, Nullable<int> portalID, Nullable<System.DateTime> allocDate)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSingleProducts_Result>("CAT_GetSingleProducts", productIDParameter, portalIDParameter, allocDateParameter);
        }
    
        public virtual ObjectResult<CAT_GetSingleShipTo_Result> CAT_GetSingleShipTo(Nullable<int> shipToID)
        {
            var shipToIDParameter = shipToID.HasValue ?
                new ObjectParameter("ShipToID", shipToID) :
                new ObjectParameter("ShipToID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSingleShipTo_Result>("CAT_GetSingleShipTo", shipToIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSlot_Result> CAT_GetSlot(Nullable<int> slotID)
        {
            var slotIDParameter = slotID.HasValue ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSlot_Result>("CAT_GetSlot", slotIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSlotProductTypes_Result> CAT_GetSlotProductTypes(Nullable<int> slotID)
        {
            var slotIDParameter = slotID.HasValue ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSlotProductTypes_Result>("CAT_GetSlotProductTypes", slotIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSlots_Result> CAT_GetSlots(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSlots_Result>("CAT_GetSlots", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSpecification_Result> CAT_GetSpecification(Nullable<int> specificationID)
        {
            var specificationIDParameter = specificationID.HasValue ?
                new ObjectParameter("SpecificationID", specificationID) :
                new ObjectParameter("SpecificationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSpecification_Result>("CAT_GetSpecification", specificationIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSpecifications_Result> CAT_GetSpecifications(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSpecifications_Result>("CAT_GetSpecifications", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetStoreCurrency_Result> CAT_GetStoreCurrency()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetStoreCurrency_Result>("CAT_GetStoreCurrency");
        }
    
        public virtual int CAT_GetStoreTabIDByPortalID(Nullable<int> portalID, string moduleName, string cultureCode, ObjectParameter tabID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetStoreTabIDByPortalID", portalIDParameter, moduleNameParameter, cultureCodeParameter, tabID);
        }
    
        public virtual int CAT_GetStoreTabIDByProductID(Nullable<int> productID, string moduleName, ObjectParameter tabID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetStoreTabIDByProductID", productIDParameter, moduleNameParameter, tabID);
        }
    
        public virtual ObjectResult<CAT_GetSubscription_Result> CAT_GetSubscription(Nullable<int> recordID)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSubscription_Result>("CAT_GetSubscription", recordIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSubZones_Result> CAT_GetSubZones(Nullable<int> mainZoneID)
        {
            var mainZoneIDParameter = mainZoneID.HasValue ?
                new ObjectParameter("MainZoneID", mainZoneID) :
                new ObjectParameter("MainZoneID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSubZones_Result>("CAT_GetSubZones", mainZoneIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetSuspendedSubscriptions_Result> CAT_GetSuspendedSubscriptions(Nullable<int> portalID, Nullable<int> userID, Nullable<int> productID, Nullable<System.DateTime> subscrExpiryDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var subscrExpiryDateParameter = subscrExpiryDate.HasValue ?
                new ObjectParameter("SubscrExpiryDate", subscrExpiryDate) :
                new ObjectParameter("SubscrExpiryDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetSuspendedSubscriptions_Result>("CAT_GetSuspendedSubscriptions", portalIDParameter, userIDParameter, productIDParameter, subscrExpiryDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_GetTaxByCountry(Nullable<int> portalID, string countryCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var countryCodeParameter = countryCode != null ?
                new ObjectParameter("CountryCode", countryCode) :
                new ObjectParameter("CountryCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_GetTaxByCountry", portalIDParameter, countryCodeParameter);
        }
    
        public virtual ObjectResult<CAT_GetTypeSpecs_Result> CAT_GetTypeSpecs(Nullable<int> productTypeID)
        {
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetTypeSpecs_Result>("CAT_GetTypeSpecs", productTypeIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetTypeTexts_Result> CAT_GetTypeTexts(Nullable<int> listItemTypeID, Nullable<int> portalID, Nullable<int> advCatID, Nullable<int> categoryID, Nullable<int> category2ID, string category3, Nullable<decimal> minUnitCost, Nullable<decimal> maxUnitCost, Nullable<int> createdByUser, Nullable<bool> showOnlyIfStock, Nullable<bool> showNoOfAssignedItems, Nullable<bool> includeNotEmptyOnly, Nullable<int> listItemTypeID0, string listItemTextID0, Nullable<int> listItemTypeID1, string listItemTextID1, Nullable<int> listItemTypeID2, string listItemTextID2, Nullable<int> listItemTypeID3, string listItemTextID3, Nullable<int> listItemTypeID4, string listItemTextID4, Nullable<int> listItemTypeID5, string listItemTextID5, Nullable<int> listItemTypeID6, string listItemTextID6, Nullable<int> listItemTypeID7, string listItemTextID7, Nullable<int> listItemTypeID8, string listItemTextID8, Nullable<int> listItemTypeID9, string listItemTextID9)
        {
            var listItemTypeIDParameter = listItemTypeID.HasValue ?
                new ObjectParameter("ListItemTypeID", listItemTypeID) :
                new ObjectParameter("ListItemTypeID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var minUnitCostParameter = minUnitCost.HasValue ?
                new ObjectParameter("MinUnitCost", minUnitCost) :
                new ObjectParameter("MinUnitCost", typeof(decimal));
    
            var maxUnitCostParameter = maxUnitCost.HasValue ?
                new ObjectParameter("MaxUnitCost", maxUnitCost) :
                new ObjectParameter("MaxUnitCost", typeof(decimal));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var showNoOfAssignedItemsParameter = showNoOfAssignedItems.HasValue ?
                new ObjectParameter("ShowNoOfAssignedItems", showNoOfAssignedItems) :
                new ObjectParameter("ShowNoOfAssignedItems", typeof(bool));
    
            var includeNotEmptyOnlyParameter = includeNotEmptyOnly.HasValue ?
                new ObjectParameter("IncludeNotEmptyOnly", includeNotEmptyOnly) :
                new ObjectParameter("IncludeNotEmptyOnly", typeof(bool));
    
            var listItemTypeID0Parameter = listItemTypeID0.HasValue ?
                new ObjectParameter("ListItemTypeID0", listItemTypeID0) :
                new ObjectParameter("ListItemTypeID0", typeof(int));
    
            var listItemTextID0Parameter = listItemTextID0 != null ?
                new ObjectParameter("ListItemTextID0", listItemTextID0) :
                new ObjectParameter("ListItemTextID0", typeof(string));
    
            var listItemTypeID1Parameter = listItemTypeID1.HasValue ?
                new ObjectParameter("ListItemTypeID1", listItemTypeID1) :
                new ObjectParameter("ListItemTypeID1", typeof(int));
    
            var listItemTextID1Parameter = listItemTextID1 != null ?
                new ObjectParameter("ListItemTextID1", listItemTextID1) :
                new ObjectParameter("ListItemTextID1", typeof(string));
    
            var listItemTypeID2Parameter = listItemTypeID2.HasValue ?
                new ObjectParameter("ListItemTypeID2", listItemTypeID2) :
                new ObjectParameter("ListItemTypeID2", typeof(int));
    
            var listItemTextID2Parameter = listItemTextID2 != null ?
                new ObjectParameter("ListItemTextID2", listItemTextID2) :
                new ObjectParameter("ListItemTextID2", typeof(string));
    
            var listItemTypeID3Parameter = listItemTypeID3.HasValue ?
                new ObjectParameter("ListItemTypeID3", listItemTypeID3) :
                new ObjectParameter("ListItemTypeID3", typeof(int));
    
            var listItemTextID3Parameter = listItemTextID3 != null ?
                new ObjectParameter("ListItemTextID3", listItemTextID3) :
                new ObjectParameter("ListItemTextID3", typeof(string));
    
            var listItemTypeID4Parameter = listItemTypeID4.HasValue ?
                new ObjectParameter("ListItemTypeID4", listItemTypeID4) :
                new ObjectParameter("ListItemTypeID4", typeof(int));
    
            var listItemTextID4Parameter = listItemTextID4 != null ?
                new ObjectParameter("ListItemTextID4", listItemTextID4) :
                new ObjectParameter("ListItemTextID4", typeof(string));
    
            var listItemTypeID5Parameter = listItemTypeID5.HasValue ?
                new ObjectParameter("ListItemTypeID5", listItemTypeID5) :
                new ObjectParameter("ListItemTypeID5", typeof(int));
    
            var listItemTextID5Parameter = listItemTextID5 != null ?
                new ObjectParameter("ListItemTextID5", listItemTextID5) :
                new ObjectParameter("ListItemTextID5", typeof(string));
    
            var listItemTypeID6Parameter = listItemTypeID6.HasValue ?
                new ObjectParameter("ListItemTypeID6", listItemTypeID6) :
                new ObjectParameter("ListItemTypeID6", typeof(int));
    
            var listItemTextID6Parameter = listItemTextID6 != null ?
                new ObjectParameter("ListItemTextID6", listItemTextID6) :
                new ObjectParameter("ListItemTextID6", typeof(string));
    
            var listItemTypeID7Parameter = listItemTypeID7.HasValue ?
                new ObjectParameter("ListItemTypeID7", listItemTypeID7) :
                new ObjectParameter("ListItemTypeID7", typeof(int));
    
            var listItemTextID7Parameter = listItemTextID7 != null ?
                new ObjectParameter("ListItemTextID7", listItemTextID7) :
                new ObjectParameter("ListItemTextID7", typeof(string));
    
            var listItemTypeID8Parameter = listItemTypeID8.HasValue ?
                new ObjectParameter("ListItemTypeID8", listItemTypeID8) :
                new ObjectParameter("ListItemTypeID8", typeof(int));
    
            var listItemTextID8Parameter = listItemTextID8 != null ?
                new ObjectParameter("ListItemTextID8", listItemTextID8) :
                new ObjectParameter("ListItemTextID8", typeof(string));
    
            var listItemTypeID9Parameter = listItemTypeID9.HasValue ?
                new ObjectParameter("ListItemTypeID9", listItemTypeID9) :
                new ObjectParameter("ListItemTypeID9", typeof(int));
    
            var listItemTextID9Parameter = listItemTextID9 != null ?
                new ObjectParameter("ListItemTextID9", listItemTextID9) :
                new ObjectParameter("ListItemTextID9", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetTypeTexts_Result>("CAT_GetTypeTexts", listItemTypeIDParameter, portalIDParameter, advCatIDParameter, categoryIDParameter, category2IDParameter, category3Parameter, minUnitCostParameter, maxUnitCostParameter, createdByUserParameter, showOnlyIfStockParameter, showNoOfAssignedItemsParameter, includeNotEmptyOnlyParameter, listItemTypeID0Parameter, listItemTextID0Parameter, listItemTypeID1Parameter, listItemTextID1Parameter, listItemTypeID2Parameter, listItemTextID2Parameter, listItemTypeID3Parameter, listItemTextID3Parameter, listItemTypeID4Parameter, listItemTextID4Parameter, listItemTypeID5Parameter, listItemTextID5Parameter, listItemTypeID6Parameter, listItemTextID6Parameter, listItemTypeID7Parameter, listItemTextID7Parameter, listItemTypeID8Parameter, listItemTextID8Parameter, listItemTypeID9Parameter, listItemTextID9Parameter);
        }
    
        public virtual int CAT_GetUserIDbyCustomerNumber(string customerNumber, Nullable<int> portalID, ObjectParameter userID)
        {
            var customerNumberParameter = customerNumber != null ?
                new ObjectParameter("CustomerNumber", customerNumber) :
                new ObjectParameter("CustomerNumber", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_GetUserIDbyCustomerNumber", customerNumberParameter, portalIDParameter, userID);
        }
    
        public virtual ObjectResult<CAT_GetVendorCommissions_Result> CAT_GetVendorCommissions(Nullable<int> portalID, Nullable<int> vendorUserID, Nullable<bool> storePriceType)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var vendorUserIDParameter = vendorUserID.HasValue ?
                new ObjectParameter("VendorUserID", vendorUserID) :
                new ObjectParameter("VendorUserID", typeof(int));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetVendorCommissions_Result>("CAT_GetVendorCommissions", portalIDParameter, vendorUserIDParameter, storePriceTypeParameter);
        }
    
        public virtual ObjectResult<CAT_GetVendorPermissionsByPortalID_Result> CAT_GetVendorPermissionsByPortalID(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetVendorPermissionsByPortalID_Result>("CAT_GetVendorPermissionsByPortalID", portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_GetVendorSales_Result> CAT_GetVendorSales(Nullable<int> portalID, Nullable<int> vendorUserID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> storePriceType)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var vendorUserIDParameter = vendorUserID.HasValue ?
                new ObjectParameter("VendorUserID", vendorUserID) :
                new ObjectParameter("VendorUserID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetVendorSales_Result>("CAT_GetVendorSales", portalIDParameter, vendorUserIDParameter, startDateParameter, endDateParameter, storePriceTypeParameter);
        }
    
        public virtual ObjectResult<CAT_GetZoneNames_Result> CAT_GetZoneNames(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_GetZoneNames_Result>("CAT_GetZoneNames", portalIDParameter);
        }
    
        public virtual int CAT_IncreaseUnitCount(Nullable<int> recordID)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_IncreaseUnitCount", recordIDParameter);
        }
    
        public virtual int CAT_InitProductSlots(string cartID, Nullable<int> productID, Nullable<bool> showOnlyIfStock, Nullable<int> portalID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_InitProductSlots", cartIDParameter, productIDParameter, showOnlyIfStockParameter, portalIDParameter);
        }
    
        public virtual int CAT_InsertCreditNoteData(Nullable<int> orderDetailsID, Nullable<int> creditNoteNumber, Nullable<decimal> creditNoteShipCosts, Nullable<int> lastModifiedByUserID)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var creditNoteNumberParameter = creditNoteNumber.HasValue ?
                new ObjectParameter("CreditNoteNumber", creditNoteNumber) :
                new ObjectParameter("CreditNoteNumber", typeof(int));
    
            var creditNoteShipCostsParameter = creditNoteShipCosts.HasValue ?
                new ObjectParameter("CreditNoteShipCosts", creditNoteShipCosts) :
                new ObjectParameter("CreditNoteShipCosts", typeof(decimal));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_InsertCreditNoteData", orderDetailsIDParameter, creditNoteNumberParameter, creditNoteShipCostsParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_InsertInvoiceData(Nullable<int> orderDetailsID, Nullable<int> invoiceNumber, Nullable<decimal> invoiceShipCosts, Nullable<int> lastModifiedByUserID)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber.HasValue ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(int));
    
            var invoiceShipCostsParameter = invoiceShipCosts.HasValue ?
                new ObjectParameter("InvoiceShipCosts", invoiceShipCosts) :
                new ObjectParameter("InvoiceShipCosts", typeof(decimal));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_InsertInvoiceData", orderDetailsIDParameter, invoiceNumberParameter, invoiceShipCostsParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_InsertShippingDetails(Nullable<int> orderDetailsID, string shippingCompany, string trackingNumber, Nullable<decimal> unitCost, Nullable<int> quantity, Nullable<int> lastModifiedByUserID)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var shippingCompanyParameter = shippingCompany != null ?
                new ObjectParameter("ShippingCompany", shippingCompany) :
                new ObjectParameter("ShippingCompany", typeof(string));
    
            var trackingNumberParameter = trackingNumber != null ?
                new ObjectParameter("TrackingNumber", trackingNumber) :
                new ObjectParameter("TrackingNumber", typeof(string));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_InsertShippingDetails", orderDetailsIDParameter, shippingCompanyParameter, trackingNumberParameter, unitCostParameter, quantityParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_MigrateOrders(Nullable<int> firstOrderID, Nullable<int> addOrderID)
        {
            var firstOrderIDParameter = firstOrderID.HasValue ?
                new ObjectParameter("FirstOrderID", firstOrderID) :
                new ObjectParameter("FirstOrderID", typeof(int));
    
            var addOrderIDParameter = addOrderID.HasValue ?
                new ObjectParameter("AddOrderID", addOrderID) :
                new ObjectParameter("AddOrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_MigrateOrders", firstOrderIDParameter, addOrderIDParameter);
        }
    
        public virtual int CAT_NonDeliveryPeriodAdd(Nullable<int> portalID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDeliveryPeriodAdd", portalIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CAT_NonDeliveryPeriodDelete(Nullable<int> periodID)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDeliveryPeriodDelete", periodIDParameter);
        }
    
        public virtual ObjectResult<CAT_NonDeliveryPeriodGet_Result> CAT_NonDeliveryPeriodGet(Nullable<int> periodID)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_NonDeliveryPeriodGet_Result>("CAT_NonDeliveryPeriodGet", periodIDParameter);
        }
    
        public virtual int CAT_NonDeliveryPeriodsGet(Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDeliveryPeriodsGet", portalIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_NonDeliveryPeriodUpdate(Nullable<int> periodID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDeliveryPeriodUpdate", periodIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CAT_NonDespatchPeriodAdd(Nullable<int> portalID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDespatchPeriodAdd", portalIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CAT_NonDespatchPeriodDelete(Nullable<int> periodID)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDespatchPeriodDelete", periodIDParameter);
        }
    
        public virtual ObjectResult<CAT_NonDespatchPeriodGet_Result> CAT_NonDespatchPeriodGet(Nullable<int> periodID)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_NonDespatchPeriodGet_Result>("CAT_NonDespatchPeriodGet", periodIDParameter);
        }
    
        public virtual int CAT_NonDespatchPeriodsGet(Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDespatchPeriodsGet", portalIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_NonDespatchPeriodUpdate(Nullable<int> periodID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_NonDespatchPeriodUpdate", periodIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CAT_OptionAddMessage(Nullable<int> orderDetailsID, string message)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var messageParameter = message != null ?
                new ObjectParameter("Message", message) :
                new ObjectParameter("Message", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OptionAddMessage", orderDetailsIDParameter, messageParameter);
        }
    
        public virtual ObjectResult<CAT_OrderCCTransactions_Result> CAT_OrderCCTransactions(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrderCCTransactions_Result>("CAT_OrderCCTransactions", orderIDParameter);
        }
    
        public virtual ObjectResult<CAT_OrderItemsLinksGet_Result> CAT_OrderItemsLinksGet(Nullable<int> orderDetailsID)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrderItemsLinksGet_Result>("CAT_OrderItemsLinksGet", orderDetailsIDParameter);
        }
    
        public virtual ObjectResult<CAT_OrderItemsLinksGetByUser_Result> CAT_OrderItemsLinksGetByUser(Nullable<int> userID, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrderItemsLinksGetByUser_Result>("CAT_OrderItemsLinksGetByUser", userIDParameter, portalIDParameter);
        }
    
        public virtual int CAT_OrderItemsLinksResetClicks(Nullable<int> orderItemsLinksID)
        {
            var orderItemsLinksIDParameter = orderItemsLinksID.HasValue ?
                new ObjectParameter("OrderItemsLinksID", orderItemsLinksID) :
                new ObjectParameter("OrderItemsLinksID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderItemsLinksResetClicks", orderItemsLinksIDParameter);
        }
    
        public virtual int CAT_OrderItemsLinksResetFirstClick(Nullable<int> orderItemsLinksID)
        {
            var orderItemsLinksIDParameter = orderItemsLinksID.HasValue ?
                new ObjectParameter("OrderItemsLinksID", orderItemsLinksID) :
                new ObjectParameter("OrderItemsLinksID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderItemsLinksResetFirstClick", orderItemsLinksIDParameter);
        }
    
        public virtual int CAT_OrderItemsLinksUpdateClicks(Nullable<int> orderItemsLinksID)
        {
            var orderItemsLinksIDParameter = orderItemsLinksID.HasValue ?
                new ObjectParameter("OrderItemsLinksID", orderItemsLinksID) :
                new ObjectParameter("OrderItemsLinksID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderItemsLinksUpdateClicks", orderItemsLinksIDParameter);
        }
    
        public virtual int CAT_OrdersAdd(Nullable<int> customerID, Nullable<int> shipToID, string cartID, Nullable<System.DateTime> orderDate, Nullable<System.DateTime> shipDate, string paymentType, string paymentState, Nullable<decimal> shipCosts, Nullable<int> referrerUserID, string uRLReferrer, Nullable<decimal> vendorCommission, Nullable<decimal> referrerCommission, Nullable<int> rewardPeriod, string purchaseOrderNumber, Nullable<int> createdByUserID, ObjectParameter orderID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var shipToIDParameter = shipToID.HasValue ?
                new ObjectParameter("ShipToID", shipToID) :
                new ObjectParameter("ShipToID", typeof(int));
    
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var orderDateParameter = orderDate.HasValue ?
                new ObjectParameter("OrderDate", orderDate) :
                new ObjectParameter("OrderDate", typeof(System.DateTime));
    
            var shipDateParameter = shipDate.HasValue ?
                new ObjectParameter("ShipDate", shipDate) :
                new ObjectParameter("ShipDate", typeof(System.DateTime));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var paymentStateParameter = paymentState != null ?
                new ObjectParameter("PaymentState", paymentState) :
                new ObjectParameter("PaymentState", typeof(string));
    
            var shipCostsParameter = shipCosts.HasValue ?
                new ObjectParameter("ShipCosts", shipCosts) :
                new ObjectParameter("ShipCosts", typeof(decimal));
    
            var referrerUserIDParameter = referrerUserID.HasValue ?
                new ObjectParameter("ReferrerUserID", referrerUserID) :
                new ObjectParameter("ReferrerUserID", typeof(int));
    
            var uRLReferrerParameter = uRLReferrer != null ?
                new ObjectParameter("URLReferrer", uRLReferrer) :
                new ObjectParameter("URLReferrer", typeof(string));
    
            var vendorCommissionParameter = vendorCommission.HasValue ?
                new ObjectParameter("VendorCommission", vendorCommission) :
                new ObjectParameter("VendorCommission", typeof(decimal));
    
            var referrerCommissionParameter = referrerCommission.HasValue ?
                new ObjectParameter("ReferrerCommission", referrerCommission) :
                new ObjectParameter("ReferrerCommission", typeof(decimal));
    
            var rewardPeriodParameter = rewardPeriod.HasValue ?
                new ObjectParameter("RewardPeriod", rewardPeriod) :
                new ObjectParameter("RewardPeriod", typeof(int));
    
            var purchaseOrderNumberParameter = purchaseOrderNumber != null ?
                new ObjectParameter("PurchaseOrderNumber", purchaseOrderNumber) :
                new ObjectParameter("PurchaseOrderNumber", typeof(string));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrdersAdd", customerIDParameter, shipToIDParameter, cartIDParameter, orderDateParameter, shipDateParameter, paymentTypeParameter, paymentStateParameter, shipCostsParameter, referrerUserIDParameter, uRLReferrerParameter, vendorCommissionParameter, referrerCommissionParameter, rewardPeriodParameter, purchaseOrderNumberParameter, createdByUserIDParameter, orderID);
        }
    
        public virtual ObjectResult<CAT_OrdersByDateCustomers_Result> CAT_OrdersByDateCustomers(Nullable<int> portalID, Nullable<int> customerID, Nullable<int> productID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<System.DateTime> bookingDate, string pOSelID, string purchaseOrderNumber, Nullable<int> createdByUser, string sKU, string invoices, string credits, string paymentState, Nullable<int> orderID, Nullable<int> invoiceNumber, Nullable<int> creditNoteNumber, string productSerialNumber, string sRSerialNumber, string orderSerialNumber, string shippingCompany, string rate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var bookingDateParameter = bookingDate.HasValue ?
                new ObjectParameter("BookingDate", bookingDate) :
                new ObjectParameter("BookingDate", typeof(System.DateTime));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var purchaseOrderNumberParameter = purchaseOrderNumber != null ?
                new ObjectParameter("PurchaseOrderNumber", purchaseOrderNumber) :
                new ObjectParameter("PurchaseOrderNumber", typeof(string));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var invoicesParameter = invoices != null ?
                new ObjectParameter("Invoices", invoices) :
                new ObjectParameter("Invoices", typeof(string));
    
            var creditsParameter = credits != null ?
                new ObjectParameter("Credits", credits) :
                new ObjectParameter("Credits", typeof(string));
    
            var paymentStateParameter = paymentState != null ?
                new ObjectParameter("PaymentState", paymentState) :
                new ObjectParameter("PaymentState", typeof(string));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var invoiceNumberParameter = invoiceNumber.HasValue ?
                new ObjectParameter("InvoiceNumber", invoiceNumber) :
                new ObjectParameter("InvoiceNumber", typeof(int));
    
            var creditNoteNumberParameter = creditNoteNumber.HasValue ?
                new ObjectParameter("CreditNoteNumber", creditNoteNumber) :
                new ObjectParameter("CreditNoteNumber", typeof(int));
    
            var productSerialNumberParameter = productSerialNumber != null ?
                new ObjectParameter("ProductSerialNumber", productSerialNumber) :
                new ObjectParameter("ProductSerialNumber", typeof(string));
    
            var sRSerialNumberParameter = sRSerialNumber != null ?
                new ObjectParameter("SRSerialNumber", sRSerialNumber) :
                new ObjectParameter("SRSerialNumber", typeof(string));
    
            var orderSerialNumberParameter = orderSerialNumber != null ?
                new ObjectParameter("OrderSerialNumber", orderSerialNumber) :
                new ObjectParameter("OrderSerialNumber", typeof(string));
    
            var shippingCompanyParameter = shippingCompany != null ?
                new ObjectParameter("ShippingCompany", shippingCompany) :
                new ObjectParameter("ShippingCompany", typeof(string));
    
            var rateParameter = rate != null ?
                new ObjectParameter("Rate", rate) :
                new ObjectParameter("Rate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrdersByDateCustomers_Result>("CAT_OrdersByDateCustomers", portalIDParameter, customerIDParameter, productIDParameter, startDateParameter, endDateParameter, bookingDateParameter, pOSelIDParameter, purchaseOrderNumberParameter, createdByUserParameter, sKUParameter, invoicesParameter, creditsParameter, paymentStateParameter, orderIDParameter, invoiceNumberParameter, creditNoteNumberParameter, productSerialNumberParameter, sRSerialNumberParameter, orderSerialNumberParameter, shippingCompanyParameter, rateParameter);
        }
    
        public virtual ObjectResult<CAT_OrdersDetail_Result> CAT_OrdersDetail(Nullable<int> orderID, Nullable<int> portalID, Nullable<bool> storePriceType, Nullable<int> createdByUser, ObjectParameter customerID, ObjectParameter orderDate, ObjectParameter shipDate, ObjectParameter shipToID, ObjectParameter paymentType, ObjectParameter paymentState, ObjectParameter goodsPrice, ObjectParameter shipCosts, ObjectParameter shipTax, ObjectParameter shipTax2, ObjectParameter goodsTax1, ObjectParameter goodsTax2, ObjectParameter taxRateName, ObjectParameter purchaseOrderNumber, ObjectParameter shipTaxAmount1, ObjectParameter shipTaxAmount2, ObjectParameter total)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrdersDetail_Result>("CAT_OrdersDetail", orderIDParameter, portalIDParameter, storePriceTypeParameter, createdByUserParameter, customerID, orderDate, shipDate, shipToID, paymentType, paymentState, goodsPrice, shipCosts, shipTax, shipTax2, goodsTax1, goodsTax2, taxRateName, purchaseOrderNumber, shipTaxAmount1, shipTaxAmount2, total);
        }
    
        public virtual int CAT_OrderSerialNumberAdd(Nullable<int> portalID, string serialNumber, Nullable<int> vendorID, Nullable<int> createdByUser, Nullable<int> sNCategoryID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSerialNumberAdd", portalIDParameter, serialNumberParameter, vendorIDParameter, createdByUserParameter, sNCategoryIDParameter);
        }
    
        public virtual int CAT_OrderSerialNumberDelete(Nullable<int> serialNumberID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSerialNumberDelete", serialNumberIDParameter);
        }
    
        public virtual ObjectResult<CAT_OrderSerialNumberGet_Result> CAT_OrderSerialNumberGet(Nullable<int> serialNumberID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrderSerialNumberGet_Result>("CAT_OrderSerialNumberGet", serialNumberIDParameter);
        }
    
        public virtual int CAT_OrderSerialNumberOrderIDUpdate(Nullable<int> serialNumberID, Nullable<int> orderID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSerialNumberOrderIDUpdate", serialNumberIDParameter, orderIDParameter);
        }
    
        public virtual int CAT_OrderSerialNumbersAssign(Nullable<int> orderID, Nullable<int> portalID, Nullable<int> quantity, Nullable<int> vendorUserID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var vendorUserIDParameter = vendorUserID.HasValue ?
                new ObjectParameter("VendorUserID", vendorUserID) :
                new ObjectParameter("VendorUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSerialNumbersAssign", orderIDParameter, portalIDParameter, quantityParameter, vendorUserIDParameter);
        }
    
        public virtual int CAT_OrderSerialNumbersGetAll(Nullable<int> portalID, string serialNumber, Nullable<int> vendorID, Nullable<int> orderID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSerialNumbersGetAll", portalIDParameter, serialNumberParameter, vendorIDParameter, orderIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_OrderSerialNumbersGetCount(Nullable<int> portalID, string serialNumber, Nullable<int> vendorID, Nullable<int> orderID, string filter)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSerialNumbersGetCount", portalIDParameter, serialNumberParameter, vendorIDParameter, orderIDParameter, filterParameter);
        }
    
        public virtual int CAT_OrderSerialNumberUpdate(Nullable<int> serialNumberID, Nullable<int> portalID, string serialNumber, Nullable<int> vendorID, Nullable<int> lastChangedByUser, Nullable<int> sNCategoryID, Nullable<int> orderID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var lastChangedByUserParameter = lastChangedByUser.HasValue ?
                new ObjectParameter("LastChangedByUser", lastChangedByUser) :
                new ObjectParameter("LastChangedByUser", typeof(int));
    
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSerialNumberUpdate", serialNumberIDParameter, portalIDParameter, serialNumberParameter, vendorIDParameter, lastChangedByUserParameter, sNCategoryIDParameter, orderIDParameter);
        }
    
        public virtual ObjectResult<CAT_OrdersList_Result> CAT_OrdersList(Nullable<int> customerID, Nullable<int> portalID)
        {
            var customerIDParameter = customerID.HasValue ?
                new ObjectParameter("CustomerID", customerID) :
                new ObjectParameter("CustomerID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrdersList_Result>("CAT_OrdersList", customerIDParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<CAT_OrderSNCategoriesGet_Result> CAT_OrderSNCategoriesGet(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrderSNCategoriesGet_Result>("CAT_OrderSNCategoriesGet", portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_OrderSNCategoryAdd(Nullable<int> portalID, string name, string applyMethod, Nullable<int> minSNRemainingCount)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applyMethodParameter = applyMethod != null ?
                new ObjectParameter("ApplyMethod", applyMethod) :
                new ObjectParameter("ApplyMethod", typeof(string));
    
            var minSNRemainingCountParameter = minSNRemainingCount.HasValue ?
                new ObjectParameter("MinSNRemainingCount", minSNRemainingCount) :
                new ObjectParameter("MinSNRemainingCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_OrderSNCategoryAdd", portalIDParameter, nameParameter, applyMethodParameter, minSNRemainingCountParameter);
        }
    
        public virtual int CAT_OrderSNCategoryDelete(Nullable<int> sNCategoryID)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSNCategoryDelete", sNCategoryIDParameter);
        }
    
        public virtual ObjectResult<CAT_OrderSNCategoryGet_Result> CAT_OrderSNCategoryGet(Nullable<int> sNCategoryID)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_OrderSNCategoryGet_Result>("CAT_OrderSNCategoryGet", sNCategoryIDParameter);
        }
    
        public virtual int CAT_OrderSNCategoryUpdate(Nullable<int> sNCategoryID, string name, string applyMethod, Nullable<int> minSNRemainingCount)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applyMethodParameter = applyMethod != null ?
                new ObjectParameter("ApplyMethod", applyMethod) :
                new ObjectParameter("ApplyMethod", typeof(string));
    
            var minSNRemainingCountParameter = minSNRemainingCount.HasValue ?
                new ObjectParameter("MinSNRemainingCount", minSNRemainingCount) :
                new ObjectParameter("MinSNRemainingCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrderSNCategoryUpdate", sNCategoryIDParameter, nameParameter, applyMethodParameter, minSNRemainingCountParameter);
        }
    
        public virtual int CAT_OrdersRemove(Nullable<int> orderID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrdersRemove", orderIDParameter);
        }
    
        public virtual int CAT_OrdersUpdate(Nullable<int> orderID, string shipDate, string paymentState, string paymentType, Nullable<int> lastModifiedByUserID)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var shipDateParameter = shipDate != null ?
                new ObjectParameter("ShipDate", shipDate) :
                new ObjectParameter("ShipDate", typeof(string));
    
            var paymentStateParameter = paymentState != null ?
                new ObjectParameter("PaymentState", paymentState) :
                new ObjectParameter("PaymentState", typeof(string));
    
            var paymentTypeParameter = paymentType != null ?
                new ObjectParameter("PaymentType", paymentType) :
                new ObjectParameter("PaymentType", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_OrdersUpdate", orderIDParameter, shipDateParameter, paymentStateParameter, paymentTypeParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_PaymentMethodAdd(Nullable<int> portalID, Nullable<int> createdByUser, string name, string title, string description, string countries, string roles, string formula, Nullable<int> cCPaymentProcessorID, string cCTransactionType, Nullable<int> viewOrder, Nullable<bool> enabled, string cCBrand, Nullable<int> storeCCTypes, string cCLogin, string cCTransactionKey, string cCUserName, string cCPassword, string cCMerchantHash, string cCAdditionalParameters, Nullable<bool> cCTestMode, Nullable<bool> saveCCData, string payPalID, Nullable<int> payPalReturnTabID, string payPalCartName, string payPalButtonURL, string payPalURL, string payPalSandboxURL, Nullable<int> payPalCurrencyID, string payPalShippingAddress, Nullable<bool> payPalPassingIndividualItems, Nullable<int> pMCategoryID, string logoImage, Nullable<int> userID, string formula2, string profileProperties, Nullable<decimal> transSuccEmailMinTransAmt, string transSuccEmails, string transSuccEmailSubjTmpl, string transSuccEmailMsgTmpl, string transFailEmails, string transFailEmailSubjTmpl, string transFailEmailMsgTmpl)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var countriesParameter = countries != null ?
                new ObjectParameter("Countries", countries) :
                new ObjectParameter("Countries", typeof(string));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var cCPaymentProcessorIDParameter = cCPaymentProcessorID.HasValue ?
                new ObjectParameter("CCPaymentProcessorID", cCPaymentProcessorID) :
                new ObjectParameter("CCPaymentProcessorID", typeof(int));
    
            var cCTransactionTypeParameter = cCTransactionType != null ?
                new ObjectParameter("CCTransactionType", cCTransactionType) :
                new ObjectParameter("CCTransactionType", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var cCBrandParameter = cCBrand != null ?
                new ObjectParameter("CCBrand", cCBrand) :
                new ObjectParameter("CCBrand", typeof(string));
    
            var storeCCTypesParameter = storeCCTypes.HasValue ?
                new ObjectParameter("StoreCCTypes", storeCCTypes) :
                new ObjectParameter("StoreCCTypes", typeof(int));
    
            var cCLoginParameter = cCLogin != null ?
                new ObjectParameter("CCLogin", cCLogin) :
                new ObjectParameter("CCLogin", typeof(string));
    
            var cCTransactionKeyParameter = cCTransactionKey != null ?
                new ObjectParameter("CCTransactionKey", cCTransactionKey) :
                new ObjectParameter("CCTransactionKey", typeof(string));
    
            var cCUserNameParameter = cCUserName != null ?
                new ObjectParameter("CCUserName", cCUserName) :
                new ObjectParameter("CCUserName", typeof(string));
    
            var cCPasswordParameter = cCPassword != null ?
                new ObjectParameter("CCPassword", cCPassword) :
                new ObjectParameter("CCPassword", typeof(string));
    
            var cCMerchantHashParameter = cCMerchantHash != null ?
                new ObjectParameter("CCMerchantHash", cCMerchantHash) :
                new ObjectParameter("CCMerchantHash", typeof(string));
    
            var cCAdditionalParametersParameter = cCAdditionalParameters != null ?
                new ObjectParameter("CCAdditionalParameters", cCAdditionalParameters) :
                new ObjectParameter("CCAdditionalParameters", typeof(string));
    
            var cCTestModeParameter = cCTestMode.HasValue ?
                new ObjectParameter("CCTestMode", cCTestMode) :
                new ObjectParameter("CCTestMode", typeof(bool));
    
            var saveCCDataParameter = saveCCData.HasValue ?
                new ObjectParameter("SaveCCData", saveCCData) :
                new ObjectParameter("SaveCCData", typeof(bool));
    
            var payPalIDParameter = payPalID != null ?
                new ObjectParameter("PayPalID", payPalID) :
                new ObjectParameter("PayPalID", typeof(string));
    
            var payPalReturnTabIDParameter = payPalReturnTabID.HasValue ?
                new ObjectParameter("PayPalReturnTabID", payPalReturnTabID) :
                new ObjectParameter("PayPalReturnTabID", typeof(int));
    
            var payPalCartNameParameter = payPalCartName != null ?
                new ObjectParameter("PayPalCartName", payPalCartName) :
                new ObjectParameter("PayPalCartName", typeof(string));
    
            var payPalButtonURLParameter = payPalButtonURL != null ?
                new ObjectParameter("PayPalButtonURL", payPalButtonURL) :
                new ObjectParameter("PayPalButtonURL", typeof(string));
    
            var payPalURLParameter = payPalURL != null ?
                new ObjectParameter("PayPalURL", payPalURL) :
                new ObjectParameter("PayPalURL", typeof(string));
    
            var payPalSandboxURLParameter = payPalSandboxURL != null ?
                new ObjectParameter("PayPalSandboxURL", payPalSandboxURL) :
                new ObjectParameter("PayPalSandboxURL", typeof(string));
    
            var payPalCurrencyIDParameter = payPalCurrencyID.HasValue ?
                new ObjectParameter("PayPalCurrencyID", payPalCurrencyID) :
                new ObjectParameter("PayPalCurrencyID", typeof(int));
    
            var payPalShippingAddressParameter = payPalShippingAddress != null ?
                new ObjectParameter("PayPalShippingAddress", payPalShippingAddress) :
                new ObjectParameter("PayPalShippingAddress", typeof(string));
    
            var payPalPassingIndividualItemsParameter = payPalPassingIndividualItems.HasValue ?
                new ObjectParameter("PayPalPassingIndividualItems", payPalPassingIndividualItems) :
                new ObjectParameter("PayPalPassingIndividualItems", typeof(bool));
    
            var pMCategoryIDParameter = pMCategoryID.HasValue ?
                new ObjectParameter("PMCategoryID", pMCategoryID) :
                new ObjectParameter("PMCategoryID", typeof(int));
    
            var logoImageParameter = logoImage != null ?
                new ObjectParameter("LogoImage", logoImage) :
                new ObjectParameter("LogoImage", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var formula2Parameter = formula2 != null ?
                new ObjectParameter("Formula2", formula2) :
                new ObjectParameter("Formula2", typeof(string));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            var transSuccEmailMinTransAmtParameter = transSuccEmailMinTransAmt.HasValue ?
                new ObjectParameter("TransSuccEmailMinTransAmt", transSuccEmailMinTransAmt) :
                new ObjectParameter("TransSuccEmailMinTransAmt", typeof(decimal));
    
            var transSuccEmailsParameter = transSuccEmails != null ?
                new ObjectParameter("TransSuccEmails", transSuccEmails) :
                new ObjectParameter("TransSuccEmails", typeof(string));
    
            var transSuccEmailSubjTmplParameter = transSuccEmailSubjTmpl != null ?
                new ObjectParameter("TransSuccEmailSubjTmpl", transSuccEmailSubjTmpl) :
                new ObjectParameter("TransSuccEmailSubjTmpl", typeof(string));
    
            var transSuccEmailMsgTmplParameter = transSuccEmailMsgTmpl != null ?
                new ObjectParameter("TransSuccEmailMsgTmpl", transSuccEmailMsgTmpl) :
                new ObjectParameter("TransSuccEmailMsgTmpl", typeof(string));
    
            var transFailEmailsParameter = transFailEmails != null ?
                new ObjectParameter("TransFailEmails", transFailEmails) :
                new ObjectParameter("TransFailEmails", typeof(string));
    
            var transFailEmailSubjTmplParameter = transFailEmailSubjTmpl != null ?
                new ObjectParameter("TransFailEmailSubjTmpl", transFailEmailSubjTmpl) :
                new ObjectParameter("TransFailEmailSubjTmpl", typeof(string));
    
            var transFailEmailMsgTmplParameter = transFailEmailMsgTmpl != null ?
                new ObjectParameter("TransFailEmailMsgTmpl", transFailEmailMsgTmpl) :
                new ObjectParameter("TransFailEmailMsgTmpl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_PaymentMethodAdd", portalIDParameter, createdByUserParameter, nameParameter, titleParameter, descriptionParameter, countriesParameter, rolesParameter, formulaParameter, cCPaymentProcessorIDParameter, cCTransactionTypeParameter, viewOrderParameter, enabledParameter, cCBrandParameter, storeCCTypesParameter, cCLoginParameter, cCTransactionKeyParameter, cCUserNameParameter, cCPasswordParameter, cCMerchantHashParameter, cCAdditionalParametersParameter, cCTestModeParameter, saveCCDataParameter, payPalIDParameter, payPalReturnTabIDParameter, payPalCartNameParameter, payPalButtonURLParameter, payPalURLParameter, payPalSandboxURLParameter, payPalCurrencyIDParameter, payPalShippingAddressParameter, payPalPassingIndividualItemsParameter, pMCategoryIDParameter, logoImageParameter, userIDParameter, formula2Parameter, profilePropertiesParameter, transSuccEmailMinTransAmtParameter, transSuccEmailsParameter, transSuccEmailSubjTmplParameter, transSuccEmailMsgTmplParameter, transFailEmailsParameter, transFailEmailSubjTmplParameter, transFailEmailMsgTmplParameter);
        }
    
        public virtual int CAT_PaymentMethodDelete(Nullable<int> paymentMethodID)
        {
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PaymentMethodDelete", paymentMethodIDParameter);
        }
    
        public virtual int CAT_PaymentMethodsGet(Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PaymentMethodsGet", portalIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_PaymentMethodUpdate(Nullable<int> paymentMethodID, Nullable<int> createdByUser, string name, string title, string description, string countries, string roles, string formula, Nullable<int> cCPaymentProcessorID, string cCTransactionType, Nullable<int> viewOrder, Nullable<bool> enabled, string cCBrand, Nullable<int> storeCCTypes, string cCLogin, string cCTransactionKey, string cCUserName, string cCPassword, string cCMerchantHash, string cCAdditionalParameters, Nullable<bool> cCTestMode, Nullable<bool> saveCCData, string payPalID, Nullable<int> payPalReturnTabID, string payPalCartName, string payPalButtonURL, string payPalURL, string payPalSandboxURL, Nullable<int> payPalCurrencyID, string payPalShippingAddress, Nullable<bool> payPalPassingIndividualItems, Nullable<int> pMCategoryID, string logoImage, Nullable<int> userID, string formula2, string profileProperties, Nullable<decimal> transSuccEmailMinTransAmt, string transSuccEmails, string transSuccEmailSubjTmpl, string transSuccEmailMsgTmpl, string transFailEmails, string transFailEmailSubjTmpl, string transFailEmailMsgTmpl)
        {
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var countriesParameter = countries != null ?
                new ObjectParameter("Countries", countries) :
                new ObjectParameter("Countries", typeof(string));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var cCPaymentProcessorIDParameter = cCPaymentProcessorID.HasValue ?
                new ObjectParameter("CCPaymentProcessorID", cCPaymentProcessorID) :
                new ObjectParameter("CCPaymentProcessorID", typeof(int));
    
            var cCTransactionTypeParameter = cCTransactionType != null ?
                new ObjectParameter("CCTransactionType", cCTransactionType) :
                new ObjectParameter("CCTransactionType", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var cCBrandParameter = cCBrand != null ?
                new ObjectParameter("CCBrand", cCBrand) :
                new ObjectParameter("CCBrand", typeof(string));
    
            var storeCCTypesParameter = storeCCTypes.HasValue ?
                new ObjectParameter("StoreCCTypes", storeCCTypes) :
                new ObjectParameter("StoreCCTypes", typeof(int));
    
            var cCLoginParameter = cCLogin != null ?
                new ObjectParameter("CCLogin", cCLogin) :
                new ObjectParameter("CCLogin", typeof(string));
    
            var cCTransactionKeyParameter = cCTransactionKey != null ?
                new ObjectParameter("CCTransactionKey", cCTransactionKey) :
                new ObjectParameter("CCTransactionKey", typeof(string));
    
            var cCUserNameParameter = cCUserName != null ?
                new ObjectParameter("CCUserName", cCUserName) :
                new ObjectParameter("CCUserName", typeof(string));
    
            var cCPasswordParameter = cCPassword != null ?
                new ObjectParameter("CCPassword", cCPassword) :
                new ObjectParameter("CCPassword", typeof(string));
    
            var cCMerchantHashParameter = cCMerchantHash != null ?
                new ObjectParameter("CCMerchantHash", cCMerchantHash) :
                new ObjectParameter("CCMerchantHash", typeof(string));
    
            var cCAdditionalParametersParameter = cCAdditionalParameters != null ?
                new ObjectParameter("CCAdditionalParameters", cCAdditionalParameters) :
                new ObjectParameter("CCAdditionalParameters", typeof(string));
    
            var cCTestModeParameter = cCTestMode.HasValue ?
                new ObjectParameter("CCTestMode", cCTestMode) :
                new ObjectParameter("CCTestMode", typeof(bool));
    
            var saveCCDataParameter = saveCCData.HasValue ?
                new ObjectParameter("SaveCCData", saveCCData) :
                new ObjectParameter("SaveCCData", typeof(bool));
    
            var payPalIDParameter = payPalID != null ?
                new ObjectParameter("PayPalID", payPalID) :
                new ObjectParameter("PayPalID", typeof(string));
    
            var payPalReturnTabIDParameter = payPalReturnTabID.HasValue ?
                new ObjectParameter("PayPalReturnTabID", payPalReturnTabID) :
                new ObjectParameter("PayPalReturnTabID", typeof(int));
    
            var payPalCartNameParameter = payPalCartName != null ?
                new ObjectParameter("PayPalCartName", payPalCartName) :
                new ObjectParameter("PayPalCartName", typeof(string));
    
            var payPalButtonURLParameter = payPalButtonURL != null ?
                new ObjectParameter("PayPalButtonURL", payPalButtonURL) :
                new ObjectParameter("PayPalButtonURL", typeof(string));
    
            var payPalURLParameter = payPalURL != null ?
                new ObjectParameter("PayPalURL", payPalURL) :
                new ObjectParameter("PayPalURL", typeof(string));
    
            var payPalSandboxURLParameter = payPalSandboxURL != null ?
                new ObjectParameter("PayPalSandboxURL", payPalSandboxURL) :
                new ObjectParameter("PayPalSandboxURL", typeof(string));
    
            var payPalCurrencyIDParameter = payPalCurrencyID.HasValue ?
                new ObjectParameter("PayPalCurrencyID", payPalCurrencyID) :
                new ObjectParameter("PayPalCurrencyID", typeof(int));
    
            var payPalShippingAddressParameter = payPalShippingAddress != null ?
                new ObjectParameter("PayPalShippingAddress", payPalShippingAddress) :
                new ObjectParameter("PayPalShippingAddress", typeof(string));
    
            var payPalPassingIndividualItemsParameter = payPalPassingIndividualItems.HasValue ?
                new ObjectParameter("PayPalPassingIndividualItems", payPalPassingIndividualItems) :
                new ObjectParameter("PayPalPassingIndividualItems", typeof(bool));
    
            var pMCategoryIDParameter = pMCategoryID.HasValue ?
                new ObjectParameter("PMCategoryID", pMCategoryID) :
                new ObjectParameter("PMCategoryID", typeof(int));
    
            var logoImageParameter = logoImage != null ?
                new ObjectParameter("LogoImage", logoImage) :
                new ObjectParameter("LogoImage", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var formula2Parameter = formula2 != null ?
                new ObjectParameter("Formula2", formula2) :
                new ObjectParameter("Formula2", typeof(string));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            var transSuccEmailMinTransAmtParameter = transSuccEmailMinTransAmt.HasValue ?
                new ObjectParameter("TransSuccEmailMinTransAmt", transSuccEmailMinTransAmt) :
                new ObjectParameter("TransSuccEmailMinTransAmt", typeof(decimal));
    
            var transSuccEmailsParameter = transSuccEmails != null ?
                new ObjectParameter("TransSuccEmails", transSuccEmails) :
                new ObjectParameter("TransSuccEmails", typeof(string));
    
            var transSuccEmailSubjTmplParameter = transSuccEmailSubjTmpl != null ?
                new ObjectParameter("TransSuccEmailSubjTmpl", transSuccEmailSubjTmpl) :
                new ObjectParameter("TransSuccEmailSubjTmpl", typeof(string));
    
            var transSuccEmailMsgTmplParameter = transSuccEmailMsgTmpl != null ?
                new ObjectParameter("TransSuccEmailMsgTmpl", transSuccEmailMsgTmpl) :
                new ObjectParameter("TransSuccEmailMsgTmpl", typeof(string));
    
            var transFailEmailsParameter = transFailEmails != null ?
                new ObjectParameter("TransFailEmails", transFailEmails) :
                new ObjectParameter("TransFailEmails", typeof(string));
    
            var transFailEmailSubjTmplParameter = transFailEmailSubjTmpl != null ?
                new ObjectParameter("TransFailEmailSubjTmpl", transFailEmailSubjTmpl) :
                new ObjectParameter("TransFailEmailSubjTmpl", typeof(string));
    
            var transFailEmailMsgTmplParameter = transFailEmailMsgTmpl != null ?
                new ObjectParameter("TransFailEmailMsgTmpl", transFailEmailMsgTmpl) :
                new ObjectParameter("TransFailEmailMsgTmpl", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PaymentMethodUpdate", paymentMethodIDParameter, createdByUserParameter, nameParameter, titleParameter, descriptionParameter, countriesParameter, rolesParameter, formulaParameter, cCPaymentProcessorIDParameter, cCTransactionTypeParameter, viewOrderParameter, enabledParameter, cCBrandParameter, storeCCTypesParameter, cCLoginParameter, cCTransactionKeyParameter, cCUserNameParameter, cCPasswordParameter, cCMerchantHashParameter, cCAdditionalParametersParameter, cCTestModeParameter, saveCCDataParameter, payPalIDParameter, payPalReturnTabIDParameter, payPalCartNameParameter, payPalButtonURLParameter, payPalURLParameter, payPalSandboxURLParameter, payPalCurrencyIDParameter, payPalShippingAddressParameter, payPalPassingIndividualItemsParameter, pMCategoryIDParameter, logoImageParameter, userIDParameter, formula2Parameter, profilePropertiesParameter, transSuccEmailMinTransAmtParameter, transSuccEmailsParameter, transSuccEmailSubjTmplParameter, transSuccEmailMsgTmplParameter, transFailEmailsParameter, transFailEmailSubjTmplParameter, transFailEmailMsgTmplParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_PlaceBid(Nullable<int> portalID, Nullable<int> bidderUserID, string bidderUserName, Nullable<int> auctionID, Nullable<decimal> bidAmount, Nullable<decimal> bidIncrement, Nullable<bool> buyItNow, Nullable<bool> automaticBid)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var bidderUserIDParameter = bidderUserID.HasValue ?
                new ObjectParameter("BidderUserID", bidderUserID) :
                new ObjectParameter("BidderUserID", typeof(int));
    
            var bidderUserNameParameter = bidderUserName != null ?
                new ObjectParameter("BidderUserName", bidderUserName) :
                new ObjectParameter("BidderUserName", typeof(string));
    
            var auctionIDParameter = auctionID.HasValue ?
                new ObjectParameter("AuctionID", auctionID) :
                new ObjectParameter("AuctionID", typeof(int));
    
            var bidAmountParameter = bidAmount.HasValue ?
                new ObjectParameter("BidAmount", bidAmount) :
                new ObjectParameter("BidAmount", typeof(decimal));
    
            var bidIncrementParameter = bidIncrement.HasValue ?
                new ObjectParameter("BidIncrement", bidIncrement) :
                new ObjectParameter("BidIncrement", typeof(decimal));
    
            var buyItNowParameter = buyItNow.HasValue ?
                new ObjectParameter("BuyItNow", buyItNow) :
                new ObjectParameter("BuyItNow", typeof(bool));
    
            var automaticBidParameter = automaticBid.HasValue ?
                new ObjectParameter("AutomaticBid", automaticBid) :
                new ObjectParameter("AutomaticBid", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_PlaceBid", portalIDParameter, bidderUserIDParameter, bidderUserNameParameter, auctionIDParameter, bidAmountParameter, bidIncrementParameter, buyItNowParameter, automaticBidParameter);
        }
    
        public virtual ObjectResult<CAT_PMCategoriesGet_Result> CAT_PMCategoriesGet(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_PMCategoriesGet_Result>("CAT_PMCategoriesGet", portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_PMCategoryAdd(Nullable<int> portalID, string pMCategoryName, Nullable<int> pMCategoryViewOrder)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pMCategoryNameParameter = pMCategoryName != null ?
                new ObjectParameter("PMCategoryName", pMCategoryName) :
                new ObjectParameter("PMCategoryName", typeof(string));
    
            var pMCategoryViewOrderParameter = pMCategoryViewOrder.HasValue ?
                new ObjectParameter("PMCategoryViewOrder", pMCategoryViewOrder) :
                new ObjectParameter("PMCategoryViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_PMCategoryAdd", portalIDParameter, pMCategoryNameParameter, pMCategoryViewOrderParameter);
        }
    
        public virtual int CAT_PMCategoryDelete(Nullable<int> pMCategoryID)
        {
            var pMCategoryIDParameter = pMCategoryID.HasValue ?
                new ObjectParameter("PMCategoryID", pMCategoryID) :
                new ObjectParameter("PMCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PMCategoryDelete", pMCategoryIDParameter);
        }
    
        public virtual ObjectResult<CAT_PMCategoryGet_Result> CAT_PMCategoryGet(Nullable<int> pMCategoryID)
        {
            var pMCategoryIDParameter = pMCategoryID.HasValue ?
                new ObjectParameter("PMCategoryID", pMCategoryID) :
                new ObjectParameter("PMCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_PMCategoryGet_Result>("CAT_PMCategoryGet", pMCategoryIDParameter);
        }
    
        public virtual int CAT_PMCategoryUpdate(Nullable<int> pMCategoryID, string pMCategoryName, Nullable<int> pMCategoryViewOrder)
        {
            var pMCategoryIDParameter = pMCategoryID.HasValue ?
                new ObjectParameter("PMCategoryID", pMCategoryID) :
                new ObjectParameter("PMCategoryID", typeof(int));
    
            var pMCategoryNameParameter = pMCategoryName != null ?
                new ObjectParameter("PMCategoryName", pMCategoryName) :
                new ObjectParameter("PMCategoryName", typeof(string));
    
            var pMCategoryViewOrderParameter = pMCategoryViewOrder.HasValue ?
                new ObjectParameter("PMCategoryViewOrder", pMCategoryViewOrder) :
                new ObjectParameter("PMCategoryViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PMCategoryUpdate", pMCategoryIDParameter, pMCategoryNameParameter, pMCategoryViewOrderParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_PostAdd(Nullable<int> threadID, Nullable<int> createdByUser, Nullable<int> notifiedUserID, Nullable<int> portalID, Nullable<int> categoryID, string subject, string body, Nullable<bool> isClosed, string profileProperties, string name, string email)
        {
            var threadIDParameter = threadID.HasValue ?
                new ObjectParameter("ThreadID", threadID) :
                new ObjectParameter("ThreadID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var notifiedUserIDParameter = notifiedUserID.HasValue ?
                new ObjectParameter("NotifiedUserID", notifiedUserID) :
                new ObjectParameter("NotifiedUserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var isClosedParameter = isClosed.HasValue ?
                new ObjectParameter("IsClosed", isClosed) :
                new ObjectParameter("IsClosed", typeof(bool));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_PostAdd", threadIDParameter, createdByUserParameter, notifiedUserIDParameter, portalIDParameter, categoryIDParameter, subjectParameter, bodyParameter, isClosedParameter, profilePropertiesParameter, nameParameter, emailParameter);
        }
    
        public virtual ObjectResult<CAT_PostGetAll_Result> CAT_PostGetAll(Nullable<int> threadID, Nullable<bool> descending)
        {
            var threadIDParameter = threadID.HasValue ?
                new ObjectParameter("ThreadID", threadID) :
                new ObjectParameter("ThreadID", typeof(int));
    
            var descendingParameter = descending.HasValue ?
                new ObjectParameter("Descending", descending) :
                new ObjectParameter("Descending", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_PostGetAll_Result>("CAT_PostGetAll", threadIDParameter, descendingParameter);
        }
    
        public virtual int CAT_PriceAgentAddItem(Nullable<int> productID, string email, Nullable<decimal> price, Nullable<bool> priceCompare)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            var priceCompareParameter = priceCompare.HasValue ?
                new ObjectParameter("PriceCompare", priceCompare) :
                new ObjectParameter("PriceCompare", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PriceAgentAddItem", productIDParameter, emailParameter, priceParameter, priceCompareParameter);
        }
    
        public virtual ObjectResult<string> CAT_PriceAgentGetHigher(Nullable<int> productID, Nullable<decimal> price)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_PriceAgentGetHigher", productIDParameter, priceParameter);
        }
    
        public virtual ObjectResult<string> CAT_PriceAgentGetLower(Nullable<int> productID, Nullable<decimal> price)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_PriceAgentGetLower", productIDParameter, priceParameter);
        }
    
        public virtual int CAT_PriceAgentItemsDelete(Nullable<int> productID, Nullable<decimal> price)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var priceParameter = price.HasValue ?
                new ObjectParameter("Price", price) :
                new ObjectParameter("Price", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PriceAgentItemsDelete", productIDParameter, priceParameter);
        }
    
        public virtual int CAT_PriceHistoryAddItem(Nullable<int> productID, Nullable<decimal> unitCost)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_PriceHistoryAddItem", productIDParameter, unitCostParameter);
        }
    
        public virtual int CAT_ProductAdd(Nullable<int> categoryID, Nullable<int> category2ID, string category3, string productName, string productNumber, string eAN, string iSBN, string free1, string free2, string free3, string keyWords, string productImage, Nullable<decimal> unitCost, Nullable<decimal> unitCost2, Nullable<decimal> unitCost3, Nullable<decimal> unitCost4, Nullable<decimal> unitCost5, Nullable<decimal> unitCost6, string description, string descriptionHTML, string uRL, Nullable<int> stock, string orderQuant, Nullable<decimal> weight, Nullable<decimal> volume, Nullable<decimal> length, Nullable<decimal> width, Nullable<decimal> height, Nullable<decimal> freightCosts1, Nullable<decimal> freightCosts2, Nullable<bool> featured, Nullable<decimal> salePrice, Nullable<System.DateTime> saleStart, Nullable<System.DateTime> saleEnd, Nullable<bool> downLoad, string zIPPassWord, string downLoadFile, Nullable<bool> archive, Nullable<int> createdByUser, Nullable<int> bulkPriceLimit1, Nullable<int> bulkPriceLimit2, Nullable<int> bulkPriceLimit3, Nullable<int> bulkPriceLimit4, Nullable<int> bulkPriceLimit5, Nullable<int> roleID, Nullable<int> subscriptionPeriod, Nullable<bool> recurringBilling, Nullable<bool> taxExempt, Nullable<bool> shipExempt, Nullable<decimal> insuredValue, Nullable<System.DateTime> publicationStart, Nullable<System.DateTime> publicationEnd, string status, Nullable<bool> donationItem, Nullable<bool> payPalSubscription, Nullable<bool> useRoleFees, Nullable<decimal> productCost, string roleExpiryType, string itemDeliveryType, Nullable<int> reorderPoint, string orderQuantValidExpr, string shippingAddress, Nullable<decimal> startingPrice, Nullable<decimal> reservePrice, string taxCode, Nullable<decimal> maxWeight, Nullable<int> totalPeriods, Nullable<bool> nonStockItem, ObjectParameter productID)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var free1Parameter = free1 != null ?
                new ObjectParameter("Free1", free1) :
                new ObjectParameter("Free1", typeof(string));
    
            var free2Parameter = free2 != null ?
                new ObjectParameter("Free2", free2) :
                new ObjectParameter("Free2", typeof(string));
    
            var free3Parameter = free3 != null ?
                new ObjectParameter("Free3", free3) :
                new ObjectParameter("Free3", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(string));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var unitCost2Parameter = unitCost2.HasValue ?
                new ObjectParameter("UnitCost2", unitCost2) :
                new ObjectParameter("UnitCost2", typeof(decimal));
    
            var unitCost3Parameter = unitCost3.HasValue ?
                new ObjectParameter("UnitCost3", unitCost3) :
                new ObjectParameter("UnitCost3", typeof(decimal));
    
            var unitCost4Parameter = unitCost4.HasValue ?
                new ObjectParameter("UnitCost4", unitCost4) :
                new ObjectParameter("UnitCost4", typeof(decimal));
    
            var unitCost5Parameter = unitCost5.HasValue ?
                new ObjectParameter("UnitCost5", unitCost5) :
                new ObjectParameter("UnitCost5", typeof(decimal));
    
            var unitCost6Parameter = unitCost6.HasValue ?
                new ObjectParameter("UnitCost6", unitCost6) :
                new ObjectParameter("UnitCost6", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var descriptionHTMLParameter = descriptionHTML != null ?
                new ObjectParameter("DescriptionHTML", descriptionHTML) :
                new ObjectParameter("DescriptionHTML", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            var orderQuantParameter = orderQuant != null ?
                new ObjectParameter("OrderQuant", orderQuant) :
                new ObjectParameter("OrderQuant", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(decimal));
    
            var volumeParameter = volume.HasValue ?
                new ObjectParameter("Volume", volume) :
                new ObjectParameter("Volume", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(decimal));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(decimal));
    
            var freightCosts1Parameter = freightCosts1.HasValue ?
                new ObjectParameter("FreightCosts1", freightCosts1) :
                new ObjectParameter("FreightCosts1", typeof(decimal));
    
            var freightCosts2Parameter = freightCosts2.HasValue ?
                new ObjectParameter("FreightCosts2", freightCosts2) :
                new ObjectParameter("FreightCosts2", typeof(decimal));
    
            var featuredParameter = featured.HasValue ?
                new ObjectParameter("Featured", featured) :
                new ObjectParameter("Featured", typeof(bool));
    
            var salePriceParameter = salePrice.HasValue ?
                new ObjectParameter("SalePrice", salePrice) :
                new ObjectParameter("SalePrice", typeof(decimal));
    
            var saleStartParameter = saleStart.HasValue ?
                new ObjectParameter("SaleStart", saleStart) :
                new ObjectParameter("SaleStart", typeof(System.DateTime));
    
            var saleEndParameter = saleEnd.HasValue ?
                new ObjectParameter("SaleEnd", saleEnd) :
                new ObjectParameter("SaleEnd", typeof(System.DateTime));
    
            var downLoadParameter = downLoad.HasValue ?
                new ObjectParameter("DownLoad", downLoad) :
                new ObjectParameter("DownLoad", typeof(bool));
    
            var zIPPassWordParameter = zIPPassWord != null ?
                new ObjectParameter("ZIPPassWord", zIPPassWord) :
                new ObjectParameter("ZIPPassWord", typeof(string));
    
            var downLoadFileParameter = downLoadFile != null ?
                new ObjectParameter("DownLoadFile", downLoadFile) :
                new ObjectParameter("DownLoadFile", typeof(string));
    
            var archiveParameter = archive.HasValue ?
                new ObjectParameter("Archive", archive) :
                new ObjectParameter("Archive", typeof(bool));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var bulkPriceLimit1Parameter = bulkPriceLimit1.HasValue ?
                new ObjectParameter("BulkPriceLimit1", bulkPriceLimit1) :
                new ObjectParameter("BulkPriceLimit1", typeof(int));
    
            var bulkPriceLimit2Parameter = bulkPriceLimit2.HasValue ?
                new ObjectParameter("BulkPriceLimit2", bulkPriceLimit2) :
                new ObjectParameter("BulkPriceLimit2", typeof(int));
    
            var bulkPriceLimit3Parameter = bulkPriceLimit3.HasValue ?
                new ObjectParameter("BulkPriceLimit3", bulkPriceLimit3) :
                new ObjectParameter("BulkPriceLimit3", typeof(int));
    
            var bulkPriceLimit4Parameter = bulkPriceLimit4.HasValue ?
                new ObjectParameter("BulkPriceLimit4", bulkPriceLimit4) :
                new ObjectParameter("BulkPriceLimit4", typeof(int));
    
            var bulkPriceLimit5Parameter = bulkPriceLimit5.HasValue ?
                new ObjectParameter("BulkPriceLimit5", bulkPriceLimit5) :
                new ObjectParameter("BulkPriceLimit5", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var subscriptionPeriodParameter = subscriptionPeriod.HasValue ?
                new ObjectParameter("SubscriptionPeriod", subscriptionPeriod) :
                new ObjectParameter("SubscriptionPeriod", typeof(int));
    
            var recurringBillingParameter = recurringBilling.HasValue ?
                new ObjectParameter("RecurringBilling", recurringBilling) :
                new ObjectParameter("RecurringBilling", typeof(bool));
    
            var taxExemptParameter = taxExempt.HasValue ?
                new ObjectParameter("TaxExempt", taxExempt) :
                new ObjectParameter("TaxExempt", typeof(bool));
    
            var shipExemptParameter = shipExempt.HasValue ?
                new ObjectParameter("ShipExempt", shipExempt) :
                new ObjectParameter("ShipExempt", typeof(bool));
    
            var insuredValueParameter = insuredValue.HasValue ?
                new ObjectParameter("InsuredValue", insuredValue) :
                new ObjectParameter("InsuredValue", typeof(decimal));
    
            var publicationStartParameter = publicationStart.HasValue ?
                new ObjectParameter("PublicationStart", publicationStart) :
                new ObjectParameter("PublicationStart", typeof(System.DateTime));
    
            var publicationEndParameter = publicationEnd.HasValue ?
                new ObjectParameter("PublicationEnd", publicationEnd) :
                new ObjectParameter("PublicationEnd", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var donationItemParameter = donationItem.HasValue ?
                new ObjectParameter("DonationItem", donationItem) :
                new ObjectParameter("DonationItem", typeof(bool));
    
            var payPalSubscriptionParameter = payPalSubscription.HasValue ?
                new ObjectParameter("PayPalSubscription", payPalSubscription) :
                new ObjectParameter("PayPalSubscription", typeof(bool));
    
            var useRoleFeesParameter = useRoleFees.HasValue ?
                new ObjectParameter("UseRoleFees", useRoleFees) :
                new ObjectParameter("UseRoleFees", typeof(bool));
    
            var productCostParameter = productCost.HasValue ?
                new ObjectParameter("ProductCost", productCost) :
                new ObjectParameter("ProductCost", typeof(decimal));
    
            var roleExpiryTypeParameter = roleExpiryType != null ?
                new ObjectParameter("RoleExpiryType", roleExpiryType) :
                new ObjectParameter("RoleExpiryType", typeof(string));
    
            var itemDeliveryTypeParameter = itemDeliveryType != null ?
                new ObjectParameter("ItemDeliveryType", itemDeliveryType) :
                new ObjectParameter("ItemDeliveryType", typeof(string));
    
            var reorderPointParameter = reorderPoint.HasValue ?
                new ObjectParameter("ReorderPoint", reorderPoint) :
                new ObjectParameter("ReorderPoint", typeof(int));
    
            var orderQuantValidExprParameter = orderQuantValidExpr != null ?
                new ObjectParameter("OrderQuantValidExpr", orderQuantValidExpr) :
                new ObjectParameter("OrderQuantValidExpr", typeof(string));
    
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("ShippingAddress", shippingAddress) :
                new ObjectParameter("ShippingAddress", typeof(string));
    
            var startingPriceParameter = startingPrice.HasValue ?
                new ObjectParameter("StartingPrice", startingPrice) :
                new ObjectParameter("StartingPrice", typeof(decimal));
    
            var reservePriceParameter = reservePrice.HasValue ?
                new ObjectParameter("ReservePrice", reservePrice) :
                new ObjectParameter("ReservePrice", typeof(decimal));
    
            var taxCodeParameter = taxCode != null ?
                new ObjectParameter("TaxCode", taxCode) :
                new ObjectParameter("TaxCode", typeof(string));
    
            var maxWeightParameter = maxWeight.HasValue ?
                new ObjectParameter("MaxWeight", maxWeight) :
                new ObjectParameter("MaxWeight", typeof(decimal));
    
            var totalPeriodsParameter = totalPeriods.HasValue ?
                new ObjectParameter("TotalPeriods", totalPeriods) :
                new ObjectParameter("TotalPeriods", typeof(int));
    
            var nonStockItemParameter = nonStockItem.HasValue ?
                new ObjectParameter("NonStockItem", nonStockItem) :
                new ObjectParameter("NonStockItem", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductAdd", categoryIDParameter, category2IDParameter, category3Parameter, productNameParameter, productNumberParameter, eANParameter, iSBNParameter, free1Parameter, free2Parameter, free3Parameter, keyWordsParameter, productImageParameter, unitCostParameter, unitCost2Parameter, unitCost3Parameter, unitCost4Parameter, unitCost5Parameter, unitCost6Parameter, descriptionParameter, descriptionHTMLParameter, uRLParameter, stockParameter, orderQuantParameter, weightParameter, volumeParameter, lengthParameter, widthParameter, heightParameter, freightCosts1Parameter, freightCosts2Parameter, featuredParameter, salePriceParameter, saleStartParameter, saleEndParameter, downLoadParameter, zIPPassWordParameter, downLoadFileParameter, archiveParameter, createdByUserParameter, bulkPriceLimit1Parameter, bulkPriceLimit2Parameter, bulkPriceLimit3Parameter, bulkPriceLimit4Parameter, bulkPriceLimit5Parameter, roleIDParameter, subscriptionPeriodParameter, recurringBillingParameter, taxExemptParameter, shipExemptParameter, insuredValueParameter, publicationStartParameter, publicationEndParameter, statusParameter, donationItemParameter, payPalSubscriptionParameter, useRoleFeesParameter, productCostParameter, roleExpiryTypeParameter, itemDeliveryTypeParameter, reorderPointParameter, orderQuantValidExprParameter, shippingAddressParameter, startingPriceParameter, reservePriceParameter, taxCodeParameter, maxWeightParameter, totalPeriodsParameter, nonStockItemParameter, productID);
        }
    
        public virtual int CAT_ProductbyProductID(Nullable<int> productID, Nullable<int> portalID, ObjectParameter productName)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductbyProductID", productIDParameter, portalIDParameter, productName);
        }
    
        public virtual int CAT_ProductCategoryAddImportItem(string categoryName, string description, Nullable<int> portalID, string categoryImportID, string categoryFolderImage)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryImportIDParameter = categoryImportID != null ?
                new ObjectParameter("CategoryImportID", categoryImportID) :
                new ObjectParameter("CategoryImportID", typeof(string));
    
            var categoryFolderImageParameter = categoryFolderImage != null ?
                new ObjectParameter("CategoryFolderImage", categoryFolderImage) :
                new ObjectParameter("CategoryFolderImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductCategoryAddImportItem", categoryNameParameter, descriptionParameter, portalIDParameter, categoryImportIDParameter, categoryFolderImageParameter);
        }
    
        public virtual int CAT_ProductCategoryAddItem(string categoryName, string description, Nullable<int> portalID, ObjectParameter errorMessage, string categoryImportID, string categoryFolderImage, string categoryOpenFolderImage, string categoryPageImage, Nullable<int> createdByUser)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryImportIDParameter = categoryImportID != null ?
                new ObjectParameter("CategoryImportID", categoryImportID) :
                new ObjectParameter("CategoryImportID", typeof(string));
    
            var categoryFolderImageParameter = categoryFolderImage != null ?
                new ObjectParameter("CategoryFolderImage", categoryFolderImage) :
                new ObjectParameter("CategoryFolderImage", typeof(string));
    
            var categoryOpenFolderImageParameter = categoryOpenFolderImage != null ?
                new ObjectParameter("CategoryOpenFolderImage", categoryOpenFolderImage) :
                new ObjectParameter("CategoryOpenFolderImage", typeof(string));
    
            var categoryPageImageParameter = categoryPageImage != null ?
                new ObjectParameter("CategoryPageImage", categoryPageImage) :
                new ObjectParameter("CategoryPageImage", typeof(string));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductCategoryAddItem", categoryNameParameter, descriptionParameter, portalIDParameter, errorMessage, categoryImportIDParameter, categoryFolderImageParameter, categoryOpenFolderImageParameter, categoryPageImageParameter, createdByUserParameter);
        }
    
        public virtual int CAT_ProductCategoryCount(Nullable<int> categoryID, ObjectParameter countItem)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductCategoryCount", categoryIDParameter, countItem);
        }
    
        public virtual ObjectResult<CAT_ProductCategoryList_Result> CAT_ProductCategoryList(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ProductCategoryList_Result>("CAT_ProductCategoryList", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual int CAT_ProductCategoryRemoveItem(Nullable<int> categoryID, ObjectParameter errorMessage)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductCategoryRemoveItem", categoryIDParameter, errorMessage);
        }
    
        public virtual int CAT_ProductCategoryUpdate(string categoryName, string description, Nullable<int> categoryID, string categoryImportID, string categoryFolderImage, string categoryOpenFolderImage, string categoryPageImage)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var categoryImportIDParameter = categoryImportID != null ?
                new ObjectParameter("CategoryImportID", categoryImportID) :
                new ObjectParameter("CategoryImportID", typeof(string));
    
            var categoryFolderImageParameter = categoryFolderImage != null ?
                new ObjectParameter("CategoryFolderImage", categoryFolderImage) :
                new ObjectParameter("CategoryFolderImage", typeof(string));
    
            var categoryOpenFolderImageParameter = categoryOpenFolderImage != null ?
                new ObjectParameter("CategoryOpenFolderImage", categoryOpenFolderImage) :
                new ObjectParameter("CategoryOpenFolderImage", typeof(string));
    
            var categoryPageImageParameter = categoryPageImage != null ?
                new ObjectParameter("CategoryPageImage", categoryPageImage) :
                new ObjectParameter("CategoryPageImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductCategoryUpdate", categoryNameParameter, descriptionParameter, categoryIDParameter, categoryImportIDParameter, categoryFolderImageParameter, categoryOpenFolderImageParameter, categoryPageImageParameter);
        }
    
        public virtual int CAT_ProductCategoryUpdateImport(string categoryName, string description, Nullable<int> categoryID, string categoryImportID, string categoryFolderImage)
        {
            var categoryNameParameter = categoryName != null ?
                new ObjectParameter("CategoryName", categoryName) :
                new ObjectParameter("CategoryName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var categoryImportIDParameter = categoryImportID != null ?
                new ObjectParameter("CategoryImportID", categoryImportID) :
                new ObjectParameter("CategoryImportID", typeof(string));
    
            var categoryFolderImageParameter = categoryFolderImage != null ?
                new ObjectParameter("CategoryFolderImage", categoryFolderImage) :
                new ObjectParameter("CategoryFolderImage", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductCategoryUpdateImport", categoryNameParameter, descriptionParameter, categoryIDParameter, categoryImportIDParameter, categoryFolderImageParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_ProductExists(string productNumber, Nullable<int> portalID, ObjectParameter exists)
        {
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_ProductExists", productNumberParameter, portalIDParameter, exists);
        }
    
        public virtual ObjectResult<string> CAT_ProductRemoveItem(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_ProductRemoveItem", productIDParameter);
        }
    
        public virtual ObjectResult<CAT_ProductsAll_Result> CAT_ProductsAll(Nullable<int> portalID, Nullable<int> itemViewerID, Nullable<bool> returnAllFields)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            var returnAllFieldsParameter = returnAllFields.HasValue ?
                new ObjectParameter("ReturnAllFields", returnAllFields) :
                new ObjectParameter("ReturnAllFields", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ProductsAll_Result>("CAT_ProductsAll", portalIDParameter, itemViewerIDParameter, returnAllFieldsParameter);
        }
    
        public virtual int CAT_ProductsDBEmpty(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductsDBEmpty", portalIDParameter);
        }
    
        public virtual int CAT_ProductSearch(Nullable<int> portalID, string search, Nullable<bool> showOnlyIfStock, Nullable<int> advCatID, Nullable<int> categoryID, Nullable<int> category2ID, string category3, Nullable<System.DateTime> minPublicationEnd, Nullable<System.DateTime> maxPublicationEnd, Nullable<decimal> minUnitCost, Nullable<decimal> maxUnitCost, Nullable<int> createdByUser, Nullable<int> minBids, Nullable<int> maxBids, string productName, string productNumber, string eAN, string iSBN, string uRL, string free1, string free2, string free3, Nullable<int> productID, string status, string culture, Nullable<bool> includeAllFields, string sort)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var searchParameter = search != null ?
                new ObjectParameter("Search", search) :
                new ObjectParameter("Search", typeof(string));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var minPublicationEndParameter = minPublicationEnd.HasValue ?
                new ObjectParameter("MinPublicationEnd", minPublicationEnd) :
                new ObjectParameter("MinPublicationEnd", typeof(System.DateTime));
    
            var maxPublicationEndParameter = maxPublicationEnd.HasValue ?
                new ObjectParameter("MaxPublicationEnd", maxPublicationEnd) :
                new ObjectParameter("MaxPublicationEnd", typeof(System.DateTime));
    
            var minUnitCostParameter = minUnitCost.HasValue ?
                new ObjectParameter("MinUnitCost", minUnitCost) :
                new ObjectParameter("MinUnitCost", typeof(decimal));
    
            var maxUnitCostParameter = maxUnitCost.HasValue ?
                new ObjectParameter("MaxUnitCost", maxUnitCost) :
                new ObjectParameter("MaxUnitCost", typeof(decimal));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var minBidsParameter = minBids.HasValue ?
                new ObjectParameter("MinBids", minBids) :
                new ObjectParameter("MinBids", typeof(int));
    
            var maxBidsParameter = maxBids.HasValue ?
                new ObjectParameter("MaxBids", maxBids) :
                new ObjectParameter("MaxBids", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var free1Parameter = free1 != null ?
                new ObjectParameter("Free1", free1) :
                new ObjectParameter("Free1", typeof(string));
    
            var free2Parameter = free2 != null ?
                new ObjectParameter("Free2", free2) :
                new ObjectParameter("Free2", typeof(string));
    
            var free3Parameter = free3 != null ?
                new ObjectParameter("Free3", free3) :
                new ObjectParameter("Free3", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var cultureParameter = culture != null ?
                new ObjectParameter("Culture", culture) :
                new ObjectParameter("Culture", typeof(string));
    
            var includeAllFieldsParameter = includeAllFields.HasValue ?
                new ObjectParameter("IncludeAllFields", includeAllFields) :
                new ObjectParameter("IncludeAllFields", typeof(bool));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductSearch", portalIDParameter, searchParameter, showOnlyIfStockParameter, advCatIDParameter, categoryIDParameter, category2IDParameter, category3Parameter, minPublicationEndParameter, maxPublicationEndParameter, minUnitCostParameter, maxUnitCostParameter, createdByUserParameter, minBidsParameter, maxBidsParameter, productNameParameter, productNumberParameter, eANParameter, iSBNParameter, uRLParameter, free1Parameter, free2Parameter, free3Parameter, productIDParameter, statusParameter, cultureParameter, includeAllFieldsParameter, sortParameter);
        }
    
        public virtual ObjectResult<CAT_ProductsFeatured_Result> CAT_ProductsFeatured(Nullable<int> portalID, Nullable<bool> showOnlyIfStock, Nullable<int> advCatID, Nullable<int> categoryID, Nullable<int> category2ID, string category3)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ProductsFeatured_Result>("CAT_ProductsFeatured", portalIDParameter, showOnlyIfStockParameter, advCatIDParameter, categoryIDParameter, category2IDParameter, category3Parameter);
        }
    
        public virtual ObjectResult<CAT_ProductsLevel1_Result> CAT_ProductsLevel1(Nullable<int> categoryID, Nullable<int> portalID, Nullable<bool> showOnlyIfStock)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ProductsLevel1_Result>("CAT_ProductsLevel1", categoryIDParameter, portalIDParameter, showOnlyIfStockParameter);
        }
    
        public virtual ObjectResult<CAT_ProductsLevel2_Result> CAT_ProductsLevel2(Nullable<int> categoryID, Nullable<int> category2ID, Nullable<int> portalID, Nullable<bool> showOnlyIfStock)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ProductsLevel2_Result>("CAT_ProductsLevel2", categoryIDParameter, category2IDParameter, portalIDParameter, showOnlyIfStockParameter);
        }
    
        public virtual ObjectResult<CAT_ProductsLevel3_Result> CAT_ProductsLevel3(Nullable<int> categoryID, Nullable<int> category2ID, string category3, Nullable<int> portalID, Nullable<bool> showOnlyIfStock)
        {
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ProductsLevel3_Result>("CAT_ProductsLevel3", categoryIDParameter, category2IDParameter, category3Parameter, portalIDParameter, showOnlyIfStockParameter);
        }
    
        public virtual ObjectResult<CAT_ProductsMostPopular_Result> CAT_ProductsMostPopular(Nullable<int> portalID, Nullable<bool> showOnlyIfStock, Nullable<int> numberOfItems, Nullable<int> advCatID, Nullable<int> categoryID, Nullable<int> category2ID, string category3)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var numberOfItemsParameter = numberOfItems.HasValue ?
                new ObjectParameter("NumberOfItems", numberOfItems) :
                new ObjectParameter("NumberOfItems", typeof(int));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ProductsMostPopular_Result>("CAT_ProductsMostPopular", portalIDParameter, showOnlyIfStockParameter, numberOfItemsParameter, advCatIDParameter, categoryIDParameter, category2IDParameter, category3Parameter);
        }
    
        public virtual int CAT_ProductSpecificFreightCosts(string cartID, ObjectParameter freightCosts)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductSpecificFreightCosts", cartIDParameter, freightCosts);
        }
    
        public virtual int CAT_ProductStockUpdate(Nullable<int> productID, Nullable<int> stock)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductStockUpdate", productIDParameter, stockParameter);
        }
    
        public virtual int CAT_ProductUpdate(Nullable<int> productID, Nullable<int> categoryID, Nullable<int> category2ID, string category3, string productName, string productNumber, string eAN, string iSBN, string free1, string free2, string free3, string keyWords, string productImage, Nullable<decimal> unitCost, Nullable<decimal> unitCost2, Nullable<decimal> unitCost3, Nullable<decimal> unitCost4, Nullable<decimal> unitCost5, Nullable<decimal> unitCost6, string description, string descriptionHTML, string uRL, Nullable<int> stock, string orderQuant, Nullable<decimal> weight, Nullable<decimal> volume, Nullable<decimal> length, Nullable<decimal> width, Nullable<decimal> height, Nullable<decimal> freightCosts1, Nullable<decimal> freightCosts2, Nullable<bool> featured, Nullable<decimal> salePrice, Nullable<System.DateTime> saleStart, Nullable<System.DateTime> saleEnd, Nullable<bool> downLoad, string zIPPassWord, string downLoadFile, Nullable<bool> archive, Nullable<int> createdByUser, Nullable<int> bulkPriceLimit1, Nullable<int> bulkPriceLimit2, Nullable<int> bulkPriceLimit3, Nullable<int> bulkPriceLimit4, Nullable<int> bulkPriceLimit5, Nullable<int> roleID, Nullable<int> subscriptionPeriod, Nullable<bool> recurringBilling, Nullable<bool> taxExempt, Nullable<bool> shipExempt, Nullable<decimal> insuredValue, Nullable<System.DateTime> publicationStart, Nullable<System.DateTime> publicationEnd, string status, Nullable<bool> donationItem, Nullable<bool> payPalSubscription, Nullable<bool> useRoleFees, Nullable<decimal> productCost, string roleExpiryType, string itemDeliveryType, Nullable<int> reorderPoint, string orderQuantValidExpr, string shippingAddress, Nullable<decimal> startingPrice, Nullable<decimal> reservePrice, string taxCode, Nullable<decimal> maxWeight, Nullable<int> totalPeriods, Nullable<bool> nonStockItem, Nullable<int> lastModifiedByUserID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productNumberParameter = productNumber != null ?
                new ObjectParameter("ProductNumber", productNumber) :
                new ObjectParameter("ProductNumber", typeof(string));
    
            var eANParameter = eAN != null ?
                new ObjectParameter("EAN", eAN) :
                new ObjectParameter("EAN", typeof(string));
    
            var iSBNParameter = iSBN != null ?
                new ObjectParameter("ISBN", iSBN) :
                new ObjectParameter("ISBN", typeof(string));
    
            var free1Parameter = free1 != null ?
                new ObjectParameter("Free1", free1) :
                new ObjectParameter("Free1", typeof(string));
    
            var free2Parameter = free2 != null ?
                new ObjectParameter("Free2", free2) :
                new ObjectParameter("Free2", typeof(string));
    
            var free3Parameter = free3 != null ?
                new ObjectParameter("Free3", free3) :
                new ObjectParameter("Free3", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(string));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var unitCost2Parameter = unitCost2.HasValue ?
                new ObjectParameter("UnitCost2", unitCost2) :
                new ObjectParameter("UnitCost2", typeof(decimal));
    
            var unitCost3Parameter = unitCost3.HasValue ?
                new ObjectParameter("UnitCost3", unitCost3) :
                new ObjectParameter("UnitCost3", typeof(decimal));
    
            var unitCost4Parameter = unitCost4.HasValue ?
                new ObjectParameter("UnitCost4", unitCost4) :
                new ObjectParameter("UnitCost4", typeof(decimal));
    
            var unitCost5Parameter = unitCost5.HasValue ?
                new ObjectParameter("UnitCost5", unitCost5) :
                new ObjectParameter("UnitCost5", typeof(decimal));
    
            var unitCost6Parameter = unitCost6.HasValue ?
                new ObjectParameter("UnitCost6", unitCost6) :
                new ObjectParameter("UnitCost6", typeof(decimal));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var descriptionHTMLParameter = descriptionHTML != null ?
                new ObjectParameter("DescriptionHTML", descriptionHTML) :
                new ObjectParameter("DescriptionHTML", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var stockParameter = stock.HasValue ?
                new ObjectParameter("Stock", stock) :
                new ObjectParameter("Stock", typeof(int));
    
            var orderQuantParameter = orderQuant != null ?
                new ObjectParameter("OrderQuant", orderQuant) :
                new ObjectParameter("OrderQuant", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(decimal));
    
            var volumeParameter = volume.HasValue ?
                new ObjectParameter("Volume", volume) :
                new ObjectParameter("Volume", typeof(decimal));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(decimal));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(decimal));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(decimal));
    
            var freightCosts1Parameter = freightCosts1.HasValue ?
                new ObjectParameter("FreightCosts1", freightCosts1) :
                new ObjectParameter("FreightCosts1", typeof(decimal));
    
            var freightCosts2Parameter = freightCosts2.HasValue ?
                new ObjectParameter("FreightCosts2", freightCosts2) :
                new ObjectParameter("FreightCosts2", typeof(decimal));
    
            var featuredParameter = featured.HasValue ?
                new ObjectParameter("Featured", featured) :
                new ObjectParameter("Featured", typeof(bool));
    
            var salePriceParameter = salePrice.HasValue ?
                new ObjectParameter("SalePrice", salePrice) :
                new ObjectParameter("SalePrice", typeof(decimal));
    
            var saleStartParameter = saleStart.HasValue ?
                new ObjectParameter("SaleStart", saleStart) :
                new ObjectParameter("SaleStart", typeof(System.DateTime));
    
            var saleEndParameter = saleEnd.HasValue ?
                new ObjectParameter("SaleEnd", saleEnd) :
                new ObjectParameter("SaleEnd", typeof(System.DateTime));
    
            var downLoadParameter = downLoad.HasValue ?
                new ObjectParameter("DownLoad", downLoad) :
                new ObjectParameter("DownLoad", typeof(bool));
    
            var zIPPassWordParameter = zIPPassWord != null ?
                new ObjectParameter("ZIPPassWord", zIPPassWord) :
                new ObjectParameter("ZIPPassWord", typeof(string));
    
            var downLoadFileParameter = downLoadFile != null ?
                new ObjectParameter("DownLoadFile", downLoadFile) :
                new ObjectParameter("DownLoadFile", typeof(string));
    
            var archiveParameter = archive.HasValue ?
                new ObjectParameter("Archive", archive) :
                new ObjectParameter("Archive", typeof(bool));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var bulkPriceLimit1Parameter = bulkPriceLimit1.HasValue ?
                new ObjectParameter("BulkPriceLimit1", bulkPriceLimit1) :
                new ObjectParameter("BulkPriceLimit1", typeof(int));
    
            var bulkPriceLimit2Parameter = bulkPriceLimit2.HasValue ?
                new ObjectParameter("BulkPriceLimit2", bulkPriceLimit2) :
                new ObjectParameter("BulkPriceLimit2", typeof(int));
    
            var bulkPriceLimit3Parameter = bulkPriceLimit3.HasValue ?
                new ObjectParameter("BulkPriceLimit3", bulkPriceLimit3) :
                new ObjectParameter("BulkPriceLimit3", typeof(int));
    
            var bulkPriceLimit4Parameter = bulkPriceLimit4.HasValue ?
                new ObjectParameter("BulkPriceLimit4", bulkPriceLimit4) :
                new ObjectParameter("BulkPriceLimit4", typeof(int));
    
            var bulkPriceLimit5Parameter = bulkPriceLimit5.HasValue ?
                new ObjectParameter("BulkPriceLimit5", bulkPriceLimit5) :
                new ObjectParameter("BulkPriceLimit5", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var subscriptionPeriodParameter = subscriptionPeriod.HasValue ?
                new ObjectParameter("SubscriptionPeriod", subscriptionPeriod) :
                new ObjectParameter("SubscriptionPeriod", typeof(int));
    
            var recurringBillingParameter = recurringBilling.HasValue ?
                new ObjectParameter("RecurringBilling", recurringBilling) :
                new ObjectParameter("RecurringBilling", typeof(bool));
    
            var taxExemptParameter = taxExempt.HasValue ?
                new ObjectParameter("TaxExempt", taxExempt) :
                new ObjectParameter("TaxExempt", typeof(bool));
    
            var shipExemptParameter = shipExempt.HasValue ?
                new ObjectParameter("ShipExempt", shipExempt) :
                new ObjectParameter("ShipExempt", typeof(bool));
    
            var insuredValueParameter = insuredValue.HasValue ?
                new ObjectParameter("InsuredValue", insuredValue) :
                new ObjectParameter("InsuredValue", typeof(decimal));
    
            var publicationStartParameter = publicationStart.HasValue ?
                new ObjectParameter("PublicationStart", publicationStart) :
                new ObjectParameter("PublicationStart", typeof(System.DateTime));
    
            var publicationEndParameter = publicationEnd.HasValue ?
                new ObjectParameter("PublicationEnd", publicationEnd) :
                new ObjectParameter("PublicationEnd", typeof(System.DateTime));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var donationItemParameter = donationItem.HasValue ?
                new ObjectParameter("DonationItem", donationItem) :
                new ObjectParameter("DonationItem", typeof(bool));
    
            var payPalSubscriptionParameter = payPalSubscription.HasValue ?
                new ObjectParameter("PayPalSubscription", payPalSubscription) :
                new ObjectParameter("PayPalSubscription", typeof(bool));
    
            var useRoleFeesParameter = useRoleFees.HasValue ?
                new ObjectParameter("UseRoleFees", useRoleFees) :
                new ObjectParameter("UseRoleFees", typeof(bool));
    
            var productCostParameter = productCost.HasValue ?
                new ObjectParameter("ProductCost", productCost) :
                new ObjectParameter("ProductCost", typeof(decimal));
    
            var roleExpiryTypeParameter = roleExpiryType != null ?
                new ObjectParameter("RoleExpiryType", roleExpiryType) :
                new ObjectParameter("RoleExpiryType", typeof(string));
    
            var itemDeliveryTypeParameter = itemDeliveryType != null ?
                new ObjectParameter("ItemDeliveryType", itemDeliveryType) :
                new ObjectParameter("ItemDeliveryType", typeof(string));
    
            var reorderPointParameter = reorderPoint.HasValue ?
                new ObjectParameter("ReorderPoint", reorderPoint) :
                new ObjectParameter("ReorderPoint", typeof(int));
    
            var orderQuantValidExprParameter = orderQuantValidExpr != null ?
                new ObjectParameter("OrderQuantValidExpr", orderQuantValidExpr) :
                new ObjectParameter("OrderQuantValidExpr", typeof(string));
    
            var shippingAddressParameter = shippingAddress != null ?
                new ObjectParameter("ShippingAddress", shippingAddress) :
                new ObjectParameter("ShippingAddress", typeof(string));
    
            var startingPriceParameter = startingPrice.HasValue ?
                new ObjectParameter("StartingPrice", startingPrice) :
                new ObjectParameter("StartingPrice", typeof(decimal));
    
            var reservePriceParameter = reservePrice.HasValue ?
                new ObjectParameter("ReservePrice", reservePrice) :
                new ObjectParameter("ReservePrice", typeof(decimal));
    
            var taxCodeParameter = taxCode != null ?
                new ObjectParameter("TaxCode", taxCode) :
                new ObjectParameter("TaxCode", typeof(string));
    
            var maxWeightParameter = maxWeight.HasValue ?
                new ObjectParameter("MaxWeight", maxWeight) :
                new ObjectParameter("MaxWeight", typeof(decimal));
    
            var totalPeriodsParameter = totalPeriods.HasValue ?
                new ObjectParameter("TotalPeriods", totalPeriods) :
                new ObjectParameter("TotalPeriods", typeof(int));
    
            var nonStockItemParameter = nonStockItem.HasValue ?
                new ObjectParameter("NonStockItem", nonStockItem) :
                new ObjectParameter("NonStockItem", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ProductUpdate", productIDParameter, categoryIDParameter, category2IDParameter, category3Parameter, productNameParameter, productNumberParameter, eANParameter, iSBNParameter, free1Parameter, free2Parameter, free3Parameter, keyWordsParameter, productImageParameter, unitCostParameter, unitCost2Parameter, unitCost3Parameter, unitCost4Parameter, unitCost5Parameter, unitCost6Parameter, descriptionParameter, descriptionHTMLParameter, uRLParameter, stockParameter, orderQuantParameter, weightParameter, volumeParameter, lengthParameter, widthParameter, heightParameter, freightCosts1Parameter, freightCosts2Parameter, featuredParameter, salePriceParameter, saleStartParameter, saleEndParameter, downLoadParameter, zIPPassWordParameter, downLoadFileParameter, archiveParameter, createdByUserParameter, bulkPriceLimit1Parameter, bulkPriceLimit2Parameter, bulkPriceLimit3Parameter, bulkPriceLimit4Parameter, bulkPriceLimit5Parameter, roleIDParameter, subscriptionPeriodParameter, recurringBillingParameter, taxExemptParameter, shipExemptParameter, insuredValueParameter, publicationStartParameter, publicationEndParameter, statusParameter, donationItemParameter, payPalSubscriptionParameter, useRoleFeesParameter, productCostParameter, roleExpiryTypeParameter, itemDeliveryTypeParameter, reorderPointParameter, orderQuantValidExprParameter, shippingAddressParameter, startingPriceParameter, reservePriceParameter, taxCodeParameter, maxWeightParameter, totalPeriodsParameter, nonStockItemParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_ReduceQuantityRemaining(Nullable<int> orderDetailsID, Nullable<int> quantity)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ReduceQuantityRemaining", orderDetailsIDParameter, quantityParameter);
        }
    
        public virtual ObjectResult<CAT_ReferrerGet_Result> CAT_ReferrerGet(Nullable<int> referralID)
        {
            var referralIDParameter = referralID.HasValue ?
                new ObjectParameter("ReferralID", referralID) :
                new ObjectParameter("ReferralID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ReferrerGet_Result>("CAT_ReferrerGet", referralIDParameter);
        }
    
        public virtual int CAT_ReferrersGet(Nullable<int> userID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ReferrersGet", userIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_RelatedProductsAddItem(Nullable<int> productID1, Nullable<int> productID2)
        {
            var productID1Parameter = productID1.HasValue ?
                new ObjectParameter("ProductID1", productID1) :
                new ObjectParameter("ProductID1", typeof(int));
    
            var productID2Parameter = productID2.HasValue ?
                new ObjectParameter("ProductID2", productID2) :
                new ObjectParameter("ProductID2", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_RelatedProductsAddItem", productID1Parameter, productID2Parameter);
        }
    
        public virtual int CAT_RelatedProductsRemoveItem(Nullable<int> relationID)
        {
            var relationIDParameter = relationID.HasValue ?
                new ObjectParameter("RelationID", relationID) :
                new ObjectParameter("RelationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_RelatedProductsRemoveItem", relationIDParameter);
        }
    
        public virtual int CAT_RemoveOrderDetailItem(Nullable<int> orderDetailsID)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_RemoveOrderDetailItem", orderDetailsIDParameter);
        }
    
        public virtual int CAT_RemoveSingleShipTo(Nullable<int> shipToID)
        {
            var shipToIDParameter = shipToID.HasValue ?
                new ObjectParameter("ShipToID", shipToID) :
                new ObjectParameter("ShipToID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_RemoveSingleShipTo", shipToIDParameter);
        }
    
        public virtual int CAT_ReviewsAdd(Nullable<int> productID, string customerName, string customerEmail, Nullable<int> rating, string comments, ObjectParameter reviewID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var customerNameParameter = customerName != null ?
                new ObjectParameter("CustomerName", customerName) :
                new ObjectParameter("CustomerName", typeof(string));
    
            var customerEmailParameter = customerEmail != null ?
                new ObjectParameter("CustomerEmail", customerEmail) :
                new ObjectParameter("CustomerEmail", typeof(string));
    
            var ratingParameter = rating.HasValue ?
                new ObjectParameter("Rating", rating) :
                new ObjectParameter("Rating", typeof(int));
    
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ReviewsAdd", productIDParameter, customerNameParameter, customerEmailParameter, ratingParameter, commentsParameter, reviewID);
        }
    
        public virtual ObjectResult<CAT_ReviewsList_Result> CAT_ReviewsList(Nullable<int> productID, Nullable<bool> isAdminRequest)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var isAdminRequestParameter = isAdminRequest.HasValue ?
                new ObjectParameter("IsAdminRequest", isAdminRequest) :
                new ObjectParameter("IsAdminRequest", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ReviewsList_Result>("CAT_ReviewsList", productIDParameter, isAdminRequestParameter);
        }
    
        public virtual ObjectResult<CAT_ReviewsListAll_Result> CAT_ReviewsListAll(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ReviewsListAll_Result>("CAT_ReviewsListAll", portalIDParameter);
        }
    
        public virtual int CAT_ReviewsRemoveItem(Nullable<int> reviewID)
        {
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ReviewsRemoveItem", reviewIDParameter);
        }
    
        public virtual int CAT_ReviewsUpdate(string comments, Nullable<int> reviewID, Nullable<bool> approved)
        {
            var commentsParameter = comments != null ?
                new ObjectParameter("Comments", comments) :
                new ObjectParameter("Comments", typeof(string));
    
            var reviewIDParameter = reviewID.HasValue ?
                new ObjectParameter("ReviewID", reviewID) :
                new ObjectParameter("ReviewID", typeof(int));
    
            var approvedParameter = approved.HasValue ?
                new ObjectParameter("Approved", approved) :
                new ObjectParameter("Approved", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ReviewsUpdate", commentsParameter, reviewIDParameter, approvedParameter);
        }
    
        public virtual int CAT_SaveCCCryptoData(Nullable<int> iD, string number, string code)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SaveCCCryptoData", iDParameter, numberParameter, codeParameter);
        }
    
        public virtual int CAT_SaveCCData(string transactionID, string authCode, string avsCode, string transactionType, string orderID, string number, Nullable<decimal> amount, Nullable<int> year, Nullable<int> month, string description, string firstName, string lastName, string errorMessage, string code, string address, string city, string country, string email, string phone, string stateProvince, string zipPostal, string cardType, string clientIP)
        {
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var authCodeParameter = authCode != null ?
                new ObjectParameter("AuthCode", authCode) :
                new ObjectParameter("AuthCode", typeof(string));
    
            var avsCodeParameter = avsCode != null ?
                new ObjectParameter("AvsCode", avsCode) :
                new ObjectParameter("AvsCode", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var stateProvinceParameter = stateProvince != null ?
                new ObjectParameter("StateProvince", stateProvince) :
                new ObjectParameter("StateProvince", typeof(string));
    
            var zipPostalParameter = zipPostal != null ?
                new ObjectParameter("ZipPostal", zipPostal) :
                new ObjectParameter("ZipPostal", typeof(string));
    
            var cardTypeParameter = cardType != null ?
                new ObjectParameter("CardType", cardType) :
                new ObjectParameter("CardType", typeof(string));
    
            var clientIPParameter = clientIP != null ?
                new ObjectParameter("ClientIP", clientIP) :
                new ObjectParameter("ClientIP", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SaveCCData", transactionIDParameter, authCodeParameter, avsCodeParameter, transactionTypeParameter, orderIDParameter, numberParameter, amountParameter, yearParameter, monthParameter, descriptionParameter, firstNameParameter, lastNameParameter, errorMessageParameter, codeParameter, addressParameter, cityParameter, countryParameter, emailParameter, phoneParameter, stateProvinceParameter, zipPostalParameter, cardTypeParameter, clientIPParameter);
        }
    
        public virtual int CAT_SaveCCTransactionID(string transactionID, string transactionType, string authCode, string code, string referenceNumber)
        {
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var authCodeParameter = authCode != null ?
                new ObjectParameter("AuthCode", authCode) :
                new ObjectParameter("AuthCode", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var referenceNumberParameter = referenceNumber != null ?
                new ObjectParameter("ReferenceNumber", referenceNumber) :
                new ObjectParameter("ReferenceNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SaveCCTransactionID", transactionIDParameter, transactionTypeParameter, authCodeParameter, codeParameter, referenceNumberParameter);
        }
    
        public virtual ObjectResult<CAT_SearchProductsForSlot_Result> CAT_SearchProductsForSlot(Nullable<int> productSlotID, Nullable<bool> showOnlyIfStock, Nullable<int> advCatID)
        {
            var productSlotIDParameter = productSlotID.HasValue ?
                new ObjectParameter("ProductSlotID", productSlotID) :
                new ObjectParameter("ProductSlotID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_SearchProductsForSlot_Result>("CAT_SearchProductsForSlot", productSlotIDParameter, showOnlyIfStockParameter, advCatIDParameter);
        }
    
        public virtual int CAT_SerialNumberAdd(Nullable<int> productID, string pOSelID, string serialNumber, Nullable<int> vendorID, Nullable<int> createdByUser, Nullable<int> sNCategoryID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SerialNumberAdd", productIDParameter, pOSelIDParameter, serialNumberParameter, vendorIDParameter, createdByUserParameter, sNCategoryIDParameter);
        }
    
        public virtual int CAT_SerialNumberDelete(Nullable<int> serialNumberID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SerialNumberDelete", serialNumberIDParameter);
        }
    
        public virtual ObjectResult<CAT_SerialNumberGet_Result> CAT_SerialNumberGet(Nullable<int> serialNumberID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_SerialNumberGet_Result>("CAT_SerialNumberGet", serialNumberIDParameter);
        }
    
        public virtual int CAT_SerialNumberOrderDetailsIDUpdate(Nullable<int> serialNumberID, Nullable<int> orderDetailsID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SerialNumberOrderDetailsIDUpdate", serialNumberIDParameter, orderDetailsIDParameter);
        }
    
        public virtual int CAT_SerialNumbersAssign(Nullable<int> orderDetailsID, Nullable<int> productID, string pOSelID, Nullable<int> quantity)
        {
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SerialNumbersAssign", orderDetailsIDParameter, productIDParameter, pOSelIDParameter, quantityParameter);
        }
    
        public virtual int CAT_SerialNumbersGetAll(Nullable<int> productID, string pOSelID, string serialNumber, Nullable<int> vendorID, Nullable<int> orderDetailsID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SerialNumbersGetAll", productIDParameter, pOSelIDParameter, serialNumberParameter, vendorIDParameter, orderDetailsIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_SerialNumbersGetCount(Nullable<int> productID, string pOSelID, string serialNumber, Nullable<int> vendorID, Nullable<int> orderDetailsID, string filter)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var orderDetailsIDParameter = orderDetailsID.HasValue ?
                new ObjectParameter("OrderDetailsID", orderDetailsID) :
                new ObjectParameter("OrderDetailsID", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SerialNumbersGetCount", productIDParameter, pOSelIDParameter, serialNumberParameter, vendorIDParameter, orderDetailsIDParameter, filterParameter);
        }
    
        public virtual int CAT_SerialNumberUpdate(Nullable<int> serialNumberID, Nullable<int> productID, string pOSelID, string serialNumber, Nullable<int> vendorID, Nullable<int> lastChangedByUser, Nullable<int> sNCategoryID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var lastChangedByUserParameter = lastChangedByUser.HasValue ?
                new ObjectParameter("LastChangedByUser", lastChangedByUser) :
                new ObjectParameter("LastChangedByUser", typeof(int));
    
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SerialNumberUpdate", serialNumberIDParameter, productIDParameter, pOSelIDParameter, serialNumberParameter, vendorIDParameter, lastChangedByUserParameter, sNCategoryIDParameter);
        }
    
        public virtual int CAT_SetAllProductsToArchive(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SetAllProductsToArchive", portalIDParameter);
        }
    
        public virtual int CAT_SetAuctionFinished(Nullable<int> auctionID)
        {
            var auctionIDParameter = auctionID.HasValue ?
                new ObjectParameter("AuctionID", auctionID) :
                new ObjectParameter("AuctionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SetAuctionFinished", auctionIDParameter);
        }
    
        public virtual int CAT_SetProductArchiveFlag(Nullable<int> productID, Nullable<bool> archive)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var archiveParameter = archive.HasValue ?
                new ObjectParameter("Archive", archive) :
                new ObjectParameter("Archive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SetProductArchiveFlag", productIDParameter, archiveParameter);
        }
    
        public virtual int CAT_SetProductFeaturedFlag(Nullable<int> productID, Nullable<bool> featured)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var featuredParameter = featured.HasValue ?
                new ObjectParameter("Featured", featured) :
                new ObjectParameter("Featured", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SetProductFeaturedFlag", productIDParameter, featuredParameter);
        }
    
        public virtual ObjectResult<string> CAT_ShoppingCartAddItem(string cartID, Nullable<int> productID, Nullable<int> quantity, Nullable<decimal> unitCost, string options, Nullable<System.DateTime> allocDate, Nullable<bool> inventoryCheck, Nullable<bool> testMode, string sKU, Nullable<int> billingPeriod, Nullable<int> cartPriceRuleID, Nullable<int> couponCodeID, Nullable<int> periodsRemaining)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var inventoryCheckParameter = inventoryCheck.HasValue ?
                new ObjectParameter("InventoryCheck", inventoryCheck) :
                new ObjectParameter("InventoryCheck", typeof(bool));
    
            var testModeParameter = testMode.HasValue ?
                new ObjectParameter("TestMode", testMode) :
                new ObjectParameter("TestMode", typeof(bool));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var billingPeriodParameter = billingPeriod.HasValue ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(int));
    
            var cartPriceRuleIDParameter = cartPriceRuleID.HasValue ?
                new ObjectParameter("CartPriceRuleID", cartPriceRuleID) :
                new ObjectParameter("CartPriceRuleID", typeof(int));
    
            var couponCodeIDParameter = couponCodeID.HasValue ?
                new ObjectParameter("CouponCodeID", couponCodeID) :
                new ObjectParameter("CouponCodeID", typeof(int));
    
            var periodsRemainingParameter = periodsRemaining.HasValue ?
                new ObjectParameter("PeriodsRemaining", periodsRemaining) :
                new ObjectParameter("PeriodsRemaining", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_ShoppingCartAddItem", cartIDParameter, productIDParameter, quantityParameter, unitCostParameter, optionsParameter, allocDateParameter, inventoryCheckParameter, testModeParameter, sKUParameter, billingPeriodParameter, cartPriceRuleIDParameter, couponCodeIDParameter, periodsRemainingParameter);
        }
    
        public virtual int CAT_ShoppingCartEmpty(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ShoppingCartEmpty", cartIDParameter);
        }
    
        public virtual int CAT_ShoppingCartItemCount(string cartID, ObjectParameter itemCount)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ShoppingCartItemCount", cartIDParameter, itemCount);
        }
    
        public virtual ObjectResult<Nullable<int>> CAT_ShoppingCartItemsCount(string cartID, Nullable<bool> shipping)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var shippingParameter = shipping.HasValue ?
                new ObjectParameter("Shipping", shipping) :
                new ObjectParameter("Shipping", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("CAT_ShoppingCartItemsCount", cartIDParameter, shippingParameter);
        }
    
        public virtual ObjectResult<CAT_ShoppingCartList_Result> CAT_ShoppingCartList(string cartID, Nullable<bool> includeConfig)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var includeConfigParameter = includeConfig.HasValue ?
                new ObjectParameter("IncludeConfig", includeConfig) :
                new ObjectParameter("IncludeConfig", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ShoppingCartList_Result>("CAT_ShoppingCartList", cartIDParameter, includeConfigParameter);
        }
    
        public virtual ObjectResult<CAT_ShoppingCartListMini_Result> CAT_ShoppingCartListMini(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ShoppingCartListMini_Result>("CAT_ShoppingCartListMini", cartIDParameter);
        }
    
        public virtual int CAT_ShoppingCartMigrate(string originalCartId, string newCartId)
        {
            var originalCartIdParameter = originalCartId != null ?
                new ObjectParameter("OriginalCartId", originalCartId) :
                new ObjectParameter("OriginalCartId", typeof(string));
    
            var newCartIdParameter = newCartId != null ?
                new ObjectParameter("NewCartId", newCartId) :
                new ObjectParameter("NewCartId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ShoppingCartMigrate", originalCartIdParameter, newCartIdParameter);
        }
    
        public virtual int CAT_ShoppingCartRemoveAbandoned(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ShoppingCartRemoveAbandoned", portalIDParameter);
        }
    
        public virtual int CAT_ShoppingCartRemoveItem(Nullable<int> recordID)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ShoppingCartRemoveItem", recordIDParameter);
        }
    
        public virtual ObjectResult<CAT_ShoppingCartTotal_Result> CAT_ShoppingCartTotal(string cartID, Nullable<bool> storePriceType)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var storePriceTypeParameter = storePriceType.HasValue ?
                new ObjectParameter("StorePriceType", storePriceType) :
                new ObjectParameter("StorePriceType", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ShoppingCartTotal_Result>("CAT_ShoppingCartTotal", cartIDParameter, storePriceTypeParameter);
        }
    
        public virtual ObjectResult<string> CAT_ShoppingCartUpdate(Nullable<int> recordID, Nullable<int> quantity, Nullable<decimal> unitCost, Nullable<decimal> tax, Nullable<decimal> tax2, string options, Nullable<bool> configCompleted, string cartID, Nullable<bool> inventoryCheck, Nullable<bool> testMode, string sKU, Nullable<int> billingPeriod, Nullable<decimal> loyaltyDiscount, Nullable<bool> stockControlType, Nullable<int> periodsRemaining)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var tax2Parameter = tax2.HasValue ?
                new ObjectParameter("Tax2", tax2) :
                new ObjectParameter("Tax2", typeof(decimal));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var configCompletedParameter = configCompleted.HasValue ?
                new ObjectParameter("ConfigCompleted", configCompleted) :
                new ObjectParameter("ConfigCompleted", typeof(bool));
    
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var inventoryCheckParameter = inventoryCheck.HasValue ?
                new ObjectParameter("InventoryCheck", inventoryCheck) :
                new ObjectParameter("InventoryCheck", typeof(bool));
    
            var testModeParameter = testMode.HasValue ?
                new ObjectParameter("TestMode", testMode) :
                new ObjectParameter("TestMode", typeof(bool));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var billingPeriodParameter = billingPeriod.HasValue ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(int));
    
            var loyaltyDiscountParameter = loyaltyDiscount.HasValue ?
                new ObjectParameter("LoyaltyDiscount", loyaltyDiscount) :
                new ObjectParameter("LoyaltyDiscount", typeof(decimal));
    
            var stockControlTypeParameter = stockControlType.HasValue ?
                new ObjectParameter("StockControlType", stockControlType) :
                new ObjectParameter("StockControlType", typeof(bool));
    
            var periodsRemainingParameter = periodsRemaining.HasValue ?
                new ObjectParameter("PeriodsRemaining", periodsRemaining) :
                new ObjectParameter("PeriodsRemaining", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_ShoppingCartUpdate", recordIDParameter, quantityParameter, unitCostParameter, taxParameter, tax2Parameter, optionsParameter, configCompletedParameter, cartIDParameter, inventoryCheckParameter, testModeParameter, sKUParameter, billingPeriodParameter, loyaltyDiscountParameter, stockControlTypeParameter, periodsRemainingParameter);
        }
    
        public virtual int CAT_ShoppingCartWeight(string cartID, ObjectParameter weight)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ShoppingCartWeight", cartIDParameter, weight);
        }
    
        public virtual ObjectResult<CAT_SNCategoriesGet_Result> CAT_SNCategoriesGet(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_SNCategoriesGet_Result>("CAT_SNCategoriesGet", portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_SNCategoryAdd(Nullable<int> portalID, string name, string applyMethod, Nullable<int> minSNRemainingCount)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applyMethodParameter = applyMethod != null ?
                new ObjectParameter("ApplyMethod", applyMethod) :
                new ObjectParameter("ApplyMethod", typeof(string));
    
            var minSNRemainingCountParameter = minSNRemainingCount.HasValue ?
                new ObjectParameter("MinSNRemainingCount", minSNRemainingCount) :
                new ObjectParameter("MinSNRemainingCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_SNCategoryAdd", portalIDParameter, nameParameter, applyMethodParameter, minSNRemainingCountParameter);
        }
    
        public virtual int CAT_SNCategoryDelete(Nullable<int> sNCategoryID)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SNCategoryDelete", sNCategoryIDParameter);
        }
    
        public virtual ObjectResult<CAT_SNCategoryGet_Result> CAT_SNCategoryGet(Nullable<int> sNCategoryID)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_SNCategoryGet_Result>("CAT_SNCategoryGet", sNCategoryIDParameter);
        }
    
        public virtual int CAT_SNCategoryUpdate(Nullable<int> sNCategoryID, string name, string applyMethod, Nullable<int> minSNRemainingCount)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applyMethodParameter = applyMethod != null ?
                new ObjectParameter("ApplyMethod", applyMethod) :
                new ObjectParameter("ApplyMethod", typeof(string));
    
            var minSNRemainingCountParameter = minSNRemainingCount.HasValue ?
                new ObjectParameter("MinSNRemainingCount", minSNRemainingCount) :
                new ObjectParameter("MinSNRemainingCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SNCategoryUpdate", sNCategoryIDParameter, nameParameter, applyMethodParameter, minSNRemainingCountParameter);
        }
    
        public virtual int CAT_SrchMatch(string token, Nullable<bool> wholeWords)
        {
            var tokenParameter = token != null ?
                new ObjectParameter("Token", token) :
                new ObjectParameter("Token", typeof(string));
    
            var wholeWordsParameter = wholeWords.HasValue ?
                new ObjectParameter("WholeWords", wholeWords) :
                new ObjectParameter("WholeWords", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SrchMatch", tokenParameter, wholeWordsParameter);
        }
    
        public virtual int CAT_SrchMatchAllWords(string token0, string token1, string token2, string token3, string token4, string token5, string token6, string token7, string token8, string token9, Nullable<bool> wholeWords)
        {
            var token0Parameter = token0 != null ?
                new ObjectParameter("Token0", token0) :
                new ObjectParameter("Token0", typeof(string));
    
            var token1Parameter = token1 != null ?
                new ObjectParameter("Token1", token1) :
                new ObjectParameter("Token1", typeof(string));
    
            var token2Parameter = token2 != null ?
                new ObjectParameter("Token2", token2) :
                new ObjectParameter("Token2", typeof(string));
    
            var token3Parameter = token3 != null ?
                new ObjectParameter("Token3", token3) :
                new ObjectParameter("Token3", typeof(string));
    
            var token4Parameter = token4 != null ?
                new ObjectParameter("Token4", token4) :
                new ObjectParameter("Token4", typeof(string));
    
            var token5Parameter = token5 != null ?
                new ObjectParameter("Token5", token5) :
                new ObjectParameter("Token5", typeof(string));
    
            var token6Parameter = token6 != null ?
                new ObjectParameter("Token6", token6) :
                new ObjectParameter("Token6", typeof(string));
    
            var token7Parameter = token7 != null ?
                new ObjectParameter("Token7", token7) :
                new ObjectParameter("Token7", typeof(string));
    
            var token8Parameter = token8 != null ?
                new ObjectParameter("Token8", token8) :
                new ObjectParameter("Token8", typeof(string));
    
            var token9Parameter = token9 != null ?
                new ObjectParameter("Token9", token9) :
                new ObjectParameter("Token9", typeof(string));
    
            var wholeWordsParameter = wholeWords.HasValue ?
                new ObjectParameter("WholeWords", wholeWords) :
                new ObjectParameter("WholeWords", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SrchMatchAllWords", token0Parameter, token1Parameter, token2Parameter, token3Parameter, token4Parameter, token5Parameter, token6Parameter, token7Parameter, token8Parameter, token9Parameter, wholeWordsParameter);
        }
    
        public virtual int CAT_SrchParse(string srchData, Nullable<bool> wholeWords)
        {
            var srchDataParameter = srchData != null ?
                new ObjectParameter("SrchData", srchData) :
                new ObjectParameter("SrchData", typeof(string));
    
            var wholeWordsParameter = wholeWords.HasValue ?
                new ObjectParameter("WholeWords", wholeWords) :
                new ObjectParameter("WholeWords", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SrchParse", srchDataParameter, wholeWordsParameter);
        }
    
        public virtual int CAT_SrchParseAllWords(string srchData, Nullable<bool> wholeWords)
        {
            var srchDataParameter = srchData != null ?
                new ObjectParameter("SrchData", srchData) :
                new ObjectParameter("SrchData", typeof(string));
    
            var wholeWordsParameter = wholeWords.HasValue ?
                new ObjectParameter("WholeWords", wholeWords) :
                new ObjectParameter("WholeWords", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SrchParseAllWords", srchDataParameter, wholeWordsParameter);
        }
    
        public virtual int CAT_SRSerialNumberAdd(Nullable<int> shippingRateID, string serialNumber, Nullable<int> vendorID, Nullable<int> createdByUser, Nullable<int> sNCategoryID)
        {
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSerialNumberAdd", shippingRateIDParameter, serialNumberParameter, vendorIDParameter, createdByUserParameter, sNCategoryIDParameter);
        }
    
        public virtual int CAT_SRSerialNumberDelete(Nullable<int> serialNumberID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSerialNumberDelete", serialNumberIDParameter);
        }
    
        public virtual ObjectResult<CAT_SRSerialNumberGet_Result> CAT_SRSerialNumberGet(Nullable<int> serialNumberID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_SRSerialNumberGet_Result>("CAT_SRSerialNumberGet", serialNumberIDParameter);
        }
    
        public virtual int CAT_SRSerialNumberOrderIDUpdate(Nullable<int> serialNumberID, Nullable<int> orderID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSerialNumberOrderIDUpdate", serialNumberIDParameter, orderIDParameter);
        }
    
        public virtual int CAT_SRSerialNumbersAssign(Nullable<int> orderID, Nullable<int> shippingRateID, Nullable<int> quantity)
        {
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSerialNumbersAssign", orderIDParameter, shippingRateIDParameter, quantityParameter);
        }
    
        public virtual int CAT_SRSerialNumbersGetAll(Nullable<int> shippingRateID, string serialNumber, Nullable<int> vendorID, Nullable<int> orderID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort)
        {
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSerialNumbersGetAll", shippingRateIDParameter, serialNumberParameter, vendorIDParameter, orderIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter);
        }
    
        public virtual int CAT_SRSerialNumbersGetCount(Nullable<int> shippingRateID, string serialNumber, Nullable<int> vendorID, Nullable<int> orderID, string filter)
        {
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSerialNumbersGetCount", shippingRateIDParameter, serialNumberParameter, vendorIDParameter, orderIDParameter, filterParameter);
        }
    
        public virtual int CAT_SRSerialNumberUpdate(Nullable<int> serialNumberID, Nullable<int> shippingRateID, string serialNumber, Nullable<int> vendorID, Nullable<int> lastChangedByUser, Nullable<int> sNCategoryID, Nullable<int> orderID)
        {
            var serialNumberIDParameter = serialNumberID.HasValue ?
                new ObjectParameter("SerialNumberID", serialNumberID) :
                new ObjectParameter("SerialNumberID", typeof(int));
    
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            var serialNumberParameter = serialNumber != null ?
                new ObjectParameter("SerialNumber", serialNumber) :
                new ObjectParameter("SerialNumber", typeof(string));
    
            var vendorIDParameter = vendorID.HasValue ?
                new ObjectParameter("VendorID", vendorID) :
                new ObjectParameter("VendorID", typeof(int));
    
            var lastChangedByUserParameter = lastChangedByUser.HasValue ?
                new ObjectParameter("LastChangedByUser", lastChangedByUser) :
                new ObjectParameter("LastChangedByUser", typeof(int));
    
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            var orderIDParameter = orderID.HasValue ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSerialNumberUpdate", serialNumberIDParameter, shippingRateIDParameter, serialNumberParameter, vendorIDParameter, lastChangedByUserParameter, sNCategoryIDParameter, orderIDParameter);
        }
    
        public virtual ObjectResult<CAT_SRSNCategoriesGet_Result> CAT_SRSNCategoriesGet(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_SRSNCategoriesGet_Result>("CAT_SRSNCategoriesGet", portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_SRSNCategoryAdd(Nullable<int> portalID, string name, string applyMethod, Nullable<int> minSNRemainingCount)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applyMethodParameter = applyMethod != null ?
                new ObjectParameter("ApplyMethod", applyMethod) :
                new ObjectParameter("ApplyMethod", typeof(string));
    
            var minSNRemainingCountParameter = minSNRemainingCount.HasValue ?
                new ObjectParameter("MinSNRemainingCount", minSNRemainingCount) :
                new ObjectParameter("MinSNRemainingCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_SRSNCategoryAdd", portalIDParameter, nameParameter, applyMethodParameter, minSNRemainingCountParameter);
        }
    
        public virtual int CAT_SRSNCategoryDelete(Nullable<int> sNCategoryID)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSNCategoryDelete", sNCategoryIDParameter);
        }
    
        public virtual ObjectResult<CAT_SRSNCategoryGet_Result> CAT_SRSNCategoryGet(Nullable<int> sNCategoryID)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_SRSNCategoryGet_Result>("CAT_SRSNCategoryGet", sNCategoryIDParameter);
        }
    
        public virtual int CAT_SRSNCategoryUpdate(Nullable<int> sNCategoryID, string name, string applyMethod, Nullable<int> minSNRemainingCount)
        {
            var sNCategoryIDParameter = sNCategoryID.HasValue ?
                new ObjectParameter("SNCategoryID", sNCategoryID) :
                new ObjectParameter("SNCategoryID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var applyMethodParameter = applyMethod != null ?
                new ObjectParameter("ApplyMethod", applyMethod) :
                new ObjectParameter("ApplyMethod", typeof(string));
    
            var minSNRemainingCountParameter = minSNRemainingCount.HasValue ?
                new ObjectParameter("MinSNRemainingCount", minSNRemainingCount) :
                new ObjectParameter("MinSNRemainingCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SRSNCategoryUpdate", sNCategoryIDParameter, nameParameter, applyMethodParameter, minSNRemainingCountParameter);
        }
    
        public virtual int CAT_SyncBaseStock(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_SyncBaseStock", productIDParameter);
        }
    
        public virtual int CAT_TestStoreTabIDByPortalID(Nullable<int> portalID, string moduleName, Nullable<int> tabID, ObjectParameter exists)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_TestStoreTabIDByPortalID", portalIDParameter, moduleNameParameter, tabIDParameter, exists);
        }
    
        public virtual int CAT_ThreadAdd(Nullable<int> threadID, Nullable<int> notifiedUserID, Nullable<int> portalID, Nullable<int> categoryID, string subject, Nullable<bool> isClosed, string profileProperties, string name, string email)
        {
            var threadIDParameter = threadID.HasValue ?
                new ObjectParameter("ThreadID", threadID) :
                new ObjectParameter("ThreadID", typeof(int));
    
            var notifiedUserIDParameter = notifiedUserID.HasValue ?
                new ObjectParameter("NotifiedUserID", notifiedUserID) :
                new ObjectParameter("NotifiedUserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var isClosedParameter = isClosed.HasValue ?
                new ObjectParameter("IsClosed", isClosed) :
                new ObjectParameter("IsClosed", typeof(bool));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ThreadAdd", threadIDParameter, notifiedUserIDParameter, portalIDParameter, categoryIDParameter, subjectParameter, isClosedParameter, profilePropertiesParameter, nameParameter, emailParameter);
        }
    
        public virtual int CAT_ThreadGetAll(Nullable<int> portalID, Nullable<int> categoryID, Nullable<int> notifiedUserID, Nullable<int> pageSize, Nullable<int> pageIndex, string filter, string sort, Nullable<int> currentUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var notifiedUserIDParameter = notifiedUserID.HasValue ?
                new ObjectParameter("NotifiedUserID", notifiedUserID) :
                new ObjectParameter("NotifiedUserID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var sortParameter = sort != null ?
                new ObjectParameter("Sort", sort) :
                new ObjectParameter("Sort", typeof(string));
    
            var currentUserIDParameter = currentUserID.HasValue ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ThreadGetAll", portalIDParameter, categoryIDParameter, notifiedUserIDParameter, pageSizeParameter, pageIndexParameter, filterParameter, sortParameter, currentUserIDParameter);
        }
    
        public virtual int CAT_ThreadGetCount(Nullable<int> portalID, Nullable<int> categoryID, Nullable<int> notifiedUserID, string filter, Nullable<int> currentUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var notifiedUserIDParameter = notifiedUserID.HasValue ?
                new ObjectParameter("NotifiedUserID", notifiedUserID) :
                new ObjectParameter("NotifiedUserID", typeof(int));
    
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var currentUserIDParameter = currentUserID.HasValue ?
                new ObjectParameter("CurrentUserID", currentUserID) :
                new ObjectParameter("CurrentUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ThreadGetCount", portalIDParameter, categoryIDParameter, notifiedUserIDParameter, filterParameter, currentUserIDParameter);
        }
    
        public virtual int CAT_ThreadUpdate(Nullable<int> threadID, Nullable<int> postID, Nullable<int> notifiedUserID, Nullable<int> categoryID, Nullable<bool> isClosed)
        {
            var threadIDParameter = threadID.HasValue ?
                new ObjectParameter("ThreadID", threadID) :
                new ObjectParameter("ThreadID", typeof(int));
    
            var postIDParameter = postID.HasValue ?
                new ObjectParameter("PostID", postID) :
                new ObjectParameter("PostID", typeof(int));
    
            var notifiedUserIDParameter = notifiedUserID.HasValue ?
                new ObjectParameter("NotifiedUserID", notifiedUserID) :
                new ObjectParameter("NotifiedUserID", typeof(int));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var isClosedParameter = isClosed.HasValue ?
                new ObjectParameter("IsClosed", isClosed) :
                new ObjectParameter("IsClosed", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ThreadUpdate", threadIDParameter, postIDParameter, notifiedUserIDParameter, categoryIDParameter, isClosedParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> CAT_TransactionAdd(string address, Nullable<decimal> amount, string authCode, string avsCode, string bankAccountName, string bankAccountNumber, Nullable<int> bankAccountType, string bankCode, string bankName, string cardType, string city, string clientIP, string code, string country, string description, string email, string errorMessage, string firstName, string lastName, Nullable<int> month, string number, string orderID, string phone, string referenceNumber, string stateProvince, string status, string transactionID, string transactionType, Nullable<int> year, string zipPostal, string profileProperties, Nullable<decimal> customerTransFeeAmt, Nullable<decimal> merchantTransFeeAmt, Nullable<int> paymentMethodID)
        {
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var authCodeParameter = authCode != null ?
                new ObjectParameter("AuthCode", authCode) :
                new ObjectParameter("AuthCode", typeof(string));
    
            var avsCodeParameter = avsCode != null ?
                new ObjectParameter("AvsCode", avsCode) :
                new ObjectParameter("AvsCode", typeof(string));
    
            var bankAccountNameParameter = bankAccountName != null ?
                new ObjectParameter("BankAccountName", bankAccountName) :
                new ObjectParameter("BankAccountName", typeof(string));
    
            var bankAccountNumberParameter = bankAccountNumber != null ?
                new ObjectParameter("BankAccountNumber", bankAccountNumber) :
                new ObjectParameter("BankAccountNumber", typeof(string));
    
            var bankAccountTypeParameter = bankAccountType.HasValue ?
                new ObjectParameter("BankAccountType", bankAccountType) :
                new ObjectParameter("BankAccountType", typeof(int));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var cardTypeParameter = cardType != null ?
                new ObjectParameter("CardType", cardType) :
                new ObjectParameter("CardType", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var clientIPParameter = clientIP != null ?
                new ObjectParameter("ClientIP", clientIP) :
                new ObjectParameter("ClientIP", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var referenceNumberParameter = referenceNumber != null ?
                new ObjectParameter("ReferenceNumber", referenceNumber) :
                new ObjectParameter("ReferenceNumber", typeof(string));
    
            var stateProvinceParameter = stateProvince != null ?
                new ObjectParameter("StateProvince", stateProvince) :
                new ObjectParameter("StateProvince", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var zipPostalParameter = zipPostal != null ?
                new ObjectParameter("ZipPostal", zipPostal) :
                new ObjectParameter("ZipPostal", typeof(string));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            var customerTransFeeAmtParameter = customerTransFeeAmt.HasValue ?
                new ObjectParameter("CustomerTransFeeAmt", customerTransFeeAmt) :
                new ObjectParameter("CustomerTransFeeAmt", typeof(decimal));
    
            var merchantTransFeeAmtParameter = merchantTransFeeAmt.HasValue ?
                new ObjectParameter("MerchantTransFeeAmt", merchantTransFeeAmt) :
                new ObjectParameter("MerchantTransFeeAmt", typeof(decimal));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("CAT_TransactionAdd", addressParameter, amountParameter, authCodeParameter, avsCodeParameter, bankAccountNameParameter, bankAccountNumberParameter, bankAccountTypeParameter, bankCodeParameter, bankNameParameter, cardTypeParameter, cityParameter, clientIPParameter, codeParameter, countryParameter, descriptionParameter, emailParameter, errorMessageParameter, firstNameParameter, lastNameParameter, monthParameter, numberParameter, orderIDParameter, phoneParameter, referenceNumberParameter, stateProvinceParameter, statusParameter, transactionIDParameter, transactionTypeParameter, yearParameter, zipPostalParameter, profilePropertiesParameter, customerTransFeeAmtParameter, merchantTransFeeAmtParameter, paymentMethodIDParameter);
        }
    
        public virtual ObjectResult<string> CAT_TransactionOrderIDGet(string orderID2)
        {
            var orderID2Parameter = orderID2 != null ?
                new ObjectParameter("OrderID2", orderID2) :
                new ObjectParameter("OrderID2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("CAT_TransactionOrderIDGet", orderID2Parameter);
        }
    
        public virtual int CAT_TransactionOrderIDSet(string orderID, string orderID2)
        {
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var orderID2Parameter = orderID2 != null ?
                new ObjectParameter("OrderID2", orderID2) :
                new ObjectParameter("OrderID2", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_TransactionOrderIDSet", orderIDParameter, orderID2Parameter);
        }
    
        public virtual int CAT_TransactionOrderIDUpdate(string orderID, string newOrderID)
        {
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var newOrderIDParameter = newOrderID != null ?
                new ObjectParameter("NewOrderID", newOrderID) :
                new ObjectParameter("NewOrderID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_TransactionOrderIDUpdate", orderIDParameter, newOrderIDParameter);
        }
    
        public virtual ObjectResult<CAT_TransactionsGet_Result> CAT_TransactionsGet(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_TransactionsGet_Result>("CAT_TransactionsGet", portalIDParameter);
        }
    
        public virtual int CAT_TransactionUpdate(Nullable<int> iD, string address, Nullable<decimal> amount, string authCode, string avsCode, string bankAccountName, string bankAccountNumber, Nullable<int> bankAccountType, string bankCode, string bankName, string cardType, string city, string clientIP, string code, string country, string description, string email, string errorMessage, string firstName, string lastName, Nullable<int> month, string number, string orderID, string phone, string referenceNumber, string stateProvince, string status, Nullable<System.DateTime> transactionDate, string transactionID, string transactionType, Nullable<int> year, string zipPostal, string profileProperties, Nullable<decimal> customerTransFeeAmt, Nullable<decimal> merchantTransFeeAmt, Nullable<int> paymentMethodID, Nullable<int> lastModifiedByUserID)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var authCodeParameter = authCode != null ?
                new ObjectParameter("AuthCode", authCode) :
                new ObjectParameter("AuthCode", typeof(string));
    
            var avsCodeParameter = avsCode != null ?
                new ObjectParameter("AvsCode", avsCode) :
                new ObjectParameter("AvsCode", typeof(string));
    
            var bankAccountNameParameter = bankAccountName != null ?
                new ObjectParameter("BankAccountName", bankAccountName) :
                new ObjectParameter("BankAccountName", typeof(string));
    
            var bankAccountNumberParameter = bankAccountNumber != null ?
                new ObjectParameter("BankAccountNumber", bankAccountNumber) :
                new ObjectParameter("BankAccountNumber", typeof(string));
    
            var bankAccountTypeParameter = bankAccountType.HasValue ?
                new ObjectParameter("BankAccountType", bankAccountType) :
                new ObjectParameter("BankAccountType", typeof(int));
    
            var bankCodeParameter = bankCode != null ?
                new ObjectParameter("BankCode", bankCode) :
                new ObjectParameter("BankCode", typeof(string));
    
            var bankNameParameter = bankName != null ?
                new ObjectParameter("BankName", bankName) :
                new ObjectParameter("BankName", typeof(string));
    
            var cardTypeParameter = cardType != null ?
                new ObjectParameter("CardType", cardType) :
                new ObjectParameter("CardType", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var clientIPParameter = clientIP != null ?
                new ObjectParameter("ClientIP", clientIP) :
                new ObjectParameter("ClientIP", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var errorMessageParameter = errorMessage != null ?
                new ObjectParameter("ErrorMessage", errorMessage) :
                new ObjectParameter("ErrorMessage", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var monthParameter = month.HasValue ?
                new ObjectParameter("Month", month) :
                new ObjectParameter("Month", typeof(int));
    
            var numberParameter = number != null ?
                new ObjectParameter("Number", number) :
                new ObjectParameter("Number", typeof(string));
    
            var orderIDParameter = orderID != null ?
                new ObjectParameter("OrderID", orderID) :
                new ObjectParameter("OrderID", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var referenceNumberParameter = referenceNumber != null ?
                new ObjectParameter("ReferenceNumber", referenceNumber) :
                new ObjectParameter("ReferenceNumber", typeof(string));
    
            var stateProvinceParameter = stateProvince != null ?
                new ObjectParameter("StateProvince", stateProvince) :
                new ObjectParameter("StateProvince", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var transactionDateParameter = transactionDate.HasValue ?
                new ObjectParameter("TransactionDate", transactionDate) :
                new ObjectParameter("TransactionDate", typeof(System.DateTime));
    
            var transactionIDParameter = transactionID != null ?
                new ObjectParameter("TransactionID", transactionID) :
                new ObjectParameter("TransactionID", typeof(string));
    
            var transactionTypeParameter = transactionType != null ?
                new ObjectParameter("TransactionType", transactionType) :
                new ObjectParameter("TransactionType", typeof(string));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("Year", year) :
                new ObjectParameter("Year", typeof(int));
    
            var zipPostalParameter = zipPostal != null ?
                new ObjectParameter("ZipPostal", zipPostal) :
                new ObjectParameter("ZipPostal", typeof(string));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            var customerTransFeeAmtParameter = customerTransFeeAmt.HasValue ?
                new ObjectParameter("CustomerTransFeeAmt", customerTransFeeAmt) :
                new ObjectParameter("CustomerTransFeeAmt", typeof(decimal));
    
            var merchantTransFeeAmtParameter = merchantTransFeeAmt.HasValue ?
                new ObjectParameter("MerchantTransFeeAmt", merchantTransFeeAmt) :
                new ObjectParameter("MerchantTransFeeAmt", typeof(decimal));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_TransactionUpdate", iDParameter, addressParameter, amountParameter, authCodeParameter, avsCodeParameter, bankAccountNameParameter, bankAccountNumberParameter, bankAccountTypeParameter, bankCodeParameter, bankNameParameter, cardTypeParameter, cityParameter, clientIPParameter, codeParameter, countryParameter, descriptionParameter, emailParameter, errorMessageParameter, firstNameParameter, lastNameParameter, monthParameter, numberParameter, orderIDParameter, phoneParameter, referenceNumberParameter, stateProvinceParameter, statusParameter, transactionDateParameter, transactionIDParameter, transactionTypeParameter, yearParameter, zipPostalParameter, profilePropertiesParameter, customerTransFeeAmtParameter, merchantTransFeeAmtParameter, paymentMethodIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_UpdateAdvCat(Nullable<int> advCatId, string advCatName, Nullable<bool> isVisible, Nullable<bool> disableLink, Nullable<int> parentId, string iconFile, string title, string description, string keyWords, string advCatImportID, Nullable<bool> isDeleted, string url, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var advCatIdParameter = advCatId.HasValue ?
                new ObjectParameter("AdvCatId", advCatId) :
                new ObjectParameter("AdvCatId", typeof(int));
    
            var advCatNameParameter = advCatName != null ?
                new ObjectParameter("AdvCatName", advCatName) :
                new ObjectParameter("AdvCatName", typeof(string));
    
            var isVisibleParameter = isVisible.HasValue ?
                new ObjectParameter("IsVisible", isVisible) :
                new ObjectParameter("IsVisible", typeof(bool));
    
            var disableLinkParameter = disableLink.HasValue ?
                new ObjectParameter("DisableLink", disableLink) :
                new ObjectParameter("DisableLink", typeof(bool));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var advCatImportIDParameter = advCatImportID != null ?
                new ObjectParameter("AdvCatImportID", advCatImportID) :
                new ObjectParameter("AdvCatImportID", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateAdvCat", advCatIdParameter, advCatNameParameter, isVisibleParameter, disableLinkParameter, parentIdParameter, iconFileParameter, titleParameter, descriptionParameter, keyWordsParameter, advCatImportIDParameter, isDeletedParameter, urlParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int CAT_UpdateAdvCatOrder(Nullable<int> advCatId, Nullable<int> advCatOrder, Nullable<int> level, Nullable<int> parentId)
        {
            var advCatIdParameter = advCatId.HasValue ?
                new ObjectParameter("AdvCatId", advCatId) :
                new ObjectParameter("AdvCatId", typeof(int));
    
            var advCatOrderParameter = advCatOrder.HasValue ?
                new ObjectParameter("AdvCatOrder", advCatOrder) :
                new ObjectParameter("AdvCatOrder", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateAdvCatOrder", advCatIdParameter, advCatOrderParameter, levelParameter, parentIdParameter);
        }
    
        public virtual int CAT_UpdateAdvCatPermission(Nullable<int> advCatPermissionID, Nullable<int> advCatID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess)
        {
            var advCatPermissionIDParameter = advCatPermissionID.HasValue ?
                new ObjectParameter("AdvCatPermissionID", advCatPermissionID) :
                new ObjectParameter("AdvCatPermissionID", typeof(int));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateAdvCatPermission", advCatPermissionIDParameter, advCatIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter);
        }
    
        public virtual int CAT_UpdateAdvCatProduct(Nullable<int> advCatProductID, Nullable<bool> addAdvCatToProductDisplay)
        {
            var advCatProductIDParameter = advCatProductID.HasValue ?
                new ObjectParameter("AdvCatProductID", advCatProductID) :
                new ObjectParameter("AdvCatProductID", typeof(int));
    
            var addAdvCatToProductDisplayParameter = addAdvCatToProductDisplay.HasValue ?
                new ObjectParameter("AddAdvCatToProductDisplay", addAdvCatToProductDisplay) :
                new ObjectParameter("AddAdvCatToProductDisplay", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateAdvCatProduct", advCatProductIDParameter, addAdvCatToProductDisplayParameter);
        }
    
        public virtual int CAT_UpdateListItemText(Nullable<int> listItemTextID, string listItemTextDescr)
        {
            var listItemTextIDParameter = listItemTextID.HasValue ?
                new ObjectParameter("ListItemTextID", listItemTextID) :
                new ObjectParameter("ListItemTextID", typeof(int));
    
            var listItemTextDescrParameter = listItemTextDescr != null ?
                new ObjectParameter("ListItemTextDescr", listItemTextDescr) :
                new ObjectParameter("ListItemTextDescr", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateListItemText", listItemTextIDParameter, listItemTextDescrParameter);
        }
    
        public virtual int CAT_UpdateListItemType(Nullable<int> listItemTypeID, string listItemTypeName, string categoryIDs)
        {
            var listItemTypeIDParameter = listItemTypeID.HasValue ?
                new ObjectParameter("ListItemTypeID", listItemTypeID) :
                new ObjectParameter("ListItemTypeID", typeof(int));
    
            var listItemTypeNameParameter = listItemTypeName != null ?
                new ObjectParameter("ListItemTypeName", listItemTypeName) :
                new ObjectParameter("ListItemTypeName", typeof(string));
    
            var categoryIDsParameter = categoryIDs != null ?
                new ObjectParameter("CategoryIDs", categoryIDs) :
                new ObjectParameter("CategoryIDs", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateListItemType", listItemTypeIDParameter, listItemTypeNameParameter, categoryIDsParameter);
        }
    
        public virtual int CAT_UpdateMainZone(Nullable<int> mainZoneID, Nullable<int> zoneNameID, Nullable<decimal> tax, Nullable<bool> taxShipping, string taxRateName)
        {
            var mainZoneIDParameter = mainZoneID.HasValue ?
                new ObjectParameter("MainZoneID", mainZoneID) :
                new ObjectParameter("MainZoneID", typeof(int));
    
            var zoneNameIDParameter = zoneNameID.HasValue ?
                new ObjectParameter("ZoneNameID", zoneNameID) :
                new ObjectParameter("ZoneNameID", typeof(int));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var taxShippingParameter = taxShipping.HasValue ?
                new ObjectParameter("TaxShipping", taxShipping) :
                new ObjectParameter("TaxShipping", typeof(bool));
    
            var taxRateNameParameter = taxRateName != null ?
                new ObjectParameter("TaxRateName", taxRateName) :
                new ObjectParameter("TaxRateName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateMainZone", mainZoneIDParameter, zoneNameIDParameter, taxParameter, taxShippingParameter, taxRateNameParameter);
        }
    
        public virtual int CAT_UpdateNativeLanguage(string iD, string langName, Nullable<float> exchangeRate, string currencySymbol, Nullable<bool> active)
        {
            var iDParameter = iD != null ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(string));
    
            var langNameParameter = langName != null ?
                new ObjectParameter("LangName", langName) :
                new ObjectParameter("LangName", typeof(string));
    
            var exchangeRateParameter = exchangeRate.HasValue ?
                new ObjectParameter("ExchangeRate", exchangeRate) :
                new ObjectParameter("ExchangeRate", typeof(float));
    
            var currencySymbolParameter = currencySymbol != null ?
                new ObjectParameter("CurrencySymbol", currencySymbol) :
                new ObjectParameter("CurrencySymbol", typeof(string));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateNativeLanguage", iDParameter, langNameParameter, exchangeRateParameter, currencySymbolParameter, activeParameter);
        }
    
        public virtual int CAT_UpdateOption(Nullable<int> optionID, string optionName, string title, string description, string selections, string optionImage, string preselection, string status, Nullable<int> repeatCol, string controlType, Nullable<int> length, Nullable<int> columns, Nullable<int> rows, string spellCheck, string controlProperties, Nullable<bool> addToPOSelID)
        {
            var optionIDParameter = optionID.HasValue ?
                new ObjectParameter("OptionID", optionID) :
                new ObjectParameter("OptionID", typeof(int));
    
            var optionNameParameter = optionName != null ?
                new ObjectParameter("OptionName", optionName) :
                new ObjectParameter("OptionName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var selectionsParameter = selections != null ?
                new ObjectParameter("Selections", selections) :
                new ObjectParameter("Selections", typeof(string));
    
            var optionImageParameter = optionImage != null ?
                new ObjectParameter("OptionImage", optionImage) :
                new ObjectParameter("OptionImage", typeof(string));
    
            var preselectionParameter = preselection != null ?
                new ObjectParameter("Preselection", preselection) :
                new ObjectParameter("Preselection", typeof(string));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var repeatColParameter = repeatCol.HasValue ?
                new ObjectParameter("RepeatCol", repeatCol) :
                new ObjectParameter("RepeatCol", typeof(int));
    
            var controlTypeParameter = controlType != null ?
                new ObjectParameter("ControlType", controlType) :
                new ObjectParameter("ControlType", typeof(string));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(int));
    
            var columnsParameter = columns.HasValue ?
                new ObjectParameter("Columns", columns) :
                new ObjectParameter("Columns", typeof(int));
    
            var rowsParameter = rows.HasValue ?
                new ObjectParameter("Rows", rows) :
                new ObjectParameter("Rows", typeof(int));
    
            var spellCheckParameter = spellCheck != null ?
                new ObjectParameter("SpellCheck", spellCheck) :
                new ObjectParameter("SpellCheck", typeof(string));
    
            var controlPropertiesParameter = controlProperties != null ?
                new ObjectParameter("ControlProperties", controlProperties) :
                new ObjectParameter("ControlProperties", typeof(string));
    
            var addToPOSelIDParameter = addToPOSelID.HasValue ?
                new ObjectParameter("AddToPOSelID", addToPOSelID) :
                new ObjectParameter("AddToPOSelID", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateOption", optionIDParameter, optionNameParameter, titleParameter, descriptionParameter, selectionsParameter, optionImageParameter, preselectionParameter, statusParameter, repeatColParameter, controlTypeParameter, lengthParameter, columnsParameter, rowsParameter, spellCheckParameter, controlPropertiesParameter, addToPOSelIDParameter);
        }
    
        public virtual int CAT_UpdatePaymentMethodPermission(Nullable<int> paymentMethodPermissionID, Nullable<int> paymentMethodID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> lastModifiedByUserID)
        {
            var paymentMethodPermissionIDParameter = paymentMethodPermissionID.HasValue ?
                new ObjectParameter("PaymentMethodPermissionID", paymentMethodPermissionID) :
                new ObjectParameter("PaymentMethodPermissionID", typeof(int));
    
            var paymentMethodIDParameter = paymentMethodID.HasValue ?
                new ObjectParameter("PaymentMethodID", paymentMethodID) :
                new ObjectParameter("PaymentMethodID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdatePaymentMethodPermission", paymentMethodPermissionIDParameter, paymentMethodIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_UpdatePeriod(Nullable<int> periodID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> minDays, Nullable<decimal> seasonalPrice, Nullable<int> seasonID)
        {
            var periodIDParameter = periodID.HasValue ?
                new ObjectParameter("PeriodID", periodID) :
                new ObjectParameter("PeriodID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var minDaysParameter = minDays.HasValue ?
                new ObjectParameter("MinDays", minDays) :
                new ObjectParameter("MinDays", typeof(int));
    
            var seasonalPriceParameter = seasonalPrice.HasValue ?
                new ObjectParameter("SeasonalPrice", seasonalPrice) :
                new ObjectParameter("SeasonalPrice", typeof(decimal));
    
            var seasonIDParameter = seasonID.HasValue ?
                new ObjectParameter("SeasonID", seasonID) :
                new ObjectParameter("SeasonID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdatePeriod", periodIDParameter, startDateParameter, endDateParameter, minDaysParameter, seasonalPriceParameter, seasonIDParameter);
        }
    
        public virtual int CAT_UpdatePermission(Nullable<int> permissionID, string permissionCode, Nullable<int> moduleDefID, string permissionKey, string permissionName)
        {
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var permissionCodeParameter = permissionCode != null ?
                new ObjectParameter("PermissionCode", permissionCode) :
                new ObjectParameter("PermissionCode", typeof(string));
    
            var moduleDefIDParameter = moduleDefID.HasValue ?
                new ObjectParameter("ModuleDefID", moduleDefID) :
                new ObjectParameter("ModuleDefID", typeof(int));
    
            var permissionKeyParameter = permissionKey != null ?
                new ObjectParameter("PermissionKey", permissionKey) :
                new ObjectParameter("PermissionKey", typeof(string));
    
            var permissionNameParameter = permissionName != null ?
                new ObjectParameter("PermissionName", permissionName) :
                new ObjectParameter("PermissionName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdatePermission", permissionIDParameter, permissionCodeParameter, moduleDefIDParameter, permissionKeyParameter, permissionNameParameter);
        }
    
        public virtual int CAT_UpdatePriceRule(Nullable<int> priceRuleID, string description, Nullable<int> productID, Nullable<int> alsoPurchasedProductID, Nullable<int> userID, string roles, Nullable<int> categoryID, Nullable<int> category2ID, string category3, Nullable<int> advCatID, string formula, Nullable<decimal> minimum, string couponCodes, Nullable<bool> removeUsedCoupons, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> cartTotal, Nullable<int> billingPeriod, Nullable<decimal> pointsPerCurrencyUnit)
        {
            var priceRuleIDParameter = priceRuleID.HasValue ?
                new ObjectParameter("PriceRuleID", priceRuleID) :
                new ObjectParameter("PriceRuleID", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var alsoPurchasedProductIDParameter = alsoPurchasedProductID.HasValue ?
                new ObjectParameter("AlsoPurchasedProductID", alsoPurchasedProductID) :
                new ObjectParameter("AlsoPurchasedProductID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var rolesParameter = roles != null ?
                new ObjectParameter("Roles", roles) :
                new ObjectParameter("Roles", typeof(string));
    
            var categoryIDParameter = categoryID.HasValue ?
                new ObjectParameter("CategoryID", categoryID) :
                new ObjectParameter("CategoryID", typeof(int));
    
            var category2IDParameter = category2ID.HasValue ?
                new ObjectParameter("Category2ID", category2ID) :
                new ObjectParameter("Category2ID", typeof(int));
    
            var category3Parameter = category3 != null ?
                new ObjectParameter("Category3", category3) :
                new ObjectParameter("Category3", typeof(string));
    
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var minimumParameter = minimum.HasValue ?
                new ObjectParameter("Minimum", minimum) :
                new ObjectParameter("Minimum", typeof(decimal));
    
            var couponCodesParameter = couponCodes != null ?
                new ObjectParameter("CouponCodes", couponCodes) :
                new ObjectParameter("CouponCodes", typeof(string));
    
            var removeUsedCouponsParameter = removeUsedCoupons.HasValue ?
                new ObjectParameter("RemoveUsedCoupons", removeUsedCoupons) :
                new ObjectParameter("RemoveUsedCoupons", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cartTotalParameter = cartTotal.HasValue ?
                new ObjectParameter("CartTotal", cartTotal) :
                new ObjectParameter("CartTotal", typeof(decimal));
    
            var billingPeriodParameter = billingPeriod.HasValue ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(int));
    
            var pointsPerCurrencyUnitParameter = pointsPerCurrencyUnit.HasValue ?
                new ObjectParameter("PointsPerCurrencyUnit", pointsPerCurrencyUnit) :
                new ObjectParameter("PointsPerCurrencyUnit", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdatePriceRule", priceRuleIDParameter, descriptionParameter, productIDParameter, alsoPurchasedProductIDParameter, userIDParameter, rolesParameter, categoryIDParameter, category2IDParameter, category3Parameter, advCatIDParameter, formulaParameter, minimumParameter, couponCodesParameter, removeUsedCouponsParameter, startDateParameter, endDateParameter, cartTotalParameter, billingPeriodParameter, pointsPerCurrencyUnitParameter);
        }
    
        public virtual int CAT_UpdateProductFile(Nullable<int> fileID, string fileName, string description, string mediaType, Nullable<int> viewOrder, string title, string buttonIcon, Nullable<int> viewerID, string displayLocation, string viewPermissions, Nullable<int> maxNumberOfClicks, Nullable<int> accessPeriod, string reOrderLink, string pOSelID, string maxThumbWidth, string maxThumbHeight, Nullable<bool> applyToExitingOrders, Nullable<int> lastModifiedByUserID)
        {
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var mediaTypeParameter = mediaType != null ?
                new ObjectParameter("MediaType", mediaType) :
                new ObjectParameter("MediaType", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var buttonIconParameter = buttonIcon != null ?
                new ObjectParameter("ButtonIcon", buttonIcon) :
                new ObjectParameter("ButtonIcon", typeof(string));
    
            var viewerIDParameter = viewerID.HasValue ?
                new ObjectParameter("ViewerID", viewerID) :
                new ObjectParameter("ViewerID", typeof(int));
    
            var displayLocationParameter = displayLocation != null ?
                new ObjectParameter("DisplayLocation", displayLocation) :
                new ObjectParameter("DisplayLocation", typeof(string));
    
            var viewPermissionsParameter = viewPermissions != null ?
                new ObjectParameter("ViewPermissions", viewPermissions) :
                new ObjectParameter("ViewPermissions", typeof(string));
    
            var maxNumberOfClicksParameter = maxNumberOfClicks.HasValue ?
                new ObjectParameter("MaxNumberOfClicks", maxNumberOfClicks) :
                new ObjectParameter("MaxNumberOfClicks", typeof(int));
    
            var accessPeriodParameter = accessPeriod.HasValue ?
                new ObjectParameter("AccessPeriod", accessPeriod) :
                new ObjectParameter("AccessPeriod", typeof(int));
    
            var reOrderLinkParameter = reOrderLink != null ?
                new ObjectParameter("ReOrderLink", reOrderLink) :
                new ObjectParameter("ReOrderLink", typeof(string));
    
            var pOSelIDParameter = pOSelID != null ?
                new ObjectParameter("POSelID", pOSelID) :
                new ObjectParameter("POSelID", typeof(string));
    
            var maxThumbWidthParameter = maxThumbWidth != null ?
                new ObjectParameter("MaxThumbWidth", maxThumbWidth) :
                new ObjectParameter("MaxThumbWidth", typeof(string));
    
            var maxThumbHeightParameter = maxThumbHeight != null ?
                new ObjectParameter("MaxThumbHeight", maxThumbHeight) :
                new ObjectParameter("MaxThumbHeight", typeof(string));
    
            var applyToExitingOrdersParameter = applyToExitingOrders.HasValue ?
                new ObjectParameter("ApplyToExitingOrders", applyToExitingOrders) :
                new ObjectParameter("ApplyToExitingOrders", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductFile", fileIDParameter, fileNameParameter, descriptionParameter, mediaTypeParameter, viewOrderParameter, titleParameter, buttonIconParameter, viewerIDParameter, displayLocationParameter, viewPermissionsParameter, maxNumberOfClicksParameter, accessPeriodParameter, reOrderLinkParameter, pOSelIDParameter, maxThumbWidthParameter, maxThumbHeightParameter, applyToExitingOrdersParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_UpdateProductImage(Nullable<int> imageID, string imageFile, string description, Nullable<int> viewOrder)
        {
            var imageIDParameter = imageID.HasValue ?
                new ObjectParameter("ImageID", imageID) :
                new ObjectParameter("ImageID", typeof(int));
    
            var imageFileParameter = imageFile != null ?
                new ObjectParameter("ImageFile", imageFile) :
                new ObjectParameter("ImageFile", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductImage", imageIDParameter, imageFileParameter, descriptionParameter, viewOrderParameter);
        }
    
        public virtual int CAT_UpdateProductLITypeText(Nullable<int> productLITypeTextID, Nullable<int> viewOrder)
        {
            var productLITypeTextIDParameter = productLITypeTextID.HasValue ?
                new ObjectParameter("ProductLITypeTextID", productLITypeTextID) :
                new ObjectParameter("ProductLITypeTextID", typeof(int));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductLITypeText", productLITypeTextIDParameter, viewOrderParameter);
        }
    
        public virtual int CAT_UpdateProductOption(Nullable<int> productOptionID, Nullable<int> viewOrder)
        {
            var productOptionIDParameter = productOptionID.HasValue ?
                new ObjectParameter("ProductOptionID", productOptionID) :
                new ObjectParameter("ProductOptionID", typeof(int));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductOption", productOptionIDParameter, viewOrderParameter);
        }
    
        public virtual int CAT_UpdateProductPermission(Nullable<int> productPermissionID, Nullable<int> productID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> lastModifiedByUserID)
        {
            var productPermissionIDParameter = productPermissionID.HasValue ?
                new ObjectParameter("ProductPermissionID", productPermissionID) :
                new ObjectParameter("ProductPermissionID", typeof(int));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductPermission", productPermissionIDParameter, productIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int CAT_UpdateProductSlot(Nullable<int> productSlotID, Nullable<int> viewOrder)
        {
            var productSlotIDParameter = productSlotID.HasValue ?
                new ObjectParameter("ProductSlotID", productSlotID) :
                new ObjectParameter("ProductSlotID", typeof(int));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductSlot", productSlotIDParameter, viewOrderParameter);
        }
    
        public virtual int CAT_UpdateProductType(Nullable<int> productTypeID, string productTypeName)
        {
            var productTypeIDParameter = productTypeID.HasValue ?
                new ObjectParameter("ProductTypeID", productTypeID) :
                new ObjectParameter("ProductTypeID", typeof(int));
    
            var productTypeNameParameter = productTypeName != null ?
                new ObjectParameter("ProductTypeName", productTypeName) :
                new ObjectParameter("ProductTypeName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductType", productTypeIDParameter, productTypeNameParameter);
        }
    
        public virtual int CAT_UpdateProductZoneTax(Nullable<int> productZoneTaxID, Nullable<int> zoneNameID, Nullable<decimal> tax)
        {
            var productZoneTaxIDParameter = productZoneTaxID.HasValue ?
                new ObjectParameter("ProductZoneTaxID", productZoneTaxID) :
                new ObjectParameter("ProductZoneTaxID", typeof(int));
    
            var zoneNameIDParameter = zoneNameID.HasValue ?
                new ObjectParameter("ZoneNameID", zoneNameID) :
                new ObjectParameter("ZoneNameID", typeof(int));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateProductZoneTax", productZoneTaxIDParameter, zoneNameIDParameter, taxParameter);
        }
    
        public virtual int CAT_UpdateReferrer(Nullable<int> referralID, Nullable<int> referrerUserID, string uRLReferrer, Nullable<int> userID, Nullable<System.DateTime> rewardExpiryDate, Nullable<bool> enabled)
        {
            var referralIDParameter = referralID.HasValue ?
                new ObjectParameter("ReferralID", referralID) :
                new ObjectParameter("ReferralID", typeof(int));
    
            var referrerUserIDParameter = referrerUserID.HasValue ?
                new ObjectParameter("ReferrerUserID", referrerUserID) :
                new ObjectParameter("ReferrerUserID", typeof(int));
    
            var uRLReferrerParameter = uRLReferrer != null ?
                new ObjectParameter("URLReferrer", uRLReferrer) :
                new ObjectParameter("URLReferrer", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var rewardExpiryDateParameter = rewardExpiryDate.HasValue ?
                new ObjectParameter("RewardExpiryDate", rewardExpiryDate) :
                new ObjectParameter("RewardExpiryDate", typeof(System.DateTime));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateReferrer", referralIDParameter, referrerUserIDParameter, uRLReferrerParameter, userIDParameter, rewardExpiryDateParameter, enabledParameter);
        }
    
        public virtual int CAT_UpdateShippingRate(Nullable<int> shippingRateID, string company, string rateName, string formula, string country, string stateProvince, Nullable<decimal> minimum, string adjustRate, string shipTime, Nullable<bool> visible, Nullable<bool> active, string zipPostal, Nullable<int> createdByUser, string shipperEmailAddress, string shipperEmailSubjectTemplate, string shipperEmailMessageTemplate, string shipperEmailSendType)
        {
            var shippingRateIDParameter = shippingRateID.HasValue ?
                new ObjectParameter("ShippingRateID", shippingRateID) :
                new ObjectParameter("ShippingRateID", typeof(int));
    
            var companyParameter = company != null ?
                new ObjectParameter("Company", company) :
                new ObjectParameter("Company", typeof(string));
    
            var rateNameParameter = rateName != null ?
                new ObjectParameter("RateName", rateName) :
                new ObjectParameter("RateName", typeof(string));
    
            var formulaParameter = formula != null ?
                new ObjectParameter("Formula", formula) :
                new ObjectParameter("Formula", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var stateProvinceParameter = stateProvince != null ?
                new ObjectParameter("StateProvince", stateProvince) :
                new ObjectParameter("StateProvince", typeof(string));
    
            var minimumParameter = minimum.HasValue ?
                new ObjectParameter("Minimum", minimum) :
                new ObjectParameter("Minimum", typeof(decimal));
    
            var adjustRateParameter = adjustRate != null ?
                new ObjectParameter("AdjustRate", adjustRate) :
                new ObjectParameter("AdjustRate", typeof(string));
    
            var shipTimeParameter = shipTime != null ?
                new ObjectParameter("ShipTime", shipTime) :
                new ObjectParameter("ShipTime", typeof(string));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(bool));
    
            var activeParameter = active.HasValue ?
                new ObjectParameter("Active", active) :
                new ObjectParameter("Active", typeof(bool));
    
            var zipPostalParameter = zipPostal != null ?
                new ObjectParameter("ZipPostal", zipPostal) :
                new ObjectParameter("ZipPostal", typeof(string));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var shipperEmailAddressParameter = shipperEmailAddress != null ?
                new ObjectParameter("ShipperEmailAddress", shipperEmailAddress) :
                new ObjectParameter("ShipperEmailAddress", typeof(string));
    
            var shipperEmailSubjectTemplateParameter = shipperEmailSubjectTemplate != null ?
                new ObjectParameter("ShipperEmailSubjectTemplate", shipperEmailSubjectTemplate) :
                new ObjectParameter("ShipperEmailSubjectTemplate", typeof(string));
    
            var shipperEmailMessageTemplateParameter = shipperEmailMessageTemplate != null ?
                new ObjectParameter("ShipperEmailMessageTemplate", shipperEmailMessageTemplate) :
                new ObjectParameter("ShipperEmailMessageTemplate", typeof(string));
    
            var shipperEmailSendTypeParameter = shipperEmailSendType != null ?
                new ObjectParameter("ShipperEmailSendType", shipperEmailSendType) :
                new ObjectParameter("ShipperEmailSendType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateShippingRate", shippingRateIDParameter, companyParameter, rateNameParameter, formulaParameter, countryParameter, stateProvinceParameter, minimumParameter, adjustRateParameter, shipTimeParameter, visibleParameter, activeParameter, zipPostalParameter, createdByUserParameter, shipperEmailAddressParameter, shipperEmailSubjectTemplateParameter, shipperEmailMessageTemplateParameter, shipperEmailSendTypeParameter);
        }
    
        public virtual int CAT_UpdateSingleShipTo(Nullable<int> shipToID, string firstName, string lastName, string street, string unit, string city, string region, string country, string postalCode, string telephone, string profileProperties)
        {
            var shipToIDParameter = shipToID.HasValue ?
                new ObjectParameter("ShipToID", shipToID) :
                new ObjectParameter("ShipToID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateSingleShipTo", shipToIDParameter, firstNameParameter, lastNameParameter, streetParameter, unitParameter, cityParameter, regionParameter, countryParameter, postalCodeParameter, telephoneParameter, profilePropertiesParameter);
        }
    
        public virtual int CAT_UpdateSlot(Nullable<int> slotID, string slotName, string title, string description, string slotImage, Nullable<int> preselection, string status, Nullable<int> preselQuant)
        {
            var slotIDParameter = slotID.HasValue ?
                new ObjectParameter("SlotID", slotID) :
                new ObjectParameter("SlotID", typeof(int));
    
            var slotNameParameter = slotName != null ?
                new ObjectParameter("SlotName", slotName) :
                new ObjectParameter("SlotName", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var slotImageParameter = slotImage != null ?
                new ObjectParameter("SlotImage", slotImage) :
                new ObjectParameter("SlotImage", typeof(string));
    
            var preselectionParameter = preselection.HasValue ?
                new ObjectParameter("Preselection", preselection) :
                new ObjectParameter("Preselection", typeof(int));
    
            var statusParameter = status != null ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(string));
    
            var preselQuantParameter = preselQuant.HasValue ?
                new ObjectParameter("PreselQuant", preselQuant) :
                new ObjectParameter("PreselQuant", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateSlot", slotIDParameter, slotNameParameter, titleParameter, descriptionParameter, slotImageParameter, preselectionParameter, statusParameter, preselQuantParameter);
        }
    
        public virtual int CAT_UpdateSpecification(Nullable<int> specificationID, string specificationName)
        {
            var specificationIDParameter = specificationID.HasValue ?
                new ObjectParameter("SpecificationID", specificationID) :
                new ObjectParameter("SpecificationID", typeof(int));
    
            var specificationNameParameter = specificationName != null ?
                new ObjectParameter("SpecificationName", specificationName) :
                new ObjectParameter("SpecificationName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateSpecification", specificationIDParameter, specificationNameParameter);
        }
    
        public virtual int CAT_UpdateStoreCurrency(Nullable<int> storeCurrencyID, string storeCurrency, Nullable<float> exchangeRate)
        {
            var storeCurrencyIDParameter = storeCurrencyID.HasValue ?
                new ObjectParameter("StoreCurrencyID", storeCurrencyID) :
                new ObjectParameter("StoreCurrencyID", typeof(int));
    
            var storeCurrencyParameter = storeCurrency != null ?
                new ObjectParameter("StoreCurrency", storeCurrency) :
                new ObjectParameter("StoreCurrency", typeof(string));
    
            var exchangeRateParameter = exchangeRate.HasValue ?
                new ObjectParameter("ExchangeRate", exchangeRate) :
                new ObjectParameter("ExchangeRate", typeof(float));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateStoreCurrency", storeCurrencyIDParameter, storeCurrencyParameter, exchangeRateParameter);
        }
    
        public virtual int CAT_UpdateSubZone(Nullable<int> subZoneID, Nullable<int> zoneNameID, string city, string postalCode, Nullable<decimal> tax, Nullable<bool> taxShipping)
        {
            var subZoneIDParameter = subZoneID.HasValue ?
                new ObjectParameter("SubZoneID", subZoneID) :
                new ObjectParameter("SubZoneID", typeof(int));
    
            var zoneNameIDParameter = zoneNameID.HasValue ?
                new ObjectParameter("ZoneNameID", zoneNameID) :
                new ObjectParameter("ZoneNameID", typeof(int));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var taxShippingParameter = taxShipping.HasValue ?
                new ObjectParameter("TaxShipping", taxShipping) :
                new ObjectParameter("TaxShipping", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateSubZone", subZoneIDParameter, zoneNameIDParameter, cityParameter, postalCodeParameter, taxParameter, taxShippingParameter);
        }
    
        public virtual int CAT_UpdateTypeText(Nullable<int> typeTextID, Nullable<int> viewOrder)
        {
            var typeTextIDParameter = typeTextID.HasValue ?
                new ObjectParameter("TypeTextID", typeTextID) :
                new ObjectParameter("TypeTextID", typeof(int));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateTypeText", typeTextIDParameter, viewOrderParameter);
        }
    
        public virtual int CAT_UpdateUnitCount(Nullable<int> recordID, Nullable<int> units)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            var unitsParameter = units.HasValue ?
                new ObjectParameter("Units", units) :
                new ObjectParameter("Units", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateUnitCount", recordIDParameter, unitsParameter);
        }
    
        public virtual int CAT_UpdateZoneName(Nullable<int> zoneNameID, string zoneName)
        {
            var zoneNameIDParameter = zoneNameID.HasValue ?
                new ObjectParameter("ZoneNameID", zoneNameID) :
                new ObjectParameter("ZoneNameID", typeof(int));
    
            var zoneNameParameter = zoneName != null ?
                new ObjectParameter("ZoneName", zoneName) :
                new ObjectParameter("ZoneName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_UpdateZoneName", zoneNameIDParameter, zoneNameParameter);
        }
    
        public virtual int CAT_ViewerAdd(Nullable<int> portalID, Nullable<int> createdByUser, string name, string code, string scripts)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var createdByUserParameter = createdByUser.HasValue ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var scriptsParameter = scripts != null ?
                new ObjectParameter("Scripts", scripts) :
                new ObjectParameter("Scripts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ViewerAdd", portalIDParameter, createdByUserParameter, nameParameter, codeParameter, scriptsParameter);
        }
    
        public virtual int CAT_ViewerDelete(Nullable<int> viewerID)
        {
            var viewerIDParameter = viewerID.HasValue ?
                new ObjectParameter("ViewerID", viewerID) :
                new ObjectParameter("ViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ViewerDelete", viewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_ViewerGet_Result> CAT_ViewerGet(Nullable<int> viewerID)
        {
            var viewerIDParameter = viewerID.HasValue ?
                new ObjectParameter("ViewerID", viewerID) :
                new ObjectParameter("ViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ViewerGet_Result>("CAT_ViewerGet", viewerIDParameter);
        }
    
        public virtual ObjectResult<CAT_ViewersGet_Result> CAT_ViewersGet(Nullable<int> portalID, Nullable<int> itemViewerID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var itemViewerIDParameter = itemViewerID.HasValue ?
                new ObjectParameter("ItemViewerID", itemViewerID) :
                new ObjectParameter("ItemViewerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CAT_ViewersGet_Result>("CAT_ViewersGet", portalIDParameter, itemViewerIDParameter);
        }
    
        public virtual int CAT_ViewerUpdate(Nullable<int> viewerID, string name, string code, string scripts)
        {
            var viewerIDParameter = viewerID.HasValue ?
                new ObjectParameter("ViewerID", viewerID) :
                new ObjectParameter("ViewerID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var codeParameter = code != null ?
                new ObjectParameter("Code", code) :
                new ObjectParameter("Code", typeof(string));
    
            var scriptsParameter = scripts != null ?
                new ObjectParameter("Scripts", scripts) :
                new ObjectParameter("Scripts", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CAT_ViewerUpdate", viewerIDParameter, nameParameter, codeParameter, scriptsParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Dashboard_AddControl(Nullable<int> packageId, string dashboardControlKey, Nullable<bool> isEnabled, string dashboardControlSrc, string dashboardControlLocalResources, string controllerClass, Nullable<int> viewOrder)
        {
            var packageIdParameter = packageId.HasValue ?
                new ObjectParameter("PackageId", packageId) :
                new ObjectParameter("PackageId", typeof(int));
    
            var dashboardControlKeyParameter = dashboardControlKey != null ?
                new ObjectParameter("DashboardControlKey", dashboardControlKey) :
                new ObjectParameter("DashboardControlKey", typeof(string));
    
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            var dashboardControlSrcParameter = dashboardControlSrc != null ?
                new ObjectParameter("DashboardControlSrc", dashboardControlSrc) :
                new ObjectParameter("DashboardControlSrc", typeof(string));
    
            var dashboardControlLocalResourcesParameter = dashboardControlLocalResources != null ?
                new ObjectParameter("DashboardControlLocalResources", dashboardControlLocalResources) :
                new ObjectParameter("DashboardControlLocalResources", typeof(string));
    
            var controllerClassParameter = controllerClass != null ?
                new ObjectParameter("ControllerClass", controllerClass) :
                new ObjectParameter("ControllerClass", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Dashboard_AddControl", packageIdParameter, dashboardControlKeyParameter, isEnabledParameter, dashboardControlSrcParameter, dashboardControlLocalResourcesParameter, controllerClassParameter, viewOrderParameter);
        }
    
        public virtual int Dashboard_DeleteControl(Nullable<int> dashboardControlID)
        {
            var dashboardControlIDParameter = dashboardControlID.HasValue ?
                new ObjectParameter("DashboardControlID", dashboardControlID) :
                new ObjectParameter("DashboardControlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dashboard_DeleteControl", dashboardControlIDParameter);
        }
    
        public virtual ObjectResult<Dashboard_GetControls_Result> Dashboard_GetControls(Nullable<bool> isEnabled)
        {
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_GetControls_Result>("Dashboard_GetControls", isEnabledParameter);
        }
    
        public virtual ObjectResult<Dashboard_GetDashboardControlByKey_Result> Dashboard_GetDashboardControlByKey(string dashboardControlKey)
        {
            var dashboardControlKeyParameter = dashboardControlKey != null ?
                new ObjectParameter("DashboardControlKey", dashboardControlKey) :
                new ObjectParameter("DashboardControlKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_GetDashboardControlByKey_Result>("Dashboard_GetDashboardControlByKey", dashboardControlKeyParameter);
        }
    
        public virtual ObjectResult<Dashboard_GetDbBackups_Result> Dashboard_GetDbBackups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_GetDbBackups_Result>("Dashboard_GetDbBackups");
        }
    
        public virtual ObjectResult<Dashboard_GetDbFileInfo_Result> Dashboard_GetDbFileInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_GetDbFileInfo_Result>("Dashboard_GetDbFileInfo");
        }
    
        public virtual ObjectResult<Dashboard_GetDbInfo_Result> Dashboard_GetDbInfo()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_GetDbInfo_Result>("Dashboard_GetDbInfo");
        }
    
        public virtual ObjectResult<Dashboard_GetInstalledModules_Result> Dashboard_GetInstalledModules()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Dashboard_GetInstalledModules_Result>("Dashboard_GetInstalledModules");
        }
    
        public virtual int Dashboard_UpdateControl(Nullable<int> dashboardControlID, string dashboardControlKey, Nullable<bool> isEnabled, string dashboardControlSrc, string dashboardControlLocalResources, string controllerClass, Nullable<int> viewOrder)
        {
            var dashboardControlIDParameter = dashboardControlID.HasValue ?
                new ObjectParameter("DashboardControlID", dashboardControlID) :
                new ObjectParameter("DashboardControlID", typeof(int));
    
            var dashboardControlKeyParameter = dashboardControlKey != null ?
                new ObjectParameter("DashboardControlKey", dashboardControlKey) :
                new ObjectParameter("DashboardControlKey", typeof(string));
    
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            var dashboardControlSrcParameter = dashboardControlSrc != null ?
                new ObjectParameter("DashboardControlSrc", dashboardControlSrc) :
                new ObjectParameter("DashboardControlSrc", typeof(string));
    
            var dashboardControlLocalResourcesParameter = dashboardControlLocalResources != null ?
                new ObjectParameter("DashboardControlLocalResources", dashboardControlLocalResources) :
                new ObjectParameter("DashboardControlLocalResources", typeof(string));
    
            var controllerClassParameter = controllerClass != null ?
                new ObjectParameter("ControllerClass", controllerClass) :
                new ObjectParameter("ControllerClass", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Dashboard_UpdateControl", dashboardControlIDParameter, dashboardControlKeyParameter, isEnabledParameter, dashboardControlSrcParameter, dashboardControlLocalResourcesParameter, controllerClassParameter, viewOrderParameter);
        }
    
        public virtual int DeleteAffiliate(Nullable<int> affiliateId)
        {
            var affiliateIdParameter = affiliateId.HasValue ?
                new ObjectParameter("AffiliateId", affiliateId) :
                new ObjectParameter("AffiliateId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAffiliate", affiliateIdParameter);
        }
    
        public virtual int DeleteAuthentication(Nullable<int> authenticationID)
        {
            var authenticationIDParameter = authenticationID.HasValue ?
                new ObjectParameter("AuthenticationID", authenticationID) :
                new ObjectParameter("AuthenticationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteAuthentication", authenticationIDParameter);
        }
    
        public virtual int DeleteBanner(Nullable<int> bannerId)
        {
            var bannerIdParameter = bannerId.HasValue ?
                new ObjectParameter("BannerId", bannerId) :
                new ObjectParameter("BannerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteBanner", bannerIdParameter);
        }
    
        public virtual int DeleteContentItem(Nullable<int> contentItemId)
        {
            var contentItemIdParameter = contentItemId.HasValue ?
                new ObjectParameter("ContentItemId", contentItemId) :
                new ObjectParameter("ContentItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteContentItem", contentItemIdParameter);
        }
    
        public virtual int DeleteContentType(Nullable<int> contentTypeId)
        {
            var contentTypeIdParameter = contentTypeId.HasValue ?
                new ObjectParameter("ContentTypeId", contentTypeId) :
                new ObjectParameter("ContentTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteContentType", contentTypeIdParameter);
        }
    
        public virtual int DeleteDesktopModule(Nullable<int> desktopModuleId)
        {
            var desktopModuleIdParameter = desktopModuleId.HasValue ?
                new ObjectParameter("DesktopModuleId", desktopModuleId) :
                new ObjectParameter("DesktopModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDesktopModule", desktopModuleIdParameter);
        }
    
        public virtual int DeleteDesktopModulePermission(Nullable<int> desktopModulePermissionID)
        {
            var desktopModulePermissionIDParameter = desktopModulePermissionID.HasValue ?
                new ObjectParameter("DesktopModulePermissionID", desktopModulePermissionID) :
                new ObjectParameter("DesktopModulePermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDesktopModulePermission", desktopModulePermissionIDParameter);
        }
    
        public virtual int DeleteDesktopModulePermissionsByPortalDesktopModuleID(Nullable<int> portalDesktopModuleID)
        {
            var portalDesktopModuleIDParameter = portalDesktopModuleID.HasValue ?
                new ObjectParameter("PortalDesktopModuleID", portalDesktopModuleID) :
                new ObjectParameter("PortalDesktopModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDesktopModulePermissionsByPortalDesktopModuleID", portalDesktopModuleIDParameter);
        }
    
        public virtual int DeleteDesktopModulePermissionsByUserID(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDesktopModulePermissionsByUserID", userIDParameter);
        }
    
        public virtual int DeleteEventLog(string logGUID)
        {
            var logGUIDParameter = logGUID != null ?
                new ObjectParameter("LogGUID", logGUID) :
                new ObjectParameter("LogGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEventLog", logGUIDParameter);
        }
    
        public virtual int DeleteEventLogConfig(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEventLogConfig", iDParameter);
        }
    
        public virtual int DeleteEventLogType(string logTypeKey)
        {
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteEventLogType", logTypeKeyParameter);
        }
    
        public virtual int DeleteFile(Nullable<int> portalID, string fileName, Nullable<int> folderID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFile", portalIDParameter, fileNameParameter, folderIDParameter);
        }
    
        public virtual int DeleteFiles(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFiles", portalIDParameter);
        }
    
        public virtual int DeleteFolder(Nullable<int> portalID, string folderPath)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var folderPathParameter = folderPath != null ?
                new ObjectParameter("FolderPath", folderPath) :
                new ObjectParameter("FolderPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFolder", portalIDParameter, folderPathParameter);
        }
    
        public virtual int DeleteFolderMapping(Nullable<int> folderMappingID)
        {
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFolderMapping", folderMappingIDParameter);
        }
    
        public virtual int DeleteFolderPermission(Nullable<int> folderPermissionID)
        {
            var folderPermissionIDParameter = folderPermissionID.HasValue ?
                new ObjectParameter("FolderPermissionID", folderPermissionID) :
                new ObjectParameter("FolderPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFolderPermission", folderPermissionIDParameter);
        }
    
        public virtual int DeleteFolderPermissionsByFolderPath(Nullable<int> portalID, string folderPath)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var folderPathParameter = folderPath != null ?
                new ObjectParameter("FolderPath", folderPath) :
                new ObjectParameter("FolderPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFolderPermissionsByFolderPath", portalIDParameter, folderPathParameter);
        }
    
        public virtual int DeleteFolderPermissionsByUserID(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteFolderPermissionsByUserID", portalIDParameter, userIDParameter);
        }
    
        public virtual int DeleteHeirarchicalTerm(Nullable<int> termId)
        {
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHeirarchicalTerm", termIdParameter);
        }
    
        public virtual int DeleteHtmlText(Nullable<int> moduleID, Nullable<int> itemID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHtmlText", moduleIDParameter, itemIDParameter);
        }
    
        public virtual int DeleteHtmlTextUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteHtmlTextUsers");
        }
    
        public virtual int DeleteLanguage(Nullable<int> languageID)
        {
            var languageIDParameter = languageID.HasValue ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLanguage", languageIDParameter);
        }
    
        public virtual int DeleteLanguagePack(Nullable<int> languagePackID)
        {
            var languagePackIDParameter = languagePackID.HasValue ?
                new ObjectParameter("LanguagePackID", languagePackID) :
                new ObjectParameter("LanguagePackID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLanguagePack", languagePackIDParameter);
        }
    
        public virtual int DeleteList(string listName, string parentKey)
        {
            var listNameParameter = listName != null ?
                new ObjectParameter("ListName", listName) :
                new ObjectParameter("ListName", typeof(string));
    
            var parentKeyParameter = parentKey != null ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteList", listNameParameter, parentKeyParameter);
        }
    
        public virtual int DeleteListEntryByID(Nullable<int> entryId, Nullable<bool> deleteChild)
        {
            var entryIdParameter = entryId.HasValue ?
                new ObjectParameter("EntryId", entryId) :
                new ObjectParameter("EntryId", typeof(int));
    
            var deleteChildParameter = deleteChild.HasValue ?
                new ObjectParameter("DeleteChild", deleteChild) :
                new ObjectParameter("DeleteChild", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteListEntryByID", entryIdParameter, deleteChildParameter);
        }
    
        public virtual int DeleteMetaData(Nullable<int> contentItemId, string name, string value)
        {
            var contentItemIdParameter = contentItemId.HasValue ?
                new ObjectParameter("ContentItemId", contentItemId) :
                new ObjectParameter("ContentItemId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMetaData", contentItemIdParameter, nameParameter, valueParameter);
        }
    
        public virtual int DeleteModule(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModule", moduleIdParameter);
        }
    
        public virtual int DeleteModuleControl(Nullable<int> moduleControlId)
        {
            var moduleControlIdParameter = moduleControlId.HasValue ?
                new ObjectParameter("ModuleControlId", moduleControlId) :
                new ObjectParameter("ModuleControlId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModuleControl", moduleControlIdParameter);
        }
    
        public virtual int DeleteModuleDefinition(Nullable<int> moduleDefId)
        {
            var moduleDefIdParameter = moduleDefId.HasValue ?
                new ObjectParameter("ModuleDefId", moduleDefId) :
                new ObjectParameter("ModuleDefId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModuleDefinition", moduleDefIdParameter);
        }
    
        public virtual int DeleteModulePermission(Nullable<int> modulePermissionID)
        {
            var modulePermissionIDParameter = modulePermissionID.HasValue ?
                new ObjectParameter("ModulePermissionID", modulePermissionID) :
                new ObjectParameter("ModulePermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModulePermission", modulePermissionIDParameter);
        }
    
        public virtual int DeleteModulePermissionsByModuleID(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModulePermissionsByModuleID", moduleIDParameter);
        }
    
        public virtual int DeleteModulePermissionsByUserID(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModulePermissionsByUserID", portalIDParameter, userIDParameter);
        }
    
        public virtual int DeleteModuleSetting(Nullable<int> moduleId, string settingName)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModuleSetting", moduleIdParameter, settingNameParameter);
        }
    
        public virtual int DeleteModuleSettings(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteModuleSettings", moduleIdParameter);
        }
    
        public virtual int DeletePackage(Nullable<int> packageID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePackage", packageIDParameter);
        }
    
        public virtual int DeletePermission(Nullable<int> permissionID)
        {
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePermission", permissionIDParameter);
        }
    
        public virtual int DeletePortalAlias(Nullable<int> portalAliasID)
        {
            var portalAliasIDParameter = portalAliasID.HasValue ?
                new ObjectParameter("PortalAliasID", portalAliasID) :
                new ObjectParameter("PortalAliasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePortalAlias", portalAliasIDParameter);
        }
    
        public virtual int DeletePortalDesktopModules(Nullable<int> portalID, Nullable<int> desktopModuleId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var desktopModuleIdParameter = desktopModuleId.HasValue ?
                new ObjectParameter("DesktopModuleId", desktopModuleId) :
                new ObjectParameter("DesktopModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePortalDesktopModules", portalIDParameter, desktopModuleIdParameter);
        }
    
        public virtual int DeletePortalGroup(Nullable<int> portalGroupID)
        {
            var portalGroupIDParameter = portalGroupID.HasValue ?
                new ObjectParameter("PortalGroupID", portalGroupID) :
                new ObjectParameter("PortalGroupID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePortalGroup", portalGroupIDParameter);
        }
    
        public virtual int DeletePortalInfo(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePortalInfo", portalIDParameter);
        }
    
        public virtual int DeletePortalLanguages(Nullable<int> portalId, Nullable<int> languageId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePortalLanguages", portalIdParameter, languageIdParameter);
        }
    
        public virtual int DeletePortalSetting(Nullable<int> portalID, string settingName, string cultureCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePortalSetting", portalIDParameter, settingNameParameter, cultureCodeParameter);
        }
    
        public virtual int DeletePortalSettings(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePortalSettings", portalIDParameter);
        }
    
        public virtual int DeletePropertyDefinition(Nullable<int> propertyDefinitionId)
        {
            var propertyDefinitionIdParameter = propertyDefinitionId.HasValue ?
                new ObjectParameter("PropertyDefinitionId", propertyDefinitionId) :
                new ObjectParameter("PropertyDefinitionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeletePropertyDefinition", propertyDefinitionIdParameter);
        }
    
        public virtual int DeleteRole(Nullable<int> roleId)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRole", roleIdParameter);
        }
    
        public virtual int DeleteRoleGroup(Nullable<int> roleGroupId)
        {
            var roleGroupIdParameter = roleGroupId.HasValue ?
                new ObjectParameter("RoleGroupId", roleGroupId) :
                new ObjectParameter("RoleGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteRoleGroup", roleGroupIdParameter);
        }
    
        public virtual int DeleteSchedule(Nullable<int> scheduleID)
        {
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSchedule", scheduleIDParameter);
        }
    
        public virtual int DeleteScopeType(Nullable<int> scopeTypeId)
        {
            var scopeTypeIdParameter = scopeTypeId.HasValue ?
                new ObjectParameter("ScopeTypeId", scopeTypeId) :
                new ObjectParameter("ScopeTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteScopeType", scopeTypeIdParameter);
        }
    
        public virtual int DeleteSearchCommonWord(Nullable<int> commonWordID)
        {
            var commonWordIDParameter = commonWordID.HasValue ?
                new ObjectParameter("CommonWordID", commonWordID) :
                new ObjectParameter("CommonWordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSearchCommonWord", commonWordIDParameter);
        }
    
        public virtual int DeleteSearchItem(Nullable<int> searchItemID)
        {
            var searchItemIDParameter = searchItemID.HasValue ?
                new ObjectParameter("SearchItemID", searchItemID) :
                new ObjectParameter("SearchItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSearchItem", searchItemIDParameter);
        }
    
        public virtual int DeleteSearchItems(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSearchItems", moduleIDParameter);
        }
    
        public virtual int DeleteSearchItemWord(Nullable<int> searchItemWordID)
        {
            var searchItemWordIDParameter = searchItemWordID.HasValue ?
                new ObjectParameter("SearchItemWordID", searchItemWordID) :
                new ObjectParameter("SearchItemWordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSearchItemWord", searchItemWordIDParameter);
        }
    
        public virtual int DeleteSearchItemWordPosition(Nullable<int> searchItemWordPositionID)
        {
            var searchItemWordPositionIDParameter = searchItemWordPositionID.HasValue ?
                new ObjectParameter("SearchItemWordPositionID", searchItemWordPositionID) :
                new ObjectParameter("SearchItemWordPositionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSearchItemWordPosition", searchItemWordPositionIDParameter);
        }
    
        public virtual int DeleteSearchItemWords(Nullable<int> searchItemID)
        {
            var searchItemIDParameter = searchItemID.HasValue ?
                new ObjectParameter("SearchItemID", searchItemID) :
                new ObjectParameter("SearchItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSearchItemWords", searchItemIDParameter);
        }
    
        public virtual int DeleteSearchWord(Nullable<int> searchWordsID)
        {
            var searchWordsIDParameter = searchWordsID.HasValue ?
                new ObjectParameter("SearchWordsID", searchWordsID) :
                new ObjectParameter("SearchWordsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSearchWord", searchWordsIDParameter);
        }
    
        public virtual int DeleteServer(Nullable<int> serverID)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteServer", serverIDParameter);
        }
    
        public virtual int DeleteSimpleTerm(Nullable<int> termId)
        {
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSimpleTerm", termIdParameter);
        }
    
        public virtual int DeleteSiteLog(Nullable<System.DateTime> dateTime, Nullable<int> portalID)
        {
            var dateTimeParameter = dateTime.HasValue ?
                new ObjectParameter("DateTime", dateTime) :
                new ObjectParameter("DateTime", typeof(System.DateTime));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSiteLog", dateTimeParameter, portalIDParameter);
        }
    
        public virtual int DeleteSkin(Nullable<int> skinID)
        {
            var skinIDParameter = skinID.HasValue ?
                new ObjectParameter("SkinID", skinID) :
                new ObjectParameter("SkinID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSkin", skinIDParameter);
        }
    
        public virtual int DeleteSkinControl(Nullable<int> skinControlId)
        {
            var skinControlIdParameter = skinControlId.HasValue ?
                new ObjectParameter("SkinControlId", skinControlId) :
                new ObjectParameter("SkinControlId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSkinControl", skinControlIdParameter);
        }
    
        public virtual int DeleteSkinPackage(Nullable<int> skinPackageID)
        {
            var skinPackageIDParameter = skinPackageID.HasValue ?
                new ObjectParameter("SkinPackageID", skinPackageID) :
                new ObjectParameter("SkinPackageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSkinPackage", skinPackageIDParameter);
        }
    
        public virtual int DeleteSystemMessage(Nullable<int> portalID, string messageName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var messageNameParameter = messageName != null ?
                new ObjectParameter("MessageName", messageName) :
                new ObjectParameter("MessageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSystemMessage", portalIDParameter, messageNameParameter);
        }
    
        public virtual int DeleteTab(Nullable<int> tabId)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTab", tabIdParameter);
        }
    
        public virtual int DeleteTabModule(Nullable<int> tabId, Nullable<int> moduleId, Nullable<bool> softDelete)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var softDeleteParameter = softDelete.HasValue ?
                new ObjectParameter("SoftDelete", softDelete) :
                new ObjectParameter("SoftDelete", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabModule", tabIdParameter, moduleIdParameter, softDeleteParameter);
        }
    
        public virtual int DeleteTabModuleSetting(Nullable<int> tabModuleId, string settingName)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabModuleSetting", tabModuleIdParameter, settingNameParameter);
        }
    
        public virtual int DeleteTabModuleSettings(Nullable<int> tabModuleId)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabModuleSettings", tabModuleIdParameter);
        }
    
        public virtual int DeleteTabPermission(Nullable<int> tabPermissionID)
        {
            var tabPermissionIDParameter = tabPermissionID.HasValue ?
                new ObjectParameter("TabPermissionID", tabPermissionID) :
                new ObjectParameter("TabPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabPermission", tabPermissionIDParameter);
        }
    
        public virtual int DeleteTabPermissionsByTabID(Nullable<int> tabID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabPermissionsByTabID", tabIDParameter);
        }
    
        public virtual int DeleteTabPermissionsByUserID(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabPermissionsByUserID", portalIDParameter, userIDParameter);
        }
    
        public virtual int DeleteTabSetting(Nullable<int> tabID, string settingName)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabSetting", tabIDParameter, settingNameParameter);
        }
    
        public virtual int DeleteTabSettings(Nullable<int> tabID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTabSettings", tabIDParameter);
        }
    
        public virtual int DeleteUrl(Nullable<int> portalID, string url)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUrl", portalIDParameter, urlParameter);
        }
    
        public virtual int DeleteUrlTracking(Nullable<int> portalID, string url, Nullable<int> moduleID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUrlTracking", portalIDParameter, urlParameter, moduleIDParameter);
        }
    
        public virtual int DeleteUserPortal(Nullable<int> userID, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserPortal", userIDParameter, portalIDParameter);
        }
    
        public virtual int DeleteUserRole(Nullable<int> userID, Nullable<int> roleId)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUserRole", userIDParameter, roleIdParameter);
        }
    
        public virtual int DeleteUsersOnline(Nullable<int> timeWindow)
        {
            var timeWindowParameter = timeWindow.HasValue ?
                new ObjectParameter("TimeWindow", timeWindow) :
                new ObjectParameter("TimeWindow", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUsersOnline", timeWindowParameter);
        }
    
        public virtual int DeleteVendor(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVendor", vendorIdParameter);
        }
    
        public virtual int DeleteVendorClassifications(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVendorClassifications", vendorIdParameter);
        }
    
        public virtual int DeleteVocabulary(Nullable<int> vocabularyID)
        {
            var vocabularyIDParameter = vocabularyID.HasValue ?
                new ObjectParameter("VocabularyID", vocabularyID) :
                new ObjectParameter("VocabularyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteVocabulary", vocabularyIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> dnnLinks_AddLink(Nullable<int> moduleId, Nullable<int> userId, Nullable<System.DateTime> createdDate, string title, string url, Nullable<int> viewOrder, string description)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("dnnLinks_AddLink", moduleIdParameter, userIdParameter, createdDateParameter, titleParameter, urlParameter, viewOrderParameter, descriptionParameter);
        }
    
        public virtual int dnnLinks_DeleteLink(Nullable<int> itemId, Nullable<int> moduleId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dnnLinks_DeleteLink", itemIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<dnnLinks_GetLink_Result> dnnLinks_GetLink(Nullable<int> itemId, Nullable<int> moduleId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dnnLinks_GetLink_Result>("dnnLinks_GetLink", itemIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<dnnLinks_GetLinks_Result> dnnLinks_GetLinks(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<dnnLinks_GetLinks_Result>("dnnLinks_GetLinks", moduleIdParameter);
        }
    
        public virtual int dnnLinks_UpdateLink(Nullable<int> itemId, Nullable<int> userId, Nullable<System.DateTime> createdDate, string title, string url, Nullable<int> viewOrder, string description)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("dnnLinks_UpdateLink", itemIdParameter, userIdParameter, createdDateParameter, titleParameter, urlParameter, viewOrderParameter, descriptionParameter);
        }
    
        public virtual int EnsureLocalizationExists(Nullable<int> portalId, string cultureCode)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EnsureLocalizationExists", portalIdParameter, cultureCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> FAQAdd(Nullable<int> moduleId, Nullable<int> categoryId, string question, string answer, string createdByUser, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> dateModified, Nullable<int> viewCount, Nullable<int> viewOrder, Nullable<bool> faqHide, Nullable<System.DateTime> publishDate, Nullable<System.DateTime> expireDate)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var createdByUserParameter = createdByUser != null ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var dateModifiedParameter = dateModified.HasValue ?
                new ObjectParameter("DateModified", dateModified) :
                new ObjectParameter("DateModified", typeof(System.DateTime));
    
            var viewCountParameter = viewCount.HasValue ?
                new ObjectParameter("ViewCount", viewCount) :
                new ObjectParameter("ViewCount", typeof(int));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var faqHideParameter = faqHide.HasValue ?
                new ObjectParameter("FaqHide", faqHide) :
                new ObjectParameter("FaqHide", typeof(bool));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("FAQAdd", moduleIdParameter, categoryIdParameter, questionParameter, answerParameter, createdByUserParameter, createdDateParameter, dateModifiedParameter, viewCountParameter, viewOrderParameter, faqHideParameter, publishDateParameter, expireDateParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> FAQCategoryAdd(Nullable<int> moduleId, Nullable<int> faqCategoryParentId, string faqCategoryName, string faqCategoryDescription, Nullable<int> viewOrder)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var faqCategoryParentIdParameter = faqCategoryParentId.HasValue ?
                new ObjectParameter("FaqCategoryParentId", faqCategoryParentId) :
                new ObjectParameter("FaqCategoryParentId", typeof(int));
    
            var faqCategoryNameParameter = faqCategoryName != null ?
                new ObjectParameter("FaqCategoryName", faqCategoryName) :
                new ObjectParameter("FaqCategoryName", typeof(string));
    
            var faqCategoryDescriptionParameter = faqCategoryDescription != null ?
                new ObjectParameter("FaqCategoryDescription", faqCategoryDescription) :
                new ObjectParameter("FaqCategoryDescription", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("FAQCategoryAdd", moduleIdParameter, faqCategoryParentIdParameter, faqCategoryNameParameter, faqCategoryDescriptionParameter, viewOrderParameter);
        }
    
        public virtual int FAQCategoryDelete(Nullable<int> faqCategoryId)
        {
            var faqCategoryIdParameter = faqCategoryId.HasValue ?
                new ObjectParameter("FaqCategoryId", faqCategoryId) :
                new ObjectParameter("FaqCategoryId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQCategoryDelete", faqCategoryIdParameter);
        }
    
        public virtual ObjectResult<FAQCategoryGet_Result> FAQCategoryGet(Nullable<int> faqCategoryId, Nullable<int> moduleId)
        {
            var faqCategoryIdParameter = faqCategoryId.HasValue ?
                new ObjectParameter("FaqCategoryId", faqCategoryId) :
                new ObjectParameter("FaqCategoryId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("moduleId", moduleId) :
                new ObjectParameter("moduleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FAQCategoryGet_Result>("FAQCategoryGet", faqCategoryIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<FAQCategoryList_Result> FAQCategoryList(Nullable<int> moduleID, Nullable<bool> onlyUsedCategories)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var onlyUsedCategoriesParameter = onlyUsedCategories.HasValue ?
                new ObjectParameter("OnlyUsedCategories", onlyUsedCategories) :
                new ObjectParameter("OnlyUsedCategories", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FAQCategoryList_Result>("FAQCategoryList", moduleIDParameter, onlyUsedCategoriesParameter);
        }
    
        public virtual ObjectResult<FAQCategoryListHierarchical_Result> FAQCategoryListHierarchical(Nullable<int> moduleID, Nullable<bool> onlyUsedCategories)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var onlyUsedCategoriesParameter = onlyUsedCategories.HasValue ?
                new ObjectParameter("OnlyUsedCategories", onlyUsedCategories) :
                new ObjectParameter("OnlyUsedCategories", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FAQCategoryListHierarchical_Result>("FAQCategoryListHierarchical", moduleIDParameter, onlyUsedCategoriesParameter);
        }
    
        public virtual int FAQCategoryReorder(Nullable<int> fAQCategoryParentId, Nullable<int> moduleId)
        {
            var fAQCategoryParentIdParameter = fAQCategoryParentId.HasValue ?
                new ObjectParameter("FAQCategoryParentId", fAQCategoryParentId) :
                new ObjectParameter("FAQCategoryParentId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQCategoryReorder", fAQCategoryParentIdParameter, moduleIdParameter);
        }
    
        public virtual int FAQCategoryReorderRoot(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQCategoryReorderRoot", moduleIdParameter);
        }
    
        public virtual int FAQCategoryUpdate(Nullable<int> faqCategoryId, Nullable<int> moduleId, Nullable<int> faqCategoryParentId, string faqCategoryName, string faqCategoryDescription, Nullable<int> viewOrder)
        {
            var faqCategoryIdParameter = faqCategoryId.HasValue ?
                new ObjectParameter("FaqCategoryId", faqCategoryId) :
                new ObjectParameter("FaqCategoryId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var faqCategoryParentIdParameter = faqCategoryParentId.HasValue ?
                new ObjectParameter("FaqCategoryParentId", faqCategoryParentId) :
                new ObjectParameter("FaqCategoryParentId", typeof(int));
    
            var faqCategoryNameParameter = faqCategoryName != null ?
                new ObjectParameter("FaqCategoryName", faqCategoryName) :
                new ObjectParameter("FaqCategoryName", typeof(string));
    
            var faqCategoryDescriptionParameter = faqCategoryDescription != null ?
                new ObjectParameter("FaqCategoryDescription", faqCategoryDescription) :
                new ObjectParameter("FaqCategoryDescription", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQCategoryUpdate", faqCategoryIdParameter, moduleIdParameter, faqCategoryParentIdParameter, faqCategoryNameParameter, faqCategoryDescriptionParameter, viewOrderParameter);
        }
    
        public virtual int FAQDelete(Nullable<int> itemId, Nullable<int> moduleId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQDelete", itemIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<FAQGet_Result> FAQGet(Nullable<int> itemId, Nullable<int> moduleId)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FAQGet_Result>("FAQGet", itemIdParameter, moduleIdParameter);
        }
    
        public virtual int FAQIncrementViewCount(Nullable<int> itemID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQIncrementViewCount", itemIDParameter);
        }
    
        public virtual ObjectResult<FAQList_Result> FAQList()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FAQList_Result>("FAQList");
        }
    
        public virtual int FAQReorder(Nullable<int> itemId1, Nullable<int> itemId2, Nullable<int> moduleId)
        {
            var itemId1Parameter = itemId1.HasValue ?
                new ObjectParameter("ItemId1", itemId1) :
                new ObjectParameter("ItemId1", typeof(int));
    
            var itemId2Parameter = itemId2.HasValue ?
                new ObjectParameter("ItemId2", itemId2) :
                new ObjectParameter("ItemId2", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQReorder", itemId1Parameter, itemId2Parameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<FAQSearch_Result> FAQSearch(Nullable<int> moduleId, Nullable<int> orderBy, Nullable<bool> showHidden)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var orderByParameter = orderBy.HasValue ?
                new ObjectParameter("OrderBy", orderBy) :
                new ObjectParameter("OrderBy", typeof(int));
    
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("ShowHidden", showHidden) :
                new ObjectParameter("ShowHidden", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FAQSearch_Result>("FAQSearch", moduleIdParameter, orderByParameter, showHiddenParameter);
        }
    
        public virtual int FAQUpdate(Nullable<int> itemId, Nullable<int> moduleId, Nullable<int> categoryId, string question, string answer, string createdByUser, Nullable<System.DateTime> dateModified, Nullable<int> viewOrder, Nullable<bool> faqHide, Nullable<System.DateTime> publishDate, Nullable<System.DateTime> expireDate)
        {
            var itemIdParameter = itemId.HasValue ?
                new ObjectParameter("ItemId", itemId) :
                new ObjectParameter("ItemId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var categoryIdParameter = categoryId.HasValue ?
                new ObjectParameter("CategoryId", categoryId) :
                new ObjectParameter("CategoryId", typeof(int));
    
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            var createdByUserParameter = createdByUser != null ?
                new ObjectParameter("CreatedByUser", createdByUser) :
                new ObjectParameter("CreatedByUser", typeof(string));
    
            var dateModifiedParameter = dateModified.HasValue ?
                new ObjectParameter("DateModified", dateModified) :
                new ObjectParameter("DateModified", typeof(System.DateTime));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var faqHideParameter = faqHide.HasValue ?
                new ObjectParameter("FaqHide", faqHide) :
                new ObjectParameter("FaqHide", typeof(bool));
    
            var publishDateParameter = publishDate.HasValue ?
                new ObjectParameter("PublishDate", publishDate) :
                new ObjectParameter("PublishDate", typeof(System.DateTime));
    
            var expireDateParameter = expireDate.HasValue ?
                new ObjectParameter("ExpireDate", expireDate) :
                new ObjectParameter("ExpireDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("FAQUpdate", itemIdParameter, moduleIdParameter, categoryIdParameter, questionParameter, answerParameter, createdByUserParameter, dateModifiedParameter, viewOrderParameter, faqHideParameter, publishDateParameter, expireDateParameter);
        }
    
        public virtual ObjectResult<FindBanners_Result> FindBanners(Nullable<int> portalID, Nullable<int> bannerTypeId, string groupName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var bannerTypeIdParameter = bannerTypeId.HasValue ?
                new ObjectParameter("BannerTypeId", bannerTypeId) :
                new ObjectParameter("BannerTypeId", typeof(int));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<FindBanners_Result>("FindBanners", portalIDParameter, bannerTypeIdParameter, groupNameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> FindDatabaseVersion(Nullable<int> major, Nullable<int> minor, Nullable<int> build)
        {
            var majorParameter = major.HasValue ?
                new ObjectParameter("Major", major) :
                new ObjectParameter("Major", typeof(int));
    
            var minorParameter = minor.HasValue ?
                new ObjectParameter("Minor", minor) :
                new ObjectParameter("Minor", typeof(int));
    
            var buildParameter = build.HasValue ?
                new ObjectParameter("Build", build) :
                new ObjectParameter("Build", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("FindDatabaseVersion", majorParameter, minorParameter, buildParameter);
        }
    
        public virtual ObjectResult<GetAffiliate_Result> GetAffiliate(Nullable<int> affiliateId, Nullable<int> vendorId, Nullable<int> portalID)
        {
            var affiliateIdParameter = affiliateId.HasValue ?
                new ObjectParameter("AffiliateId", affiliateId) :
                new ObjectParameter("AffiliateId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAffiliate_Result>("GetAffiliate", affiliateIdParameter, vendorIdParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetAffiliates_Result> GetAffiliates(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAffiliates_Result>("GetAffiliates", vendorIdParameter);
        }
    
        public virtual ObjectResult<GetAllFiles_Result> GetAllFiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllFiles_Result>("GetAllFiles");
        }
    
        public virtual ObjectResult<GetAllHtmlText_Result> GetAllHtmlText(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllHtmlText_Result>("GetAllHtmlText", moduleIDParameter);
        }
    
        public virtual ObjectResult<GetAllModules_Result> GetAllModules()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllModules_Result>("GetAllModules");
        }
    
        public virtual ObjectResult<GetAllProfiles_Result> GetAllProfiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProfiles_Result>("GetAllProfiles");
        }
    
        public virtual ObjectResult<GetAllTabs_Result> GetAllTabs()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTabs_Result>("GetAllTabs");
        }
    
        public virtual ObjectResult<GetAllTabsModules_Result> GetAllTabsModules(Nullable<int> portalID, Nullable<bool> allTabs)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var allTabsParameter = allTabs.HasValue ?
                new ObjectParameter("AllTabs", allTabs) :
                new ObjectParameter("AllTabs", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTabsModules_Result>("GetAllTabsModules", portalIDParameter, allTabsParameter);
        }
    
        public virtual ObjectResult<GetAllTabsModulesByModuleID_Result> GetAllTabsModulesByModuleID(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTabsModulesByModuleID_Result>("GetAllTabsModulesByModuleID", moduleIDParameter);
        }
    
        public virtual ObjectResult<GetAllUsers_Result> GetAllUsers(Nullable<int> portalID, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> includeDeleted, Nullable<bool> superUsersOnly)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var includeDeletedParameter = includeDeleted.HasValue ?
                new ObjectParameter("IncludeDeleted", includeDeleted) :
                new ObjectParameter("IncludeDeleted", typeof(bool));
    
            var superUsersOnlyParameter = superUsersOnly.HasValue ?
                new ObjectParameter("SuperUsersOnly", superUsersOnly) :
                new ObjectParameter("SuperUsersOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUsers_Result>("GetAllUsers", portalIDParameter, pageIndexParameter, pageSizeParameter, includeDeletedParameter, superUsersOnlyParameter);
        }
    
        public virtual ObjectResult<GetAuthenticationService_Result> GetAuthenticationService(Nullable<int> authenticationID)
        {
            var authenticationIDParameter = authenticationID.HasValue ?
                new ObjectParameter("AuthenticationID", authenticationID) :
                new ObjectParameter("AuthenticationID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAuthenticationService_Result>("GetAuthenticationService", authenticationIDParameter);
        }
    
        public virtual ObjectResult<GetAuthenticationServiceByPackageID_Result> GetAuthenticationServiceByPackageID(Nullable<int> packageID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAuthenticationServiceByPackageID_Result>("GetAuthenticationServiceByPackageID", packageIDParameter);
        }
    
        public virtual ObjectResult<GetAuthenticationServiceByType_Result> GetAuthenticationServiceByType(string authenticationType)
        {
            var authenticationTypeParameter = authenticationType != null ?
                new ObjectParameter("AuthenticationType", authenticationType) :
                new ObjectParameter("AuthenticationType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAuthenticationServiceByType_Result>("GetAuthenticationServiceByType", authenticationTypeParameter);
        }
    
        public virtual ObjectResult<GetAuthenticationServices_Result> GetAuthenticationServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAuthenticationServices_Result>("GetAuthenticationServices");
        }
    
        public virtual ObjectResult<GetBanner_Result> GetBanner(Nullable<int> bannerId)
        {
            var bannerIdParameter = bannerId.HasValue ?
                new ObjectParameter("BannerId", bannerId) :
                new ObjectParameter("BannerId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBanner_Result>("GetBanner", bannerIdParameter);
        }
    
        public virtual ObjectResult<string> GetBannerGroups(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetBannerGroups", portalIDParameter);
        }
    
        public virtual ObjectResult<GetBanners_Result> GetBanners(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBanners_Result>("GetBanners", vendorIdParameter);
        }
    
        public virtual ObjectResult<GetContentItem_Result> GetContentItem(Nullable<int> contentItemId)
        {
            var contentItemIdParameter = contentItemId.HasValue ?
                new ObjectParameter("ContentItemId", contentItemId) :
                new ObjectParameter("ContentItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContentItem_Result>("GetContentItem", contentItemIdParameter);
        }
    
        public virtual ObjectResult<GetContentItems_Result> GetContentItems(Nullable<int> contentTypeId, Nullable<int> tabId, Nullable<int> moduleId)
        {
            var contentTypeIdParameter = contentTypeId.HasValue ?
                new ObjectParameter("ContentTypeId", contentTypeId) :
                new ObjectParameter("ContentTypeId", typeof(int));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContentItems_Result>("GetContentItems", contentTypeIdParameter, tabIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<GetContentItemsByTerm_Result> GetContentItemsByTerm(string term)
        {
            var termParameter = term != null ?
                new ObjectParameter("Term", term) :
                new ObjectParameter("Term", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContentItemsByTerm_Result>("GetContentItemsByTerm", termParameter);
        }
    
        public virtual ObjectResult<GetContentTypes_Result> GetContentTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetContentTypes_Result>("GetContentTypes");
        }
    
        public virtual int GetCurrencies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetCurrencies");
        }
    
        public virtual ObjectResult<GetDatabaseServer_Result> GetDatabaseServer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatabaseServer_Result>("GetDatabaseServer");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetDatabaseTime()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetDatabaseTime");
        }
    
        public virtual ObjectResult<Nullable<System.DateTime>> GetDatabaseTimeUtc()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<System.DateTime>>("GetDatabaseTimeUtc");
        }
    
        public virtual ObjectResult<GetDatabaseVersion_Result> GetDatabaseVersion()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDatabaseVersion_Result>("GetDatabaseVersion");
        }
    
        public virtual ObjectResult<GetDefaultLanguageByModule_Result> GetDefaultLanguageByModule(string moduleList)
        {
            var moduleListParameter = moduleList != null ?
                new ObjectParameter("ModuleList", moduleList) :
                new ObjectParameter("ModuleList", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDefaultLanguageByModule_Result>("GetDefaultLanguageByModule", moduleListParameter);
        }
    
        public virtual ObjectResult<GetDeletedUsers_Result> GetDeletedUsers(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDeletedUsers_Result>("GetDeletedUsers", portalIDParameter);
        }
    
        public virtual ObjectResult<GetDesktopModulePermission_Result> GetDesktopModulePermission(Nullable<int> desktopModulePermissionID)
        {
            var desktopModulePermissionIDParameter = desktopModulePermissionID.HasValue ?
                new ObjectParameter("DesktopModulePermissionID", desktopModulePermissionID) :
                new ObjectParameter("DesktopModulePermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDesktopModulePermission_Result>("GetDesktopModulePermission", desktopModulePermissionIDParameter);
        }
    
        public virtual ObjectResult<GetDesktopModulePermissions_Result> GetDesktopModulePermissions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDesktopModulePermissions_Result>("GetDesktopModulePermissions");
        }
    
        public virtual ObjectResult<GetDesktopModulePermissionsByPortalDesktopModuleID_Result> GetDesktopModulePermissionsByPortalDesktopModuleID(Nullable<int> portalDesktopModuleID)
        {
            var portalDesktopModuleIDParameter = portalDesktopModuleID.HasValue ?
                new ObjectParameter("PortalDesktopModuleID", portalDesktopModuleID) :
                new ObjectParameter("PortalDesktopModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDesktopModulePermissionsByPortalDesktopModuleID_Result>("GetDesktopModulePermissionsByPortalDesktopModuleID", portalDesktopModuleIDParameter);
        }
    
        public virtual ObjectResult<GetDesktopModules_Result> GetDesktopModules()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDesktopModules_Result>("GetDesktopModules");
        }
    
        public virtual ObjectResult<GetDesktopModulesByPortal_Result> GetDesktopModulesByPortal(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDesktopModulesByPortal_Result>("GetDesktopModulesByPortal", portalIdParameter);
        }
    
        public virtual ObjectResult<GetEnabledAuthenticationServices_Result> GetEnabledAuthenticationServices()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEnabledAuthenticationServices_Result>("GetEnabledAuthenticationServices");
        }
    
        public virtual ObjectResult<GetEventLog_Result> GetEventLog(Nullable<int> portalID, string logTypeKey, Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventLog_Result>("GetEventLog", portalIDParameter, logTypeKeyParameter, pageSizeParameter, pageIndexParameter);
        }
    
        public virtual ObjectResult<GetEventLogByLogGUID_Result> GetEventLogByLogGUID(string logGUID)
        {
            var logGUIDParameter = logGUID != null ?
                new ObjectParameter("LogGUID", logGUID) :
                new ObjectParameter("LogGUID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventLogByLogGUID_Result>("GetEventLogByLogGUID", logGUIDParameter);
        }
    
        public virtual ObjectResult<GetEventLogConfig_Result> GetEventLogConfig(Nullable<int> iD)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventLogConfig_Result>("GetEventLogConfig", iDParameter);
        }
    
        public virtual ObjectResult<GetEventLogPendingNotif_Result> GetEventLogPendingNotif(Nullable<int> logConfigID)
        {
            var logConfigIDParameter = logConfigID.HasValue ?
                new ObjectParameter("LogConfigID", logConfigID) :
                new ObjectParameter("LogConfigID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventLogPendingNotif_Result>("GetEventLogPendingNotif", logConfigIDParameter);
        }
    
        public virtual ObjectResult<GetEventLogPendingNotifConfig_Result> GetEventLogPendingNotifConfig()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventLogPendingNotifConfig_Result>("GetEventLogPendingNotifConfig");
        }
    
        public virtual ObjectResult<GetEventLogType_Result> GetEventLogType()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventLogType_Result>("GetEventLogType");
        }
    
        public virtual ObjectResult<GetEventMessages_Result> GetEventMessages(string eventName)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventMessages_Result>("GetEventMessages", eventNameParameter);
        }
    
        public virtual ObjectResult<GetEventMessagesBySubscriber_Result> GetEventMessagesBySubscriber(string eventName, string subscriber)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var subscriberParameter = subscriber != null ?
                new ObjectParameter("Subscriber", subscriber) :
                new ObjectParameter("Subscriber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetEventMessagesBySubscriber_Result>("GetEventMessagesBySubscriber", eventNameParameter, subscriberParameter);
        }
    
        public virtual ObjectResult<GetExpiredPortals_Result> GetExpiredPortals()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetExpiredPortals_Result>("GetExpiredPortals");
        }
    
        public virtual ObjectResult<GetFile_Result> GetFile(string fileName, Nullable<int> folderID)
        {
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFile_Result>("GetFile", fileNameParameter, folderIDParameter);
        }
    
        public virtual ObjectResult<GetFileById_Result> GetFileById(Nullable<int> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFileById_Result>("GetFileById", fileIdParameter);
        }
    
        public virtual ObjectResult<GetFileByUniqueID_Result> GetFileByUniqueID(Nullable<System.Guid> uniqueID)
        {
            var uniqueIDParameter = uniqueID.HasValue ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFileByUniqueID_Result>("GetFileByUniqueID", uniqueIDParameter);
        }
    
        public virtual ObjectResult<byte[]> GetFileContent(Nullable<int> fileId)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<byte[]>("GetFileContent", fileIdParameter);
        }
    
        public virtual ObjectResult<GetFiles_Result> GetFiles(Nullable<int> folderID)
        {
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFiles_Result>("GetFiles", folderIDParameter);
        }
    
        public virtual ObjectResult<GetFolderByFolderID_Result> GetFolderByFolderID(Nullable<int> folderID)
        {
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderByFolderID_Result>("GetFolderByFolderID", folderIDParameter);
        }
    
        public virtual ObjectResult<GetFolderByFolderPath_Result> GetFolderByFolderPath(Nullable<int> portalID, string folderPath)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var folderPathParameter = folderPath != null ?
                new ObjectParameter("FolderPath", folderPath) :
                new ObjectParameter("FolderPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderByFolderPath_Result>("GetFolderByFolderPath", portalIDParameter, folderPathParameter);
        }
    
        public virtual ObjectResult<GetFolderByUniqueID_Result> GetFolderByUniqueID(Nullable<System.Guid> uniqueID)
        {
            var uniqueIDParameter = uniqueID.HasValue ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderByUniqueID_Result>("GetFolderByUniqueID", uniqueIDParameter);
        }
    
        public virtual ObjectResult<GetFolderMapping_Result> GetFolderMapping(Nullable<int> folderMappingID)
        {
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderMapping_Result>("GetFolderMapping", folderMappingIDParameter);
        }
    
        public virtual ObjectResult<GetFolderMappingByMappingName_Result> GetFolderMappingByMappingName(Nullable<int> portalID, string mappingName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var mappingNameParameter = mappingName != null ?
                new ObjectParameter("MappingName", mappingName) :
                new ObjectParameter("MappingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderMappingByMappingName_Result>("GetFolderMappingByMappingName", portalIDParameter, mappingNameParameter);
        }
    
        public virtual ObjectResult<GetFolderMappings_Result> GetFolderMappings(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderMappings_Result>("GetFolderMappings", portalIDParameter);
        }
    
        public virtual ObjectResult<GetFolderMappingsSetting_Result> GetFolderMappingsSetting(Nullable<int> folderMappingID, string settingName)
        {
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderMappingsSetting_Result>("GetFolderMappingsSetting", folderMappingIDParameter, settingNameParameter);
        }
    
        public virtual ObjectResult<GetFolderMappingsSettings_Result> GetFolderMappingsSettings(Nullable<int> folderMappingID)
        {
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderMappingsSettings_Result>("GetFolderMappingsSettings", folderMappingIDParameter);
        }
    
        public virtual ObjectResult<GetFolderPermission_Result> GetFolderPermission(Nullable<int> folderPermissionID)
        {
            var folderPermissionIDParameter = folderPermissionID.HasValue ?
                new ObjectParameter("FolderPermissionID", folderPermissionID) :
                new ObjectParameter("FolderPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderPermission_Result>("GetFolderPermission", folderPermissionIDParameter);
        }
    
        public virtual ObjectResult<GetFolderPermissionsByFolderPath_Result> GetFolderPermissionsByFolderPath(Nullable<int> portalID, string folderPath, Nullable<int> permissionID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var folderPathParameter = folderPath != null ?
                new ObjectParameter("FolderPath", folderPath) :
                new ObjectParameter("FolderPath", typeof(string));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderPermissionsByFolderPath_Result>("GetFolderPermissionsByFolderPath", portalIDParameter, folderPathParameter, permissionIDParameter);
        }
    
        public virtual ObjectResult<GetFolderPermissionsByPortal_Result> GetFolderPermissionsByPortal(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolderPermissionsByPortal_Result>("GetFolderPermissionsByPortal", portalIdParameter);
        }
    
        public virtual ObjectResult<GetFolders_Result> GetFolders(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFolders_Result>("GetFolders", portalIDParameter);
        }
    
        public virtual ObjectResult<GetFoldersByPermissions_Result> GetFoldersByPermissions(Nullable<int> portalID, string permissions, Nullable<int> userID, Nullable<int> folderID, string folderPath)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            var folderPathParameter = folderPath != null ?
                new ObjectParameter("FolderPath", folderPath) :
                new ObjectParameter("FolderPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetFoldersByPermissions_Result>("GetFoldersByPermissions", portalIDParameter, permissionsParameter, userIDParameter, folderIDParameter, folderPathParameter);
        }
    
        public virtual ObjectResult<string> GetHostSetting(string settingName)
        {
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetHostSetting", settingNameParameter);
        }
    
        public virtual ObjectResult<GetHostSettings_Result> GetHostSettings()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHostSettings_Result>("GetHostSettings");
        }
    
        public virtual ObjectResult<GetHtmlText_Result> GetHtmlText(Nullable<int> moduleID, Nullable<int> itemID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHtmlText_Result>("GetHtmlText", moduleIDParameter, itemIDParameter);
        }
    
        public virtual ObjectResult<GetHtmlTextLog_Result> GetHtmlTextLog(Nullable<int> itemID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHtmlTextLog_Result>("GetHtmlTextLog", itemIDParameter);
        }
    
        public virtual ObjectResult<GetHtmlTextUser_Result> GetHtmlTextUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetHtmlTextUser_Result>("GetHtmlTextUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetLanguagePackByPackage_Result> GetLanguagePackByPackage(Nullable<int> packageID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLanguagePackByPackage_Result>("GetLanguagePackByPackage", packageIDParameter);
        }
    
        public virtual ObjectResult<GetLanguages_Result> GetLanguages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLanguages_Result>("GetLanguages");
        }
    
        public virtual ObjectResult<GetLanguagesByPortal_Result> GetLanguagesByPortal(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLanguagesByPortal_Result>("GetLanguagesByPortal", portalIdParameter);
        }
    
        public virtual ObjectResult<GetList_Result> GetList(string listName, string parentKey, Nullable<int> portalID)
        {
            var listNameParameter = listName != null ?
                new ObjectParameter("ListName", listName) :
                new ObjectParameter("ListName", typeof(string));
    
            var parentKeyParameter = parentKey != null ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetList_Result>("GetList", listNameParameter, parentKeyParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetListEntries_Result> GetListEntries(string listName, string parentKey, Nullable<int> portalID)
        {
            var listNameParameter = listName != null ?
                new ObjectParameter("ListName", listName) :
                new ObjectParameter("ListName", typeof(string));
    
            var parentKeyParameter = parentKey != null ?
                new ObjectParameter("ParentKey", parentKey) :
                new ObjectParameter("ParentKey", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListEntries_Result>("GetListEntries", listNameParameter, parentKeyParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetListEntry_Result> GetListEntry(string listName, string value, Nullable<int> entryID)
        {
            var listNameParameter = listName != null ?
                new ObjectParameter("ListName", listName) :
                new ObjectParameter("ListName", typeof(string));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetListEntry_Result>("GetListEntry", listNameParameter, valueParameter, entryIDParameter);
        }
    
        public virtual ObjectResult<GetLists_Result> GetLists(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLists_Result>("GetLists", portalIDParameter);
        }
    
        public virtual ObjectResult<GetMetaData_Result> GetMetaData(Nullable<int> contentItemId)
        {
            var contentItemIdParameter = contentItemId.HasValue ?
                new ObjectParameter("ContentItemId", contentItemId) :
                new ObjectParameter("ContentItemId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMetaData_Result>("GetMetaData", contentItemIdParameter);
        }
    
        public virtual ObjectResult<GetModule_Result> GetModule(Nullable<int> moduleId, Nullable<int> tabId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModule_Result>("GetModule", moduleIdParameter, tabIdParameter);
        }
    
        public virtual ObjectResult<GetModuleByDefinition_Result> GetModuleByDefinition(Nullable<int> portalId, string friendlyName)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleByDefinition_Result>("GetModuleByDefinition", portalIdParameter, friendlyNameParameter);
        }
    
        public virtual ObjectResult<GetModuleByUniqueID_Result> GetModuleByUniqueID(Nullable<System.Guid> uniqueID)
        {
            var uniqueIDParameter = uniqueID.HasValue ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleByUniqueID_Result>("GetModuleByUniqueID", uniqueIDParameter);
        }
    
        public virtual ObjectResult<GetModuleControl_Result> GetModuleControl(Nullable<int> moduleControlId)
        {
            var moduleControlIdParameter = moduleControlId.HasValue ?
                new ObjectParameter("ModuleControlId", moduleControlId) :
                new ObjectParameter("ModuleControlId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleControl_Result>("GetModuleControl", moduleControlIdParameter);
        }
    
        public virtual ObjectResult<GetModuleControlByKeyAndSrc_Result> GetModuleControlByKeyAndSrc(Nullable<int> moduleDefId, string controlKey, string controlSrc)
        {
            var moduleDefIdParameter = moduleDefId.HasValue ?
                new ObjectParameter("ModuleDefId", moduleDefId) :
                new ObjectParameter("ModuleDefId", typeof(int));
    
            var controlKeyParameter = controlKey != null ?
                new ObjectParameter("ControlKey", controlKey) :
                new ObjectParameter("ControlKey", typeof(string));
    
            var controlSrcParameter = controlSrc != null ?
                new ObjectParameter("ControlSrc", controlSrc) :
                new ObjectParameter("ControlSrc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleControlByKeyAndSrc_Result>("GetModuleControlByKeyAndSrc", moduleDefIdParameter, controlKeyParameter, controlSrcParameter);
        }
    
        public virtual ObjectResult<GetModuleControls_Result> GetModuleControls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleControls_Result>("GetModuleControls");
        }
    
        public virtual ObjectResult<GetModuleControlsByKey_Result> GetModuleControlsByKey(string controlKey, Nullable<int> moduleDefId)
        {
            var controlKeyParameter = controlKey != null ?
                new ObjectParameter("ControlKey", controlKey) :
                new ObjectParameter("ControlKey", typeof(string));
    
            var moduleDefIdParameter = moduleDefId.HasValue ?
                new ObjectParameter("ModuleDefId", moduleDefId) :
                new ObjectParameter("ModuleDefId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleControlsByKey_Result>("GetModuleControlsByKey", controlKeyParameter, moduleDefIdParameter);
        }
    
        public virtual ObjectResult<GetModuleDefinitions_Result> GetModuleDefinitions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleDefinitions_Result>("GetModuleDefinitions");
        }
    
        public virtual ObjectResult<GetModulePackagesInUse_Result> GetModulePackagesInUse(Nullable<int> portalID, Nullable<bool> forHost)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var forHostParameter = forHost.HasValue ?
                new ObjectParameter("ForHost", forHost) :
                new ObjectParameter("ForHost", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModulePackagesInUse_Result>("GetModulePackagesInUse", portalIDParameter, forHostParameter);
        }
    
        public virtual ObjectResult<GetModulePermission_Result> GetModulePermission(Nullable<int> modulePermissionID)
        {
            var modulePermissionIDParameter = modulePermissionID.HasValue ?
                new ObjectParameter("ModulePermissionID", modulePermissionID) :
                new ObjectParameter("ModulePermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModulePermission_Result>("GetModulePermission", modulePermissionIDParameter);
        }
    
        public virtual ObjectResult<GetModulePermissionsByModuleID_Result> GetModulePermissionsByModuleID(Nullable<int> moduleID, Nullable<int> permissionID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModulePermissionsByModuleID_Result>("GetModulePermissionsByModuleID", moduleIDParameter, permissionIDParameter);
        }
    
        public virtual ObjectResult<GetModulePermissionsByPortal_Result> GetModulePermissionsByPortal(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModulePermissionsByPortal_Result>("GetModulePermissionsByPortal", portalIDParameter);
        }
    
        public virtual ObjectResult<GetModulePermissionsByTabID_Result> GetModulePermissionsByTabID(Nullable<int> tabID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModulePermissionsByTabID_Result>("GetModulePermissionsByTabID", tabIDParameter);
        }
    
        public virtual ObjectResult<GetModules_Result> GetModules(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModules_Result>("GetModules", portalIDParameter);
        }
    
        public virtual ObjectResult<string> GetModuleSetting(Nullable<int> moduleId, string settingName)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetModuleSetting", moduleIdParameter, settingNameParameter);
        }
    
        public virtual ObjectResult<GetModuleSettings_Result> GetModuleSettings(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetModuleSettings_Result>("GetModuleSettings", moduleIdParameter);
        }
    
        public virtual ObjectResult<GetOnlineUser_Result> GetOnlineUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOnlineUser_Result>("GetOnlineUser", userIDParameter);
        }
    
        public virtual ObjectResult<GetOnlineUsers_Result> GetOnlineUsers(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetOnlineUsers_Result>("GetOnlineUsers", portalIDParameter);
        }
    
        public virtual ObjectResult<GetPackage_Result> GetPackage(Nullable<int> packageID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackage_Result>("GetPackage", packageIDParameter);
        }
    
        public virtual ObjectResult<GetPackageByName_Result> GetPackageByName(Nullable<int> portalID, string name)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageByName_Result>("GetPackageByName", portalIDParameter, nameParameter);
        }
    
        public virtual ObjectResult<GetPackages_Result> GetPackages(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackages_Result>("GetPackages", portalIDParameter);
        }
    
        public virtual ObjectResult<GetPackagesByType_Result> GetPackagesByType(Nullable<int> portalID, string packageType)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var packageTypeParameter = packageType != null ?
                new ObjectParameter("PackageType", packageType) :
                new ObjectParameter("PackageType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackagesByType_Result>("GetPackagesByType", portalIDParameter, packageTypeParameter);
        }
    
        public virtual ObjectResult<GetPackageType_Result> GetPackageType(string packageType)
        {
            var packageTypeParameter = packageType != null ?
                new ObjectParameter("PackageType", packageType) :
                new ObjectParameter("PackageType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageType_Result>("GetPackageType", packageTypeParameter);
        }
    
        public virtual ObjectResult<GetPackageTypes_Result> GetPackageTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPackageTypes_Result>("GetPackageTypes");
        }
    
        public virtual ObjectResult<GetPermission_Result> GetPermission(Nullable<int> permissionID)
        {
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermission_Result>("GetPermission", permissionIDParameter);
        }
    
        public virtual ObjectResult<GetPermissionByCodeAndKey_Result> GetPermissionByCodeAndKey(string permissionCode, string permissionKey)
        {
            var permissionCodeParameter = permissionCode != null ?
                new ObjectParameter("PermissionCode", permissionCode) :
                new ObjectParameter("PermissionCode", typeof(string));
    
            var permissionKeyParameter = permissionKey != null ?
                new ObjectParameter("PermissionKey", permissionKey) :
                new ObjectParameter("PermissionKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionByCodeAndKey_Result>("GetPermissionByCodeAndKey", permissionCodeParameter, permissionKeyParameter);
        }
    
        public virtual ObjectResult<GetPermissionsByFolder_Result> GetPermissionsByFolder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionsByFolder_Result>("GetPermissionsByFolder");
        }
    
        public virtual ObjectResult<GetPermissionsByModuleDefID_Result> GetPermissionsByModuleDefID(Nullable<int> moduleDefID)
        {
            var moduleDefIDParameter = moduleDefID.HasValue ?
                new ObjectParameter("ModuleDefID", moduleDefID) :
                new ObjectParameter("ModuleDefID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionsByModuleDefID_Result>("GetPermissionsByModuleDefID", moduleDefIDParameter);
        }
    
        public virtual ObjectResult<GetPermissionsByModuleID_Result> GetPermissionsByModuleID(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionsByModuleID_Result>("GetPermissionsByModuleID", moduleIDParameter);
        }
    
        public virtual ObjectResult<GetPermissionsByPortalDesktopModule_Result> GetPermissionsByPortalDesktopModule()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionsByPortalDesktopModule_Result>("GetPermissionsByPortalDesktopModule");
        }
    
        public virtual ObjectResult<GetPermissionsByTab_Result> GetPermissionsByTab()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPermissionsByTab_Result>("GetPermissionsByTab");
        }
    
        public virtual ObjectResult<GetPortal_Result> GetPortal(Nullable<int> portalId, string cultureCode)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortal_Result>("GetPortal", portalIdParameter, cultureCodeParameter);
        }
    
        public virtual ObjectResult<GetPortalAlias_Result> GetPortalAlias(string hTTPAlias, Nullable<int> portalID)
        {
            var hTTPAliasParameter = hTTPAlias != null ?
                new ObjectParameter("HTTPAlias", hTTPAlias) :
                new ObjectParameter("HTTPAlias", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalAlias_Result>("GetPortalAlias", hTTPAliasParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetPortalAliasByPortalAliasID_Result> GetPortalAliasByPortalAliasID(Nullable<int> portalAliasID)
        {
            var portalAliasIDParameter = portalAliasID.HasValue ?
                new ObjectParameter("PortalAliasID", portalAliasID) :
                new ObjectParameter("PortalAliasID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalAliasByPortalAliasID_Result>("GetPortalAliasByPortalAliasID", portalAliasIDParameter);
        }
    
        public virtual ObjectResult<GetPortalAliasByPortalID_Result> GetPortalAliasByPortalID(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalAliasByPortalID_Result>("GetPortalAliasByPortalID", portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPortalByAlias(string hTTPAlias)
        {
            var hTTPAliasParameter = hTTPAlias != null ?
                new ObjectParameter("HTTPAlias", hTTPAlias) :
                new ObjectParameter("HTTPAlias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPortalByAlias", hTTPAliasParameter);
        }
    
        public virtual ObjectResult<GetPortalByPortalAliasID_Result> GetPortalByPortalAliasID(Nullable<int> portalAliasId)
        {
            var portalAliasIdParameter = portalAliasId.HasValue ?
                new ObjectParameter("PortalAliasId", portalAliasId) :
                new ObjectParameter("PortalAliasId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalByPortalAliasID_Result>("GetPortalByPortalAliasID", portalAliasIdParameter);
        }
    
        public virtual ObjectResult<string> GetPortalByTab(Nullable<int> tabId, string hTTPAlias)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var hTTPAliasParameter = hTTPAlias != null ?
                new ObjectParameter("HTTPAlias", hTTPAlias) :
                new ObjectParameter("HTTPAlias", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPortalByTab", tabIdParameter, hTTPAliasParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetPortalCount()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetPortalCount");
        }
    
        public virtual ObjectResult<string> GetPortalDefaultLanguage(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPortalDefaultLanguage", portalIdParameter);
        }
    
        public virtual ObjectResult<GetPortalDesktopModules_Result> GetPortalDesktopModules(Nullable<int> portalId, Nullable<int> desktopModuleId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var desktopModuleIdParameter = desktopModuleId.HasValue ?
                new ObjectParameter("DesktopModuleId", desktopModuleId) :
                new ObjectParameter("DesktopModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalDesktopModules_Result>("GetPortalDesktopModules", portalIdParameter, desktopModuleIdParameter);
        }
    
        public virtual ObjectResult<GetPortalGroups_Result> GetPortalGroups()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalGroups_Result>("GetPortalGroups");
        }
    
        public virtual ObjectResult<GetPortalRoles_Result> GetPortalRoles(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalRoles_Result>("GetPortalRoles", portalIdParameter);
        }
    
        public virtual ObjectResult<GetPortals_Result> GetPortals(string cultureCode)
        {
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortals_Result>("GetPortals", cultureCodeParameter);
        }
    
        public virtual int GetPortalsByName(string nameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var nameToMatchParameter = nameToMatch != null ?
                new ObjectParameter("NameToMatch", nameToMatch) :
                new ObjectParameter("NameToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetPortalsByName", nameToMatchParameter, pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<string> GetPortalSetting(Nullable<int> portalID, string settingName, string cultureCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetPortalSetting", portalIDParameter, settingNameParameter, cultureCodeParameter);
        }
    
        public virtual ObjectResult<GetPortalSettings_Result> GetPortalSettings(Nullable<int> portalID, string cultureCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPortalSettings_Result>("GetPortalSettings", portalIDParameter, cultureCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> GetPortalSpaceUsed(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("GetPortalSpaceUsed", portalIDParameter);
        }
    
        public virtual ObjectResult<GetProfile_Result> GetProfile(Nullable<int> userID, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProfile_Result>("GetProfile", userIDParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetPropertyDefinition_Result> GetPropertyDefinition(Nullable<int> propertyDefinitionID)
        {
            var propertyDefinitionIDParameter = propertyDefinitionID.HasValue ?
                new ObjectParameter("PropertyDefinitionID", propertyDefinitionID) :
                new ObjectParameter("PropertyDefinitionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyDefinition_Result>("GetPropertyDefinition", propertyDefinitionIDParameter);
        }
    
        public virtual ObjectResult<GetPropertyDefinitionByName_Result> GetPropertyDefinitionByName(Nullable<int> portalID, string name)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyDefinitionByName_Result>("GetPropertyDefinitionByName", portalIDParameter, nameParameter);
        }
    
        public virtual ObjectResult<GetPropertyDefinitionsByCategory_Result> GetPropertyDefinitionsByCategory(Nullable<int> portalID, string category)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var categoryParameter = category != null ?
                new ObjectParameter("Category", category) :
                new ObjectParameter("Category", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyDefinitionsByCategory_Result>("GetPropertyDefinitionsByCategory", portalIDParameter, categoryParameter);
        }
    
        public virtual ObjectResult<GetPropertyDefinitionsByPortal_Result> GetPropertyDefinitionsByPortal(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPropertyDefinitionsByPortal_Result>("GetPropertyDefinitionsByPortal", portalIDParameter);
        }
    
        public virtual ObjectResult<GetRole_Result> GetRole(Nullable<int> roleId, Nullable<int> portalID)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRole_Result>("GetRole", roleIdParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetRoleByName_Result> GetRoleByName(Nullable<int> portalID, string roleName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var roleNameParameter = roleName != null ?
                new ObjectParameter("RoleName", roleName) :
                new ObjectParameter("RoleName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleByName_Result>("GetRoleByName", portalIDParameter, roleNameParameter);
        }
    
        public virtual ObjectResult<GetRoleGroup_Result> GetRoleGroup(Nullable<int> portalID, Nullable<int> roleGroupId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var roleGroupIdParameter = roleGroupId.HasValue ?
                new ObjectParameter("RoleGroupId", roleGroupId) :
                new ObjectParameter("RoleGroupId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleGroup_Result>("GetRoleGroup", portalIDParameter, roleGroupIdParameter);
        }
    
        public virtual ObjectResult<GetRoleGroupByName_Result> GetRoleGroupByName(Nullable<int> portalID, string roleGroupName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var roleGroupNameParameter = roleGroupName != null ?
                new ObjectParameter("RoleGroupName", roleGroupName) :
                new ObjectParameter("RoleGroupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleGroupByName_Result>("GetRoleGroupByName", portalIDParameter, roleGroupNameParameter);
        }
    
        public virtual ObjectResult<GetRoleGroups_Result> GetRoleGroups(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoleGroups_Result>("GetRoleGroups", portalIDParameter);
        }
    
        public virtual ObjectResult<GetRoles_Result> GetRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRoles_Result>("GetRoles");
        }
    
        public virtual ObjectResult<GetRolesByGroup_Result> GetRolesByGroup(Nullable<int> roleGroupId, Nullable<int> portalId)
        {
            var roleGroupIdParameter = roleGroupId.HasValue ?
                new ObjectParameter("RoleGroupId", roleGroupId) :
                new ObjectParameter("RoleGroupId", typeof(int));
    
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRolesByGroup_Result>("GetRolesByGroup", roleGroupIdParameter, portalIdParameter);
        }
    
        public virtual ObjectResult<GetRolesByUser_Result> GetRolesByUser(Nullable<int> userID, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetRolesByUser_Result>("GetRolesByUser", userIDParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetSchedule_Result> GetSchedule(string server)
        {
            var serverParameter = server != null ?
                new ObjectParameter("Server", server) :
                new ObjectParameter("Server", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSchedule_Result>("GetSchedule", serverParameter);
        }
    
        public virtual ObjectResult<GetScheduleByEvent_Result> GetScheduleByEvent(string eventName, string server)
        {
            var eventNameParameter = eventName != null ?
                new ObjectParameter("EventName", eventName) :
                new ObjectParameter("EventName", typeof(string));
    
            var serverParameter = server != null ?
                new ObjectParameter("Server", server) :
                new ObjectParameter("Server", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleByEvent_Result>("GetScheduleByEvent", eventNameParameter, serverParameter);
        }
    
        public virtual ObjectResult<GetScheduleByScheduleID_Result> GetScheduleByScheduleID(Nullable<int> scheduleID)
        {
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleByScheduleID_Result>("GetScheduleByScheduleID", scheduleIDParameter);
        }
    
        public virtual ObjectResult<GetScheduleByTypeFullName_Result> GetScheduleByTypeFullName(string typeFullName, string server)
        {
            var typeFullNameParameter = typeFullName != null ?
                new ObjectParameter("TypeFullName", typeFullName) :
                new ObjectParameter("TypeFullName", typeof(string));
    
            var serverParameter = server != null ?
                new ObjectParameter("Server", server) :
                new ObjectParameter("Server", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleByTypeFullName_Result>("GetScheduleByTypeFullName", typeFullNameParameter, serverParameter);
        }
    
        public virtual ObjectResult<GetScheduleHistory_Result> GetScheduleHistory(Nullable<int> scheduleID)
        {
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleHistory_Result>("GetScheduleHistory", scheduleIDParameter);
        }
    
        public virtual ObjectResult<GetScheduleItemSettings_Result> GetScheduleItemSettings(Nullable<int> scheduleID)
        {
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleItemSettings_Result>("GetScheduleItemSettings", scheduleIDParameter);
        }
    
        public virtual ObjectResult<GetScheduleNextTask_Result> GetScheduleNextTask(string server)
        {
            var serverParameter = server != null ?
                new ObjectParameter("Server", server) :
                new ObjectParameter("Server", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScheduleNextTask_Result>("GetScheduleNextTask", serverParameter);
        }
    
        public virtual ObjectResult<GetScopeTypes_Result> GetScopeTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetScopeTypes_Result>("GetScopeTypes");
        }
    
        public virtual ObjectResult<GetSearchCommonWordByID_Result> GetSearchCommonWordByID(Nullable<int> commonWordID)
        {
            var commonWordIDParameter = commonWordID.HasValue ?
                new ObjectParameter("CommonWordID", commonWordID) :
                new ObjectParameter("CommonWordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchCommonWordByID_Result>("GetSearchCommonWordByID", commonWordIDParameter);
        }
    
        public virtual ObjectResult<GetSearchCommonWordsByLocale_Result> GetSearchCommonWordsByLocale(string locale)
        {
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchCommonWordsByLocale_Result>("GetSearchCommonWordsByLocale", localeParameter);
        }
    
        public virtual ObjectResult<GetSearchIndexers_Result> GetSearchIndexers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchIndexers_Result>("GetSearchIndexers");
        }
    
        public virtual ObjectResult<GetSearchItem_Result> GetSearchItem(Nullable<int> moduleId, string searchKey)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var searchKeyParameter = searchKey != null ?
                new ObjectParameter("SearchKey", searchKey) :
                new ObjectParameter("SearchKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchItem_Result>("GetSearchItem", moduleIdParameter, searchKeyParameter);
        }
    
        public virtual ObjectResult<GetSearchItems_Result> GetSearchItems(Nullable<int> portalID, Nullable<int> tabId, Nullable<int> moduleId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchItems_Result>("GetSearchItems", portalIDParameter, tabIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<GetSearchItemWord_Result> GetSearchItemWord(Nullable<int> searchItemWordID)
        {
            var searchItemWordIDParameter = searchItemWordID.HasValue ?
                new ObjectParameter("SearchItemWordID", searchItemWordID) :
                new ObjectParameter("SearchItemWordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchItemWord_Result>("GetSearchItemWord", searchItemWordIDParameter);
        }
    
        public virtual ObjectResult<GetSearchItemWordBySearchItem_Result> GetSearchItemWordBySearchItem(Nullable<int> searchItemID)
        {
            var searchItemIDParameter = searchItemID.HasValue ?
                new ObjectParameter("SearchItemID", searchItemID) :
                new ObjectParameter("SearchItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchItemWordBySearchItem_Result>("GetSearchItemWordBySearchItem", searchItemIDParameter);
        }
    
        public virtual ObjectResult<GetSearchItemWordBySearchWord_Result> GetSearchItemWordBySearchWord(Nullable<int> searchWordsID)
        {
            var searchWordsIDParameter = searchWordsID.HasValue ?
                new ObjectParameter("SearchWordsID", searchWordsID) :
                new ObjectParameter("SearchWordsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchItemWordBySearchWord_Result>("GetSearchItemWordBySearchWord", searchWordsIDParameter);
        }
    
        public virtual ObjectResult<GetSearchItemWordPosition_Result> GetSearchItemWordPosition(Nullable<int> searchItemWordPositionID)
        {
            var searchItemWordPositionIDParameter = searchItemWordPositionID.HasValue ?
                new ObjectParameter("SearchItemWordPositionID", searchItemWordPositionID) :
                new ObjectParameter("SearchItemWordPositionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchItemWordPosition_Result>("GetSearchItemWordPosition", searchItemWordPositionIDParameter);
        }
    
        public virtual ObjectResult<GetSearchItemWordPositionBySearchItemWord_Result> GetSearchItemWordPositionBySearchItemWord(Nullable<int> searchItemWordID)
        {
            var searchItemWordIDParameter = searchItemWordID.HasValue ?
                new ObjectParameter("SearchItemWordID", searchItemWordID) :
                new ObjectParameter("SearchItemWordID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchItemWordPositionBySearchItemWord_Result>("GetSearchItemWordPositionBySearchItemWord", searchItemWordIDParameter);
        }
    
        public virtual ObjectResult<GetSearchModules_Result> GetSearchModules(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchModules_Result>("GetSearchModules", portalIDParameter);
        }
    
        public virtual ObjectResult<GetSearchResultModules_Result> GetSearchResultModules(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchResultModules_Result>("GetSearchResultModules", portalIDParameter);
        }
    
        public virtual ObjectResult<GetSearchResults_Result> GetSearchResults(Nullable<int> portalID, Nullable<int> tabId, Nullable<int> moduleId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchResults_Result>("GetSearchResults", portalIDParameter, tabIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<GetSearchResultsByWord_Result> GetSearchResultsByWord(Nullable<int> portalID, string word)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var wordParameter = word != null ?
                new ObjectParameter("Word", word) :
                new ObjectParameter("Word", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchResultsByWord_Result>("GetSearchResultsByWord", portalIDParameter, wordParameter);
        }
    
        public virtual ObjectResult<GetSearchSettings_Result> GetSearchSettings(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchSettings_Result>("GetSearchSettings", moduleIDParameter);
        }
    
        public virtual ObjectResult<GetSearchWordByID_Result> GetSearchWordByID(Nullable<int> searchWordsID)
        {
            var searchWordsIDParameter = searchWordsID.HasValue ?
                new ObjectParameter("SearchWordsID", searchWordsID) :
                new ObjectParameter("SearchWordsID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchWordByID_Result>("GetSearchWordByID", searchWordsIDParameter);
        }
    
        public virtual ObjectResult<GetSearchWords_Result> GetSearchWords()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSearchWords_Result>("GetSearchWords");
        }
    
        public virtual ObjectResult<GetServerConfiguration_Result> GetServerConfiguration()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServerConfiguration_Result>("GetServerConfiguration");
        }
    
        public virtual ObjectResult<GetServers_Result> GetServers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServers_Result>("GetServers");
        }
    
        public virtual ObjectResult<GetServices_Result> GetServices(Nullable<int> portalId, Nullable<int> userId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetServices_Result>("GetServices", portalIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetSiteLog1_Result> GetSiteLog1(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog1_Result>("GetSiteLog1", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog12_Result> GetSiteLog12(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog12_Result>("GetSiteLog12", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog2_Result> GetSiteLog2(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog2_Result>("GetSiteLog2", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog3_Result> GetSiteLog3(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog3_Result>("GetSiteLog3", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog4_Result> GetSiteLog4(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog4_Result>("GetSiteLog4", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog5_Result> GetSiteLog5(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog5_Result>("GetSiteLog5", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog6_Result> GetSiteLog6(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog6_Result>("GetSiteLog6", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog7_Result> GetSiteLog7(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog7_Result>("GetSiteLog7", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog8_Result> GetSiteLog8(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog8_Result>("GetSiteLog8", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSiteLog9_Result> GetSiteLog9(Nullable<int> portalID, string portalAlias, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSiteLog9_Result>("GetSiteLog9", portalIDParameter, portalAliasParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetSkinControl_Result> GetSkinControl(Nullable<int> skinControlID)
        {
            var skinControlIDParameter = skinControlID.HasValue ?
                new ObjectParameter("SkinControlID", skinControlID) :
                new ObjectParameter("SkinControlID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkinControl_Result>("GetSkinControl", skinControlIDParameter);
        }
    
        public virtual ObjectResult<GetSkinControlByKey_Result> GetSkinControlByKey(string controlKey)
        {
            var controlKeyParameter = controlKey != null ?
                new ObjectParameter("ControlKey", controlKey) :
                new ObjectParameter("ControlKey", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkinControlByKey_Result>("GetSkinControlByKey", controlKeyParameter);
        }
    
        public virtual ObjectResult<GetSkinControlByPackageID_Result> GetSkinControlByPackageID(Nullable<int> packageID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkinControlByPackageID_Result>("GetSkinControlByPackageID", packageIDParameter);
        }
    
        public virtual ObjectResult<GetSkinControls_Result> GetSkinControls()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkinControls_Result>("GetSkinControls");
        }
    
        public virtual ObjectResult<GetSkinPackage_Result> GetSkinPackage(Nullable<int> portalID, string skinName, string skinType)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var skinNameParameter = skinName != null ?
                new ObjectParameter("SkinName", skinName) :
                new ObjectParameter("SkinName", typeof(string));
    
            var skinTypeParameter = skinType != null ?
                new ObjectParameter("SkinType", skinType) :
                new ObjectParameter("SkinType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkinPackage_Result>("GetSkinPackage", portalIDParameter, skinNameParameter, skinTypeParameter);
        }
    
        public virtual ObjectResult<GetSkinPackageByPackageID_Result> GetSkinPackageByPackageID(Nullable<int> packageID)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSkinPackageByPackageID_Result>("GetSkinPackageByPackageID", packageIDParameter);
        }
    
        public virtual ObjectResult<GetSuperUsers_Result> GetSuperUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetSuperUsers_Result>("GetSuperUsers");
        }
    
        public virtual ObjectResult<string> GetSystemMessage(Nullable<int> portalID, string messageName)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var messageNameParameter = messageName != null ?
                new ObjectParameter("MessageName", messageName) :
                new ObjectParameter("MessageName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSystemMessage", portalIDParameter, messageNameParameter);
        }
    
        public virtual ObjectResult<string> GetSystemMessages()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetSystemMessages");
        }
    
        public virtual ObjectResult<GetTab_Result> GetTab(Nullable<int> tabId)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTab_Result>("GetTab", tabIdParameter);
        }
    
        public virtual ObjectResult<GetTabByName_Result> GetTabByName(string tabName, Nullable<int> portalID)
        {
            var tabNameParameter = tabName != null ?
                new ObjectParameter("TabName", tabName) :
                new ObjectParameter("TabName", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabByName_Result>("GetTabByName", tabNameParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetTabByUniqueID_Result> GetTabByUniqueID(Nullable<System.Guid> uniqueID)
        {
            var uniqueIDParameter = uniqueID.HasValue ?
                new ObjectParameter("UniqueID", uniqueID) :
                new ObjectParameter("UniqueID", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabByUniqueID_Result>("GetTabByUniqueID", uniqueIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetTabCount(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetTabCount", portalIdParameter);
        }
    
        public virtual ObjectResult<string> GetTables()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTables");
        }
    
        public virtual ObjectResult<GetTabModule_Result> GetTabModule(Nullable<int> tabModuleID)
        {
            var tabModuleIDParameter = tabModuleID.HasValue ?
                new ObjectParameter("TabModuleID", tabModuleID) :
                new ObjectParameter("TabModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabModule_Result>("GetTabModule", tabModuleIDParameter);
        }
    
        public virtual ObjectResult<GetTabModuleOrder_Result> GetTabModuleOrder(Nullable<int> tabId, string paneName)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var paneNameParameter = paneName != null ?
                new ObjectParameter("PaneName", paneName) :
                new ObjectParameter("PaneName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabModuleOrder_Result>("GetTabModuleOrder", tabIdParameter, paneNameParameter);
        }
    
        public virtual ObjectResult<GetTabModules_Result> GetTabModules(Nullable<int> tabId)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabModules_Result>("GetTabModules", tabIdParameter);
        }
    
        public virtual ObjectResult<GetTabModuleSetting_Result> GetTabModuleSetting(Nullable<int> tabModuleId, string settingName)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabModuleSetting_Result>("GetTabModuleSetting", tabModuleIdParameter, settingNameParameter);
        }
    
        public virtual ObjectResult<GetTabModuleSettings_Result> GetTabModuleSettings(Nullable<int> tabModuleId)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabModuleSettings_Result>("GetTabModuleSettings", tabModuleIdParameter);
        }
    
        public virtual ObjectResult<string> GetTabPanes(Nullable<int> tabId)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTabPanes", tabIdParameter);
        }
    
        public virtual ObjectResult<GetTabPaths_Result> GetTabPaths(Nullable<int> portalID, string cultureCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabPaths_Result>("GetTabPaths", portalIDParameter, cultureCodeParameter);
        }
    
        public virtual ObjectResult<GetTabPermission_Result> GetTabPermission(Nullable<int> tabPermissionID)
        {
            var tabPermissionIDParameter = tabPermissionID.HasValue ?
                new ObjectParameter("TabPermissionID", tabPermissionID) :
                new ObjectParameter("TabPermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabPermission_Result>("GetTabPermission", tabPermissionIDParameter);
        }
    
        public virtual ObjectResult<GetTabPermissionsByPortal_Result> GetTabPermissionsByPortal(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabPermissionsByPortal_Result>("GetTabPermissionsByPortal", portalIDParameter);
        }
    
        public virtual ObjectResult<GetTabPermissionsByTabID_Result> GetTabPermissionsByTabID(Nullable<int> tabID, Nullable<int> permissionID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabPermissionsByTabID_Result>("GetTabPermissionsByTabID", tabIDParameter, permissionIDParameter);
        }
    
        public virtual ObjectResult<GetTabs_Result> GetTabs(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabs_Result>("GetTabs", portalIDParameter);
        }
    
        public virtual ObjectResult<GetTabsByModuleID_Result> GetTabsByModuleID(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabsByModuleID_Result>("GetTabsByModuleID", moduleIDParameter);
        }
    
        public virtual ObjectResult<GetTabsByPackageID_Result> GetTabsByPackageID(Nullable<int> portalID, Nullable<int> packageID, Nullable<bool> forHost)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var forHostParameter = forHost.HasValue ?
                new ObjectParameter("ForHost", forHost) :
                new ObjectParameter("ForHost", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabsByPackageID_Result>("GetTabsByPackageID", portalIDParameter, packageIDParameter, forHostParameter);
        }
    
        public virtual ObjectResult<GetTabsByParentId_Result> GetTabsByParentId(Nullable<int> parentId)
        {
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabsByParentId_Result>("GetTabsByParentId", parentIdParameter);
        }
    
        public virtual ObjectResult<string> GetTabSetting(Nullable<int> tabID, string settingName)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTabSetting", tabIDParameter, settingNameParameter);
        }
    
        public virtual ObjectResult<GetTabSettings_Result> GetTabSettings(Nullable<int> tabID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTabSettings_Result>("GetTabSettings", tabIDParameter);
        }
    
        public virtual ObjectResult<GetTerm_Result> GetTerm(Nullable<int> termId)
        {
            var termIdParameter = termId.HasValue ?
                new ObjectParameter("TermId", termId) :
                new ObjectParameter("TermId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTerm_Result>("GetTerm", termIdParameter);
        }
    
        public virtual ObjectResult<GetTermsByContent_Result> GetTermsByContent(Nullable<int> contentItemID)
        {
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTermsByContent_Result>("GetTermsByContent", contentItemIDParameter);
        }
    
        public virtual ObjectResult<GetTermsByVocabulary_Result> GetTermsByVocabulary(Nullable<int> vocabularyID)
        {
            var vocabularyIDParameter = vocabularyID.HasValue ?
                new ObjectParameter("VocabularyID", vocabularyID) :
                new ObjectParameter("VocabularyID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTermsByVocabulary_Result>("GetTermsByVocabulary", vocabularyIDParameter);
        }
    
        public virtual ObjectResult<GetTopHtmlText_Result> GetTopHtmlText(Nullable<int> moduleID, Nullable<bool> isPublished)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTopHtmlText_Result>("GetTopHtmlText", moduleIDParameter, isPublishedParameter);
        }
    
        public virtual ObjectResult<GetUnAuthorizedUsers_Result> GetUnAuthorizedUsers(Nullable<int> portalID, Nullable<bool> includeDeleted, Nullable<bool> superUsersOnly)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var includeDeletedParameter = includeDeleted.HasValue ?
                new ObjectParameter("IncludeDeleted", includeDeleted) :
                new ObjectParameter("IncludeDeleted", typeof(bool));
    
            var superUsersOnlyParameter = superUsersOnly.HasValue ?
                new ObjectParameter("SuperUsersOnly", superUsersOnly) :
                new ObjectParameter("SuperUsersOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnAuthorizedUsers_Result>("GetUnAuthorizedUsers", portalIDParameter, includeDeletedParameter, superUsersOnlyParameter);
        }
    
        public virtual ObjectResult<GetUnIndexedContentItems_Result> GetUnIndexedContentItems()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnIndexedContentItems_Result>("GetUnIndexedContentItems");
        }
    
        public virtual ObjectResult<GetUrl_Result> GetUrl(Nullable<int> portalID, string url)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUrl_Result>("GetUrl", portalIDParameter, urlParameter);
        }
    
        public virtual ObjectResult<GetUrlLog_Result> GetUrlLog(Nullable<int> uRLTrackingID, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var uRLTrackingIDParameter = uRLTrackingID.HasValue ?
                new ObjectParameter("URLTrackingID", uRLTrackingID) :
                new ObjectParameter("URLTrackingID", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUrlLog_Result>("GetUrlLog", uRLTrackingIDParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetUrls_Result> GetUrls(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUrls_Result>("GetUrls", portalIDParameter);
        }
    
        public virtual ObjectResult<GetUrlTracking_Result> GetUrlTracking(Nullable<int> portalID, string url, Nullable<int> moduleId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUrlTracking_Result>("GetUrlTracking", portalIDParameter, urlParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<GetUser_Result> GetUser(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUser_Result>("GetUser", portalIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<GetUserByAuthToken_Result> GetUserByAuthToken(Nullable<int> portalId, string userToken, string authType)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var userTokenParameter = userToken != null ?
                new ObjectParameter("UserToken", userToken) :
                new ObjectParameter("UserToken", typeof(string));
    
            var authTypeParameter = authType != null ?
                new ObjectParameter("AuthType", authType) :
                new ObjectParameter("AuthType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByAuthToken_Result>("GetUserByAuthToken", portalIdParameter, userTokenParameter, authTypeParameter);
        }
    
        public virtual ObjectResult<GetUserByUsername_Result> GetUserByUsername(Nullable<int> portalID, string username)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserByUsername_Result>("GetUserByUsername", portalIDParameter, usernameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> GetUserCountByPortal(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetUserCountByPortal", portalIdParameter);
        }
    
        public virtual ObjectResult<GetUserProfile_Result> GetUserProfile(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserProfile_Result>("GetUserProfile", userIDParameter);
        }
    
        public virtual ObjectResult<GetUserRole_Result> GetUserRole(Nullable<int> portalID, Nullable<int> userID, Nullable<int> roleId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserRole_Result>("GetUserRole", portalIDParameter, userIDParameter, roleIdParameter);
        }
    
        public virtual ObjectResult<GetUserRoles_Result> GetUserRoles(Nullable<int> portalId, Nullable<int> userId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserRoles_Result>("GetUserRoles", portalIdParameter, userIdParameter);
        }
    
        public virtual ObjectResult<GetUserRolesByUsername_Result> GetUserRolesByUsername(Nullable<int> portalID, string username, string rolename)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var rolenameParameter = rolename != null ?
                new ObjectParameter("Rolename", rolename) :
                new ObjectParameter("Rolename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUserRolesByUsername_Result>("GetUserRolesByUsername", portalIDParameter, usernameParameter, rolenameParameter);
        }
    
        public virtual ObjectResult<GetUsers_Result> GetUsers(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsers_Result>("GetUsers", portalIDParameter);
        }
    
        public virtual ObjectResult<GetUsersByEmail_Result> GetUsersByEmail(Nullable<int> portalID, string emailToMatch, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> includeDeleted, Nullable<bool> superUsersOnly)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var emailToMatchParameter = emailToMatch != null ?
                new ObjectParameter("EmailToMatch", emailToMatch) :
                new ObjectParameter("EmailToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var includeDeletedParameter = includeDeleted.HasValue ?
                new ObjectParameter("IncludeDeleted", includeDeleted) :
                new ObjectParameter("IncludeDeleted", typeof(bool));
    
            var superUsersOnlyParameter = superUsersOnly.HasValue ?
                new ObjectParameter("SuperUsersOnly", superUsersOnly) :
                new ObjectParameter("SuperUsersOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersByEmail_Result>("GetUsersByEmail", portalIDParameter, emailToMatchParameter, pageIndexParameter, pageSizeParameter, includeDeletedParameter, superUsersOnlyParameter);
        }
    
        public virtual int GetUsersByProfileProperty(Nullable<int> portalID, string propertyName, string propertyValue, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> includeDeleted, Nullable<bool> superUsersOnly)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var propertyNameParameter = propertyName != null ?
                new ObjectParameter("PropertyName", propertyName) :
                new ObjectParameter("PropertyName", typeof(string));
    
            var propertyValueParameter = propertyValue != null ?
                new ObjectParameter("PropertyValue", propertyValue) :
                new ObjectParameter("PropertyValue", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var includeDeletedParameter = includeDeleted.HasValue ?
                new ObjectParameter("IncludeDeleted", includeDeleted) :
                new ObjectParameter("IncludeDeleted", typeof(bool));
    
            var superUsersOnlyParameter = superUsersOnly.HasValue ?
                new ObjectParameter("SuperUsersOnly", superUsersOnly) :
                new ObjectParameter("SuperUsersOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersByProfileProperty", portalIDParameter, propertyNameParameter, propertyValueParameter, pageIndexParameter, pageSizeParameter, includeDeletedParameter, superUsersOnlyParameter);
        }
    
        public virtual ObjectResult<GetUsersByRolename_Result> GetUsersByRolename(Nullable<int> portalID, string rolename)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var rolenameParameter = rolename != null ?
                new ObjectParameter("Rolename", rolename) :
                new ObjectParameter("Rolename", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUsersByRolename_Result>("GetUsersByRolename", portalIDParameter, rolenameParameter);
        }
    
        public virtual int GetUsersByUserName(Nullable<int> portalID, string userNameToMatch, Nullable<int> pageIndex, Nullable<int> pageSize, Nullable<bool> includeDeleted, Nullable<bool> superUsersOnly)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userNameToMatchParameter = userNameToMatch != null ?
                new ObjectParameter("UserNameToMatch", userNameToMatch) :
                new ObjectParameter("UserNameToMatch", typeof(string));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var includeDeletedParameter = includeDeleted.HasValue ?
                new ObjectParameter("IncludeDeleted", includeDeleted) :
                new ObjectParameter("IncludeDeleted", typeof(bool));
    
            var superUsersOnlyParameter = superUsersOnly.HasValue ?
                new ObjectParameter("SuperUsersOnly", superUsersOnly) :
                new ObjectParameter("SuperUsersOnly", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetUsersByUserName", portalIDParameter, userNameToMatchParameter, pageIndexParameter, pageSizeParameter, includeDeletedParameter, superUsersOnlyParameter);
        }
    
        public virtual ObjectResult<GetVendor_Result> GetVendor(Nullable<int> vendorId, Nullable<int> portalID)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendor_Result>("GetVendor", vendorIdParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<GetVendorClassifications_Result> GetVendorClassifications(Nullable<int> vendorId)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVendorClassifications_Result>("GetVendorClassifications", vendorIdParameter);
        }
    
        public virtual int GetVendors(Nullable<int> portalID, Nullable<bool> unAuthorized, Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var unAuthorizedParameter = unAuthorized.HasValue ?
                new ObjectParameter("UnAuthorized", unAuthorized) :
                new ObjectParameter("UnAuthorized", typeof(bool));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVendors", portalIDParameter, unAuthorizedParameter, pageSizeParameter, pageIndexParameter);
        }
    
        public virtual int GetVendorsByEmail(string filter, Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVendorsByEmail", filterParameter, portalIDParameter, pageSizeParameter, pageIndexParameter);
        }
    
        public virtual int GetVendorsByName(string filter, Nullable<int> portalID, Nullable<int> pageSize, Nullable<int> pageIndex)
        {
            var filterParameter = filter != null ?
                new ObjectParameter("Filter", filter) :
                new ObjectParameter("Filter", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVendorsByName", filterParameter, portalIDParameter, pageSizeParameter, pageIndexParameter);
        }
    
        public virtual ObjectResult<GetVocabularies_Result> GetVocabularies()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVocabularies_Result>("GetVocabularies");
        }
    
        public virtual ObjectResult<GetWorkflows_Result> GetWorkflows(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWorkflows_Result>("GetWorkflows", portalIDParameter);
        }
    
        public virtual ObjectResult<GetWorkflowStates_Result> GetWorkflowStates(Nullable<int> workflowID)
        {
            var workflowIDParameter = workflowID.HasValue ?
                new ObjectParameter("WorkflowID", workflowID) :
                new ObjectParameter("WorkflowID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetWorkflowStates_Result>("GetWorkflowStates", workflowIDParameter);
        }
    
        public virtual int InsertPortalLocalization(Nullable<int> portalID, string cultureCode, string portalName, string logoFile, string footerText, string description, string keyWords, string backgroundFile, Nullable<int> homeTabId, Nullable<int> loginTabId, Nullable<int> userTabId, Nullable<int> adminTabid, Nullable<int> splashTabId, Nullable<int> createdByUserID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            var portalNameParameter = portalName != null ?
                new ObjectParameter("PortalName", portalName) :
                new ObjectParameter("PortalName", typeof(string));
    
            var logoFileParameter = logoFile != null ?
                new ObjectParameter("LogoFile", logoFile) :
                new ObjectParameter("LogoFile", typeof(string));
    
            var footerTextParameter = footerText != null ?
                new ObjectParameter("FooterText", footerText) :
                new ObjectParameter("FooterText", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var backgroundFileParameter = backgroundFile != null ?
                new ObjectParameter("BackgroundFile", backgroundFile) :
                new ObjectParameter("BackgroundFile", typeof(string));
    
            var homeTabIdParameter = homeTabId.HasValue ?
                new ObjectParameter("HomeTabId", homeTabId) :
                new ObjectParameter("HomeTabId", typeof(int));
    
            var loginTabIdParameter = loginTabId.HasValue ?
                new ObjectParameter("LoginTabId", loginTabId) :
                new ObjectParameter("LoginTabId", typeof(int));
    
            var userTabIdParameter = userTabId.HasValue ?
                new ObjectParameter("UserTabId", userTabId) :
                new ObjectParameter("UserTabId", typeof(int));
    
            var adminTabidParameter = adminTabid.HasValue ?
                new ObjectParameter("AdminTabid", adminTabid) :
                new ObjectParameter("AdminTabid", typeof(int));
    
            var splashTabIdParameter = splashTabId.HasValue ?
                new ObjectParameter("SplashTabId", splashTabId) :
                new ObjectParameter("SplashTabId", typeof(int));
    
            var createdByUserIDParameter = createdByUserID.HasValue ?
                new ObjectParameter("CreatedByUserID", createdByUserID) :
                new ObjectParameter("CreatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertPortalLocalization", portalIDParameter, cultureCodeParameter, portalNameParameter, logoFileParameter, footerTextParameter, descriptionParameter, keyWordsParameter, backgroundFileParameter, homeTabIdParameter, loginTabIdParameter, userTabIdParameter, adminTabidParameter, splashTabIdParameter, createdByUserIDParameter);
        }
    
        public virtual int Integrator_InsertNewUser_(string applicationName, string userName, string password, string firstName, string lastName, string displayName, string passwordSalt, string email, string passwordQuestion, string passwordAnswer, Nullable<bool> isApproved, Nullable<System.DateTime> currentTimeUtc, Nullable<System.DateTime> createDate, Nullable<int> uniqueEmail, Nullable<int> passwordFormat, Nullable<int> portalId, Nullable<System.Guid> userId, Nullable<int> dNNUserId, ObjectParameter returnUserId)
        {
            var applicationNameParameter = applicationName != null ?
                new ObjectParameter("ApplicationName", applicationName) :
                new ObjectParameter("ApplicationName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("firstName", firstName) :
                new ObjectParameter("firstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("lastName", lastName) :
                new ObjectParameter("lastName", typeof(string));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("displayName", displayName) :
                new ObjectParameter("displayName", typeof(string));
    
            var passwordSaltParameter = passwordSalt != null ?
                new ObjectParameter("PasswordSalt", passwordSalt) :
                new ObjectParameter("PasswordSalt", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var passwordQuestionParameter = passwordQuestion != null ?
                new ObjectParameter("PasswordQuestion", passwordQuestion) :
                new ObjectParameter("PasswordQuestion", typeof(string));
    
            var passwordAnswerParameter = passwordAnswer != null ?
                new ObjectParameter("PasswordAnswer", passwordAnswer) :
                new ObjectParameter("PasswordAnswer", typeof(string));
    
            var isApprovedParameter = isApproved.HasValue ?
                new ObjectParameter("IsApproved", isApproved) :
                new ObjectParameter("IsApproved", typeof(bool));
    
            var currentTimeUtcParameter = currentTimeUtc.HasValue ?
                new ObjectParameter("CurrentTimeUtc", currentTimeUtc) :
                new ObjectParameter("CurrentTimeUtc", typeof(System.DateTime));
    
            var createDateParameter = createDate.HasValue ?
                new ObjectParameter("CreateDate", createDate) :
                new ObjectParameter("CreateDate", typeof(System.DateTime));
    
            var uniqueEmailParameter = uniqueEmail.HasValue ?
                new ObjectParameter("UniqueEmail", uniqueEmail) :
                new ObjectParameter("UniqueEmail", typeof(int));
    
            var passwordFormatParameter = passwordFormat.HasValue ?
                new ObjectParameter("PasswordFormat", passwordFormat) :
                new ObjectParameter("PasswordFormat", typeof(int));
    
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            var dNNUserIdParameter = dNNUserId.HasValue ?
                new ObjectParameter("DNNUserId", dNNUserId) :
                new ObjectParameter("DNNUserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Integrator_InsertNewUser_", applicationNameParameter, userNameParameter, passwordParameter, firstNameParameter, lastNameParameter, displayNameParameter, passwordSaltParameter, emailParameter, passwordQuestionParameter, passwordAnswerParameter, isApprovedParameter, currentTimeUtcParameter, createDateParameter, uniqueEmailParameter, passwordFormatParameter, portalIdParameter, userIdParameter, dNNUserIdParameter, returnUserId);
        }
    
        public virtual ObjectResult<IsUserInRole_Result> IsUserInRole(Nullable<int> userID, Nullable<int> roleId, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IsUserInRole_Result>("IsUserInRole", userIDParameter, roleIdParameter, portalIDParameter);
        }
    
        public virtual ObjectResult<ListSearchItem_Result> ListSearchItem()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListSearchItem_Result>("ListSearchItem");
        }
    
        public virtual ObjectResult<ListSearchItemWord_Result> ListSearchItemWord()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListSearchItemWord_Result>("ListSearchItemWord");
        }
    
        public virtual ObjectResult<ListSearchItemWordPosition_Result> ListSearchItemWordPosition()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ListSearchItemWordPosition_Result>("ListSearchItemWordPosition");
        }
    
        public virtual ObjectResult<Messaging_GetInbox_Result> Messaging_GetInbox(Nullable<int> portalID, Nullable<int> userID, Nullable<int> pageNumber, Nullable<int> pageSize)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var pageNumberParameter = pageNumber.HasValue ?
                new ObjectParameter("PageNumber", pageNumber) :
                new ObjectParameter("PageNumber", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Messaging_GetInbox_Result>("Messaging_GetInbox", portalIDParameter, userIDParameter, pageNumberParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Messaging_GetInboxCount(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Messaging_GetInboxCount", portalIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Messaging_GetMessage_Result> Messaging_GetMessage(Nullable<long> messageID)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("MessageID", messageID) :
                new ObjectParameter("MessageID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Messaging_GetMessage_Result>("Messaging_GetMessage", messageIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Messaging_GetNewMessageCount(Nullable<int> portalID, Nullable<int> userID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Messaging_GetNewMessageCount", portalIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Messaging_GetNextMessageForDispatch_Result> Messaging_GetNextMessageForDispatch(Nullable<System.Guid> schedulerInstance)
        {
            var schedulerInstanceParameter = schedulerInstance.HasValue ?
                new ObjectParameter("SchedulerInstance", schedulerInstance) :
                new ObjectParameter("SchedulerInstance", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Messaging_GetNextMessageForDispatch_Result>("Messaging_GetNextMessageForDispatch", schedulerInstanceParameter);
        }
    
        public virtual int Messaging_MarkMessageAsDispatched(Nullable<int> messageId)
        {
            var messageIdParameter = messageId.HasValue ?
                new ObjectParameter("MessageId", messageId) :
                new ObjectParameter("MessageId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Messaging_MarkMessageAsDispatched", messageIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Messaging_Save_Message(Nullable<int> portalID, Nullable<int> fromUserID, Nullable<int> toUserID, Nullable<int> toRoleID, Nullable<int> status, string subject, string body, Nullable<System.DateTime> date, Nullable<System.Guid> conversation, Nullable<long> replyTo, Nullable<bool> allowReply, Nullable<bool> skipPortal)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var fromUserIDParameter = fromUserID.HasValue ?
                new ObjectParameter("FromUserID", fromUserID) :
                new ObjectParameter("FromUserID", typeof(int));
    
            var toUserIDParameter = toUserID.HasValue ?
                new ObjectParameter("ToUserID", toUserID) :
                new ObjectParameter("ToUserID", typeof(int));
    
            var toRoleIDParameter = toRoleID.HasValue ?
                new ObjectParameter("ToRoleID", toRoleID) :
                new ObjectParameter("ToRoleID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var conversationParameter = conversation.HasValue ?
                new ObjectParameter("Conversation", conversation) :
                new ObjectParameter("Conversation", typeof(System.Guid));
    
            var replyToParameter = replyTo.HasValue ?
                new ObjectParameter("ReplyTo", replyTo) :
                new ObjectParameter("ReplyTo", typeof(long));
    
            var allowReplyParameter = allowReply.HasValue ?
                new ObjectParameter("AllowReply", allowReply) :
                new ObjectParameter("AllowReply", typeof(bool));
    
            var skipPortalParameter = skipPortal.HasValue ?
                new ObjectParameter("SkipPortal", skipPortal) :
                new ObjectParameter("SkipPortal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Messaging_Save_Message", portalIDParameter, fromUserIDParameter, toUserIDParameter, toRoleIDParameter, statusParameter, subjectParameter, bodyParameter, dateParameter, conversationParameter, replyToParameter, allowReplyParameter, skipPortalParameter);
        }
    
        public virtual int Messaging_UpdateMessage(Nullable<long> messageID, Nullable<int> toUserID, Nullable<int> toRoleID, Nullable<int> status, string subject, string body, Nullable<System.DateTime> date, Nullable<long> replyTo, Nullable<bool> allowReply, Nullable<bool> skipPortal)
        {
            var messageIDParameter = messageID.HasValue ?
                new ObjectParameter("MessageID", messageID) :
                new ObjectParameter("MessageID", typeof(long));
    
            var toUserIDParameter = toUserID.HasValue ?
                new ObjectParameter("ToUserID", toUserID) :
                new ObjectParameter("ToUserID", typeof(int));
    
            var toRoleIDParameter = toRoleID.HasValue ?
                new ObjectParameter("ToRoleID", toRoleID) :
                new ObjectParameter("ToRoleID", typeof(int));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(int));
    
            var subjectParameter = subject != null ?
                new ObjectParameter("Subject", subject) :
                new ObjectParameter("Subject", typeof(string));
    
            var bodyParameter = body != null ?
                new ObjectParameter("Body", body) :
                new ObjectParameter("Body", typeof(string));
    
            var dateParameter = date.HasValue ?
                new ObjectParameter("Date", date) :
                new ObjectParameter("Date", typeof(System.DateTime));
    
            var replyToParameter = replyTo.HasValue ?
                new ObjectParameter("ReplyTo", replyTo) :
                new ObjectParameter("ReplyTo", typeof(long));
    
            var allowReplyParameter = allowReply.HasValue ?
                new ObjectParameter("AllowReply", allowReply) :
                new ObjectParameter("AllowReply", typeof(bool));
    
            var skipPortalParameter = skipPortal.HasValue ?
                new ObjectParameter("SkipPortal", skipPortal) :
                new ObjectParameter("SkipPortal", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Messaging_UpdateMessage", messageIDParameter, toUserIDParameter, toRoleIDParameter, statusParameter, subjectParameter, bodyParameter, dateParameter, replyToParameter, allowReplyParameter, skipPortalParameter);
        }
    
        public virtual int Mobile_DeletePreviewProfile(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mobile_DeletePreviewProfile", idParameter);
        }
    
        public virtual int Mobile_DeleteRedirection(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mobile_DeleteRedirection", idParameter);
        }
    
        public virtual int Mobile_DeleteRedirectionRule(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mobile_DeleteRedirectionRule", idParameter);
        }
    
        public virtual ObjectResult<Mobile_GetAllRedirections_Result> Mobile_GetAllRedirections()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mobile_GetAllRedirections_Result>("Mobile_GetAllRedirections");
        }
    
        public virtual ObjectResult<Mobile_GetPreviewProfiles_Result> Mobile_GetPreviewProfiles(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mobile_GetPreviewProfiles_Result>("Mobile_GetPreviewProfiles", portalIdParameter);
        }
    
        public virtual ObjectResult<Mobile_GetRedirectionRules_Result> Mobile_GetRedirectionRules(Nullable<int> redirectionId)
        {
            var redirectionIdParameter = redirectionId.HasValue ?
                new ObjectParameter("RedirectionId", redirectionId) :
                new ObjectParameter("RedirectionId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mobile_GetRedirectionRules_Result>("Mobile_GetRedirectionRules", redirectionIdParameter);
        }
    
        public virtual ObjectResult<Mobile_GetRedirections_Result> Mobile_GetRedirections(Nullable<int> portalId)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Mobile_GetRedirections_Result>("Mobile_GetRedirections", portalIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Mobile_SavePreviewProfile(Nullable<int> id, Nullable<int> portalId, string name, Nullable<int> width, Nullable<int> height, string userAgent, Nullable<int> sortOrder, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var userAgentParameter = userAgent != null ?
                new ObjectParameter("UserAgent", userAgent) :
                new ObjectParameter("UserAgent", typeof(string));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Mobile_SavePreviewProfile", idParameter, portalIdParameter, nameParameter, widthParameter, heightParameter, userAgentParameter, sortOrderParameter, userIdParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> Mobile_SaveRedirection(Nullable<int> id, Nullable<int> portalId, string name, Nullable<int> type, Nullable<int> sortOrder, Nullable<int> sourceTabId, Nullable<bool> includeChildTabs, Nullable<int> targetType, string targetValue, Nullable<bool> enabled, Nullable<int> userId)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var typeParameter = type.HasValue ?
                new ObjectParameter("Type", type) :
                new ObjectParameter("Type", typeof(int));
    
            var sortOrderParameter = sortOrder.HasValue ?
                new ObjectParameter("SortOrder", sortOrder) :
                new ObjectParameter("SortOrder", typeof(int));
    
            var sourceTabIdParameter = sourceTabId.HasValue ?
                new ObjectParameter("SourceTabId", sourceTabId) :
                new ObjectParameter("SourceTabId", typeof(int));
    
            var includeChildTabsParameter = includeChildTabs.HasValue ?
                new ObjectParameter("IncludeChildTabs", includeChildTabs) :
                new ObjectParameter("IncludeChildTabs", typeof(bool));
    
            var targetTypeParameter = targetType.HasValue ?
                new ObjectParameter("TargetType", targetType) :
                new ObjectParameter("TargetType", typeof(int));
    
            var targetValueParameter = targetValue != null ?
                new ObjectParameter("TargetValue", targetValue) :
                new ObjectParameter("TargetValue", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("Mobile_SaveRedirection", idParameter, portalIdParameter, nameParameter, typeParameter, sortOrderParameter, sourceTabIdParameter, includeChildTabsParameter, targetTypeParameter, targetValueParameter, enabledParameter, userIdParameter);
        }
    
        public virtual int Mobile_SaveRedirectionRule(Nullable<int> id, Nullable<int> redirectionId, string capbility, string expression)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(int));
    
            var redirectionIdParameter = redirectionId.HasValue ?
                new ObjectParameter("RedirectionId", redirectionId) :
                new ObjectParameter("RedirectionId", typeof(int));
    
            var capbilityParameter = capbility != null ?
                new ObjectParameter("Capbility", capbility) :
                new ObjectParameter("Capbility", typeof(string));
    
            var expressionParameter = expression != null ?
                new ObjectParameter("Expression", expression) :
                new ObjectParameter("Expression", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Mobile_SaveRedirectionRule", idParameter, redirectionIdParameter, capbilityParameter, expressionParameter);
        }
    
        public virtual int MoveTabModule(Nullable<int> fromTabId, Nullable<int> moduleId, Nullable<int> toTabId, string paneName, Nullable<int> lastModifiedByUserID)
        {
            var fromTabIdParameter = fromTabId.HasValue ?
                new ObjectParameter("FromTabId", fromTabId) :
                new ObjectParameter("FromTabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var toTabIdParameter = toTabId.HasValue ?
                new ObjectParameter("ToTabId", toTabId) :
                new ObjectParameter("ToTabId", typeof(int));
    
            var paneNameParameter = paneName != null ?
                new ObjectParameter("PaneName", paneName) :
                new ObjectParameter("PaneName", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MoveTabModule", fromTabIdParameter, moduleIdParameter, toTabIdParameter, paneNameParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int PurgeEventLog()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurgeEventLog");
        }
    
        public virtual int PurgeScheduleHistory()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("PurgeScheduleHistory");
        }
    
        public virtual ObjectResult<Nullable<int>> RegisterAssembly(Nullable<int> packageID, string assemblyName, string version)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var assemblyNameParameter = assemblyName != null ?
                new ObjectParameter("AssemblyName", assemblyName) :
                new ObjectParameter("AssemblyName", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("RegisterAssembly", packageIDParameter, assemblyNameParameter, versionParameter);
        }
    
        public virtual int RemoveTermsFromContent(Nullable<int> contentItemID)
        {
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveTermsFromContent", contentItemIDParameter);
        }
    
        public virtual int RemoveUser(Nullable<int> userID, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RemoveUser", userIDParameter, portalIDParameter);
        }
    
        public virtual int RestoreTabModule(Nullable<int> tabId, Nullable<int> moduleId)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreTabModule", tabIdParameter, moduleIdParameter);
        }
    
        public virtual int RestoreUser(Nullable<int> userID, Nullable<int> portalID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RestoreUser", userIDParameter, portalIDParameter);
        }
    
        public virtual int SaveCoreAuditTypes(string logTypeKey, string logTypeFriendlyName, string logTypeOwner, string logTypeCSSClass, Nullable<bool> loggingIsActive, Nullable<int> keepMostRecent, Nullable<bool> emailNotificationIsActive)
        {
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            var logTypeFriendlyNameParameter = logTypeFriendlyName != null ?
                new ObjectParameter("LogTypeFriendlyName", logTypeFriendlyName) :
                new ObjectParameter("LogTypeFriendlyName", typeof(string));
    
            var logTypeOwnerParameter = logTypeOwner != null ?
                new ObjectParameter("LogTypeOwner", logTypeOwner) :
                new ObjectParameter("LogTypeOwner", typeof(string));
    
            var logTypeCSSClassParameter = logTypeCSSClass != null ?
                new ObjectParameter("LogTypeCSSClass", logTypeCSSClass) :
                new ObjectParameter("LogTypeCSSClass", typeof(string));
    
            var loggingIsActiveParameter = loggingIsActive.HasValue ?
                new ObjectParameter("LoggingIsActive", loggingIsActive) :
                new ObjectParameter("LoggingIsActive", typeof(bool));
    
            var keepMostRecentParameter = keepMostRecent.HasValue ?
                new ObjectParameter("KeepMostRecent", keepMostRecent) :
                new ObjectParameter("KeepMostRecent", typeof(int));
    
            var emailNotificationIsActiveParameter = emailNotificationIsActive.HasValue ?
                new ObjectParameter("EmailNotificationIsActive", emailNotificationIsActive) :
                new ObjectParameter("EmailNotificationIsActive", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SaveCoreAuditTypes", logTypeKeyParameter, logTypeFriendlyNameParameter, logTypeOwnerParameter, logTypeCSSClassParameter, loggingIsActiveParameter, keepMostRecentParameter, emailNotificationIsActiveParameter);
        }
    
        public virtual int SetEventMessageComplete(Nullable<int> eventMessageID)
        {
            var eventMessageIDParameter = eventMessageID.HasValue ?
                new ObjectParameter("EventMessageID", eventMessageID) :
                new ObjectParameter("EventMessageID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SetEventMessageComplete", eventMessageIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TAA_AddSingleShipTo(Nullable<int> userID, string firstName, string lastName, string street, string street2, string unit, string city, string region, string country, string postalCode, string telephone, Nullable<bool> isResidential, string profileProperties)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var street2Parameter = street2 != null ?
                new ObjectParameter("Street2", street2) :
                new ObjectParameter("Street2", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var isResidentialParameter = isResidential.HasValue ?
                new ObjectParameter("IsResidential", isResidential) :
                new ObjectParameter("IsResidential", typeof(bool));
    
            var profilePropertiesParameter = profileProperties != null ?
                new ObjectParameter("ProfileProperties", profileProperties) :
                new ObjectParameter("ProfileProperties", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TAA_AddSingleShipTo", userIDParameter, firstNameParameter, lastNameParameter, streetParameter, street2Parameter, unitParameter, cityParameter, regionParameter, countryParameter, postalCodeParameter, telephoneParameter, isResidentialParameter, profilePropertiesParameter);
        }
    
        public virtual ObjectResult<TAA_CatalookGetAdvCatProducts_Result> TAA_CatalookGetAdvCatProducts(Nullable<int> advCatID, Nullable<bool> showOnlyIfStock, string sortBy)
        {
            var advCatIDParameter = advCatID.HasValue ?
                new ObjectParameter("AdvCatID", advCatID) :
                new ObjectParameter("AdvCatID", typeof(int));
    
            var showOnlyIfStockParameter = showOnlyIfStock.HasValue ?
                new ObjectParameter("ShowOnlyIfStock", showOnlyIfStock) :
                new ObjectParameter("ShowOnlyIfStock", typeof(bool));
    
            var sortByParameter = sortBy != null ?
                new ObjectParameter("SortBy", sortBy) :
                new ObjectParameter("SortBy", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_CatalookGetAdvCatProducts_Result>("TAA_CatalookGetAdvCatProducts", advCatIDParameter, showOnlyIfStockParameter, sortByParameter);
        }
    
        public virtual ObjectResult<TAA_CatalookGetAdvCats_Result> TAA_CatalookGetAdvCats(Nullable<bool> showHidden)
        {
            var showHiddenParameter = showHidden.HasValue ?
                new ObjectParameter("ShowHidden", showHidden) :
                new ObjectParameter("ShowHidden", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_CatalookGetAdvCats_Result>("TAA_CatalookGetAdvCats", showHiddenParameter);
        }
    
        public virtual int TAA_CatalookGetCartProductCount(string cartID, Nullable<int> productID, string options, Nullable<System.DateTime> allocDate, string sKU, ObjectParameter productCount)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAA_CatalookGetCartProductCount", cartIDParameter, productIDParameter, optionsParameter, allocDateParameter, sKUParameter, productCount);
        }
    
        public virtual ObjectResult<Nullable<int>> TAA_CatalookGetCartProductCount2(string cartID, Nullable<int> productID, string options, Nullable<System.DateTime> allocDate, string sKU)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TAA_CatalookGetCartProductCount2", cartIDParameter, productIDParameter, optionsParameter, allocDateParameter, sKUParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TAA_CatalookShoppingCartAddItem(string cartID, Nullable<int> productID, Nullable<int> quantity, Nullable<decimal> unitCost, string options, Nullable<System.DateTime> allocDate, string sKU, Nullable<int> billingPeriod, Nullable<int> cartPriceRuleID, Nullable<int> couponCodeID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var optionsParameter = options != null ?
                new ObjectParameter("Options", options) :
                new ObjectParameter("Options", typeof(string));
    
            var allocDateParameter = allocDate.HasValue ?
                new ObjectParameter("AllocDate", allocDate) :
                new ObjectParameter("AllocDate", typeof(System.DateTime));
    
            var sKUParameter = sKU != null ?
                new ObjectParameter("SKU", sKU) :
                new ObjectParameter("SKU", typeof(string));
    
            var billingPeriodParameter = billingPeriod.HasValue ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(int));
    
            var cartPriceRuleIDParameter = cartPriceRuleID.HasValue ?
                new ObjectParameter("CartPriceRuleID", cartPriceRuleID) :
                new ObjectParameter("CartPriceRuleID", typeof(int));
    
            var couponCodeIDParameter = couponCodeID.HasValue ?
                new ObjectParameter("CouponCodeID", couponCodeID) :
                new ObjectParameter("CouponCodeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TAA_CatalookShoppingCartAddItem", cartIDParameter, productIDParameter, quantityParameter, unitCostParameter, optionsParameter, allocDateParameter, sKUParameter, billingPeriodParameter, cartPriceRuleIDParameter, couponCodeIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TAA_Coupon_Exists(string couponCode)
        {
            var couponCodeParameter = couponCode != null ?
                new ObjectParameter("CouponCode", couponCode) :
                new ObjectParameter("CouponCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TAA_Coupon_Exists", couponCodeParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> TAA_Coupons_Add(string name, string description, string axapterPromoNumber, string axapterPromoDescription, string couponCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> amount, Nullable<int> startQty, Nullable<int> endQty, Nullable<decimal> startPrice, Nullable<decimal> endPrice, Nullable<int> maxUsage, Nullable<int> maxUsagePerUser, Nullable<int> userID, Nullable<int> roleID, Nullable<int> addedByUserID)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var axapterPromoNumberParameter = axapterPromoNumber != null ?
                new ObjectParameter("AxapterPromoNumber", axapterPromoNumber) :
                new ObjectParameter("AxapterPromoNumber", typeof(string));
    
            var axapterPromoDescriptionParameter = axapterPromoDescription != null ?
                new ObjectParameter("AxapterPromoDescription", axapterPromoDescription) :
                new ObjectParameter("AxapterPromoDescription", typeof(string));
    
            var couponCodeParameter = couponCode != null ?
                new ObjectParameter("CouponCode", couponCode) :
                new ObjectParameter("CouponCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var startQtyParameter = startQty.HasValue ?
                new ObjectParameter("StartQty", startQty) :
                new ObjectParameter("StartQty", typeof(int));
    
            var endQtyParameter = endQty.HasValue ?
                new ObjectParameter("EndQty", endQty) :
                new ObjectParameter("EndQty", typeof(int));
    
            var startPriceParameter = startPrice.HasValue ?
                new ObjectParameter("StartPrice", startPrice) :
                new ObjectParameter("StartPrice", typeof(decimal));
    
            var endPriceParameter = endPrice.HasValue ?
                new ObjectParameter("EndPrice", endPrice) :
                new ObjectParameter("EndPrice", typeof(decimal));
    
            var maxUsageParameter = maxUsage.HasValue ?
                new ObjectParameter("MaxUsage", maxUsage) :
                new ObjectParameter("MaxUsage", typeof(int));
    
            var maxUsagePerUserParameter = maxUsagePerUser.HasValue ?
                new ObjectParameter("MaxUsagePerUser", maxUsagePerUser) :
                new ObjectParameter("MaxUsagePerUser", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var addedByUserIDParameter = addedByUserID.HasValue ?
                new ObjectParameter("AddedByUserID", addedByUserID) :
                new ObjectParameter("AddedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("TAA_Coupons_Add", nameParameter, descriptionParameter, axapterPromoNumberParameter, axapterPromoDescriptionParameter, couponCodeParameter, startDateParameter, endDateParameter, amountParameter, startQtyParameter, endQtyParameter, startPriceParameter, endPriceParameter, maxUsageParameter, maxUsagePerUserParameter, userIDParameter, roleIDParameter, addedByUserIDParameter);
        }
    
        public virtual int TAA_Coupons_Delete(Nullable<int> couponID, Nullable<int> deletedByUserID)
        {
            var couponIDParameter = couponID.HasValue ?
                new ObjectParameter("CouponID", couponID) :
                new ObjectParameter("CouponID", typeof(int));
    
            var deletedByUserIDParameter = deletedByUserID.HasValue ?
                new ObjectParameter("DeletedByUserID", deletedByUserID) :
                new ObjectParameter("DeletedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAA_Coupons_Delete", couponIDParameter, deletedByUserIDParameter);
        }
    
        public virtual ObjectResult<TAA_Coupons_GetAll_Result> TAA_Coupons_GetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_Coupons_GetAll_Result>("TAA_Coupons_GetAll");
        }
    
        public virtual ObjectResult<TAA_Coupons_GetByCouponID_Result> TAA_Coupons_GetByCouponID(Nullable<int> couponID)
        {
            var couponIDParameter = couponID.HasValue ?
                new ObjectParameter("CouponID", couponID) :
                new ObjectParameter("CouponID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_Coupons_GetByCouponID_Result>("TAA_Coupons_GetByCouponID", couponIDParameter);
        }
    
        public virtual int TAA_Coupons_Update(Nullable<int> couponID, string name, string description, string axapterPromoNumber, string axapterPromoDescription, string couponCode, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<decimal> amount, Nullable<int> startQty, Nullable<int> endQty, Nullable<decimal> startPrice, Nullable<decimal> endPrice, Nullable<int> maxUsage, Nullable<int> maxUsagePerUser, Nullable<int> userID, Nullable<int> roleID, Nullable<int> updatedByUserID)
        {
            var couponIDParameter = couponID.HasValue ?
                new ObjectParameter("CouponID", couponID) :
                new ObjectParameter("CouponID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var axapterPromoNumberParameter = axapterPromoNumber != null ?
                new ObjectParameter("AxapterPromoNumber", axapterPromoNumber) :
                new ObjectParameter("AxapterPromoNumber", typeof(string));
    
            var axapterPromoDescriptionParameter = axapterPromoDescription != null ?
                new ObjectParameter("AxapterPromoDescription", axapterPromoDescription) :
                new ObjectParameter("AxapterPromoDescription", typeof(string));
    
            var couponCodeParameter = couponCode != null ?
                new ObjectParameter("CouponCode", couponCode) :
                new ObjectParameter("CouponCode", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var amountParameter = amount.HasValue ?
                new ObjectParameter("Amount", amount) :
                new ObjectParameter("Amount", typeof(decimal));
    
            var startQtyParameter = startQty.HasValue ?
                new ObjectParameter("StartQty", startQty) :
                new ObjectParameter("StartQty", typeof(int));
    
            var endQtyParameter = endQty.HasValue ?
                new ObjectParameter("EndQty", endQty) :
                new ObjectParameter("EndQty", typeof(int));
    
            var startPriceParameter = startPrice.HasValue ?
                new ObjectParameter("StartPrice", startPrice) :
                new ObjectParameter("StartPrice", typeof(decimal));
    
            var endPriceParameter = endPrice.HasValue ?
                new ObjectParameter("EndPrice", endPrice) :
                new ObjectParameter("EndPrice", typeof(decimal));
    
            var maxUsageParameter = maxUsage.HasValue ?
                new ObjectParameter("MaxUsage", maxUsage) :
                new ObjectParameter("MaxUsage", typeof(int));
    
            var maxUsagePerUserParameter = maxUsagePerUser.HasValue ?
                new ObjectParameter("MaxUsagePerUser", maxUsagePerUser) :
                new ObjectParameter("MaxUsagePerUser", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var updatedByUserIDParameter = updatedByUserID.HasValue ?
                new ObjectParameter("UpdatedByUserID", updatedByUserID) :
                new ObjectParameter("UpdatedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAA_Coupons_Update", couponIDParameter, nameParameter, descriptionParameter, axapterPromoNumberParameter, axapterPromoDescriptionParameter, couponCodeParameter, startDateParameter, endDateParameter, amountParameter, startQtyParameter, endQtyParameter, startPriceParameter, endPriceParameter, maxUsageParameter, maxUsagePerUserParameter, userIDParameter, roleIDParameter, updatedByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> TAA_GetCartTax(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("TAA_GetCartTax", cartIDParameter);
        }
    
        public virtual ObjectResult<TAA_GetCategories_Result> TAA_GetCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_GetCategories_Result>("TAA_GetCategories");
        }
    
        public virtual ObjectResult<TAA_GetProduct_Result> TAA_GetProduct(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_GetProduct_Result>("TAA_GetProduct", productIDParameter);
        }
    
        public virtual ObjectResult<TAA_GetProductSizes_Result> TAA_GetProductSizes(Nullable<int> productID)
        {
            var productIDParameter = productID.HasValue ?
                new ObjectParameter("ProductID", productID) :
                new ObjectParameter("ProductID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_GetProductSizes_Result>("TAA_GetProductSizes", productIDParameter);
        }
    
        public virtual ObjectResult<TAA_GetSliderCategories_Result> TAA_GetSliderCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_GetSliderCategories_Result>("TAA_GetSliderCategories");
        }
    
        public virtual ObjectResult<TAA_GetSubCategories_Result> TAA_GetSubCategories()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_GetSubCategories_Result>("TAA_GetSubCategories");
        }
    
        public virtual int TAA_RecalculateTAAShoppingCartPricing(Nullable<int> tAACartID, Nullable<int> userID)
        {
            var tAACartIDParameter = tAACartID.HasValue ?
                new ObjectParameter("TAACartID", tAACartID) :
                new ObjectParameter("TAACartID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAA_RecalculateTAAShoppingCartPricing", tAACartIDParameter, userIDParameter);
        }
    
        public virtual ObjectResult<TAA_ShoppingCartTotal_Result> TAA_ShoppingCartTotal(string cartID)
        {
            var cartIDParameter = cartID != null ?
                new ObjectParameter("CartID", cartID) :
                new ObjectParameter("CartID", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<TAA_ShoppingCartTotal_Result>("TAA_ShoppingCartTotal", cartIDParameter);
        }
    
        public virtual int TAA_UpdateShoppingCart(Nullable<int> recordID, Nullable<int> quantity, Nullable<decimal> unitCost, Nullable<decimal> tax, Nullable<decimal> tax2, Nullable<decimal> loyaltyDiscount)
        {
            var recordIDParameter = recordID.HasValue ?
                new ObjectParameter("RecordID", recordID) :
                new ObjectParameter("RecordID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var unitCostParameter = unitCost.HasValue ?
                new ObjectParameter("UnitCost", unitCost) :
                new ObjectParameter("UnitCost", typeof(decimal));
    
            var taxParameter = tax.HasValue ?
                new ObjectParameter("Tax", tax) :
                new ObjectParameter("Tax", typeof(decimal));
    
            var tax2Parameter = tax2.HasValue ?
                new ObjectParameter("Tax2", tax2) :
                new ObjectParameter("Tax2", typeof(decimal));
    
            var loyaltyDiscountParameter = loyaltyDiscount.HasValue ?
                new ObjectParameter("LoyaltyDiscount", loyaltyDiscount) :
                new ObjectParameter("LoyaltyDiscount", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAA_UpdateShoppingCart", recordIDParameter, quantityParameter, unitCostParameter, taxParameter, tax2Parameter, loyaltyDiscountParameter);
        }
    
        public virtual int TAA_UpdateShoppingCartSize(Nullable<int> tAACartID, Nullable<int> sizeID, Nullable<int> quantity, Nullable<int> userID)
        {
            var tAACartIDParameter = tAACartID.HasValue ?
                new ObjectParameter("TAACartID", tAACartID) :
                new ObjectParameter("TAACartID", typeof(int));
    
            var sizeIDParameter = sizeID.HasValue ?
                new ObjectParameter("SizeID", sizeID) :
                new ObjectParameter("SizeID", typeof(int));
    
            var quantityParameter = quantity.HasValue ?
                new ObjectParameter("Quantity", quantity) :
                new ObjectParameter("Quantity", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TAA_UpdateShoppingCartSize", tAACartIDParameter, sizeIDParameter, quantityParameter, userIDParameter);
        }
    
        public virtual ObjectResult<Nullable<bool>> UnRegisterAssembly(Nullable<int> packageID, string assemblyName)
        {
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var assemblyNameParameter = assemblyName != null ?
                new ObjectParameter("AssemblyName", assemblyName) :
                new ObjectParameter("AssemblyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<bool>>("UnRegisterAssembly", packageIDParameter, assemblyNameParameter);
        }
    
        public virtual int UpdateAffiliate(Nullable<int> affiliateId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<double> cPC, Nullable<double> cPA)
        {
            var affiliateIdParameter = affiliateId.HasValue ?
                new ObjectParameter("AffiliateId", affiliateId) :
                new ObjectParameter("AffiliateId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var cPCParameter = cPC.HasValue ?
                new ObjectParameter("CPC", cPC) :
                new ObjectParameter("CPC", typeof(double));
    
            var cPAParameter = cPA.HasValue ?
                new ObjectParameter("CPA", cPA) :
                new ObjectParameter("CPA", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAffiliate", affiliateIdParameter, startDateParameter, endDateParameter, cPCParameter, cPAParameter);
        }
    
        public virtual int UpdateAffiliateStats(Nullable<int> affiliateId, Nullable<int> clicks, Nullable<int> acquisitions)
        {
            var affiliateIdParameter = affiliateId.HasValue ?
                new ObjectParameter("AffiliateId", affiliateId) :
                new ObjectParameter("AffiliateId", typeof(int));
    
            var clicksParameter = clicks.HasValue ?
                new ObjectParameter("Clicks", clicks) :
                new ObjectParameter("Clicks", typeof(int));
    
            var acquisitionsParameter = acquisitions.HasValue ?
                new ObjectParameter("Acquisitions", acquisitions) :
                new ObjectParameter("Acquisitions", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAffiliateStats", affiliateIdParameter, clicksParameter, acquisitionsParameter);
        }
    
        public virtual int UpdateAnonymousUser(string userID, Nullable<int> portalID, Nullable<int> tabID, Nullable<System.DateTime> lastActiveDate)
        {
            var userIDParameter = userID != null ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(string));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var lastActiveDateParameter = lastActiveDate.HasValue ?
                new ObjectParameter("LastActiveDate", lastActiveDate) :
                new ObjectParameter("LastActiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAnonymousUser", userIDParameter, portalIDParameter, tabIDParameter, lastActiveDateParameter);
        }
    
        public virtual int UpdateAuthentication(Nullable<int> authenticationID, Nullable<int> packageID, string authenticationType, Nullable<bool> isEnabled, string settingsControlSrc, string loginControlSrc, string logoffControlSrc, Nullable<int> lastModifiedByUserID)
        {
            var authenticationIDParameter = authenticationID.HasValue ?
                new ObjectParameter("AuthenticationID", authenticationID) :
                new ObjectParameter("AuthenticationID", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var authenticationTypeParameter = authenticationType != null ?
                new ObjectParameter("AuthenticationType", authenticationType) :
                new ObjectParameter("AuthenticationType", typeof(string));
    
            var isEnabledParameter = isEnabled.HasValue ?
                new ObjectParameter("IsEnabled", isEnabled) :
                new ObjectParameter("IsEnabled", typeof(bool));
    
            var settingsControlSrcParameter = settingsControlSrc != null ?
                new ObjectParameter("SettingsControlSrc", settingsControlSrc) :
                new ObjectParameter("SettingsControlSrc", typeof(string));
    
            var loginControlSrcParameter = loginControlSrc != null ?
                new ObjectParameter("LoginControlSrc", loginControlSrc) :
                new ObjectParameter("LoginControlSrc", typeof(string));
    
            var logoffControlSrcParameter = logoffControlSrc != null ?
                new ObjectParameter("LogoffControlSrc", logoffControlSrc) :
                new ObjectParameter("LogoffControlSrc", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateAuthentication", authenticationIDParameter, packageIDParameter, authenticationTypeParameter, isEnabledParameter, settingsControlSrcParameter, loginControlSrcParameter, logoffControlSrcParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateBanner(Nullable<int> bannerId, string bannerName, string imageFile, string uRL, Nullable<int> impressions, Nullable<double> cPM, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, string userName, Nullable<int> bannerTypeId, string description, string groupName, Nullable<bool> criteria, Nullable<int> width, Nullable<int> height)
        {
            var bannerIdParameter = bannerId.HasValue ?
                new ObjectParameter("BannerId", bannerId) :
                new ObjectParameter("BannerId", typeof(int));
    
            var bannerNameParameter = bannerName != null ?
                new ObjectParameter("BannerName", bannerName) :
                new ObjectParameter("BannerName", typeof(string));
    
            var imageFileParameter = imageFile != null ?
                new ObjectParameter("ImageFile", imageFile) :
                new ObjectParameter("ImageFile", typeof(string));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var impressionsParameter = impressions.HasValue ?
                new ObjectParameter("Impressions", impressions) :
                new ObjectParameter("Impressions", typeof(int));
    
            var cPMParameter = cPM.HasValue ?
                new ObjectParameter("CPM", cPM) :
                new ObjectParameter("CPM", typeof(double));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var bannerTypeIdParameter = bannerTypeId.HasValue ?
                new ObjectParameter("BannerTypeId", bannerTypeId) :
                new ObjectParameter("BannerTypeId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var groupNameParameter = groupName != null ?
                new ObjectParameter("GroupName", groupName) :
                new ObjectParameter("GroupName", typeof(string));
    
            var criteriaParameter = criteria.HasValue ?
                new ObjectParameter("Criteria", criteria) :
                new ObjectParameter("Criteria", typeof(bool));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBanner", bannerIdParameter, bannerNameParameter, imageFileParameter, uRLParameter, impressionsParameter, cPMParameter, startDateParameter, endDateParameter, userNameParameter, bannerTypeIdParameter, descriptionParameter, groupNameParameter, criteriaParameter, widthParameter, heightParameter);
        }
    
        public virtual int UpdateBannerClickThrough(Nullable<int> bannerId, Nullable<int> vendorId)
        {
            var bannerIdParameter = bannerId.HasValue ?
                new ObjectParameter("BannerId", bannerId) :
                new ObjectParameter("BannerId", typeof(int));
    
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBannerClickThrough", bannerIdParameter, vendorIdParameter);
        }
    
        public virtual int UpdateBannerViews(Nullable<int> bannerId, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var bannerIdParameter = bannerId.HasValue ?
                new ObjectParameter("BannerId", bannerId) :
                new ObjectParameter("BannerId", typeof(int));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateBannerViews", bannerIdParameter, startDateParameter, endDateParameter);
        }
    
        public virtual int UpdateContentItem(Nullable<int> contentItemID, string content, Nullable<int> contentTypeID, Nullable<int> tabID, Nullable<int> moduleID, string contentKey, Nullable<bool> indexed, Nullable<int> lastModifiedByUserID)
        {
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var contentTypeIDParameter = contentTypeID.HasValue ?
                new ObjectParameter("ContentTypeID", contentTypeID) :
                new ObjectParameter("ContentTypeID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var contentKeyParameter = contentKey != null ?
                new ObjectParameter("ContentKey", contentKey) :
                new ObjectParameter("ContentKey", typeof(string));
    
            var indexedParameter = indexed.HasValue ?
                new ObjectParameter("Indexed", indexed) :
                new ObjectParameter("Indexed", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContentItem", contentItemIDParameter, contentParameter, contentTypeIDParameter, tabIDParameter, moduleIDParameter, contentKeyParameter, indexedParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateContentType(Nullable<int> contentTypeId, string contentType)
        {
            var contentTypeIdParameter = contentTypeId.HasValue ?
                new ObjectParameter("ContentTypeId", contentTypeId) :
                new ObjectParameter("ContentTypeId", typeof(int));
    
            var contentTypeParameter = contentType != null ?
                new ObjectParameter("ContentType", contentType) :
                new ObjectParameter("ContentType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateContentType", contentTypeIdParameter, contentTypeParameter);
        }
    
        public virtual int UpdateDatabaseVersion(Nullable<int> major, Nullable<int> minor, Nullable<int> build)
        {
            var majorParameter = major.HasValue ?
                new ObjectParameter("Major", major) :
                new ObjectParameter("Major", typeof(int));
    
            var minorParameter = minor.HasValue ?
                new ObjectParameter("Minor", minor) :
                new ObjectParameter("Minor", typeof(int));
    
            var buildParameter = build.HasValue ?
                new ObjectParameter("Build", build) :
                new ObjectParameter("Build", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDatabaseVersion", majorParameter, minorParameter, buildParameter);
        }
    
        public virtual int UpdateDatabaseVersionAndName(Nullable<int> major, Nullable<int> minor, Nullable<int> build, string name)
        {
            var majorParameter = major.HasValue ?
                new ObjectParameter("Major", major) :
                new ObjectParameter("Major", typeof(int));
    
            var minorParameter = minor.HasValue ?
                new ObjectParameter("Minor", minor) :
                new ObjectParameter("Minor", typeof(int));
    
            var buildParameter = build.HasValue ?
                new ObjectParameter("Build", build) :
                new ObjectParameter("Build", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDatabaseVersionAndName", majorParameter, minorParameter, buildParameter, nameParameter);
        }
    
        public virtual int UpdateDesktopModule(Nullable<int> desktopModuleId, Nullable<int> packageID, string moduleName, string folderName, string friendlyName, string description, string version, Nullable<bool> isPremium, Nullable<bool> isAdmin, string businessController, Nullable<int> supportedFeatures, string compatibleVersions, string dependencies, string permissions, Nullable<int> contentItemId, Nullable<int> lastModifiedByUserID)
        {
            var desktopModuleIdParameter = desktopModuleId.HasValue ?
                new ObjectParameter("DesktopModuleId", desktopModuleId) :
                new ObjectParameter("DesktopModuleId", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var moduleNameParameter = moduleName != null ?
                new ObjectParameter("ModuleName", moduleName) :
                new ObjectParameter("ModuleName", typeof(string));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var isPremiumParameter = isPremium.HasValue ?
                new ObjectParameter("IsPremium", isPremium) :
                new ObjectParameter("IsPremium", typeof(bool));
    
            var isAdminParameter = isAdmin.HasValue ?
                new ObjectParameter("IsAdmin", isAdmin) :
                new ObjectParameter("IsAdmin", typeof(bool));
    
            var businessControllerParameter = businessController != null ?
                new ObjectParameter("BusinessController", businessController) :
                new ObjectParameter("BusinessController", typeof(string));
    
            var supportedFeaturesParameter = supportedFeatures.HasValue ?
                new ObjectParameter("SupportedFeatures", supportedFeatures) :
                new ObjectParameter("SupportedFeatures", typeof(int));
    
            var compatibleVersionsParameter = compatibleVersions != null ?
                new ObjectParameter("CompatibleVersions", compatibleVersions) :
                new ObjectParameter("CompatibleVersions", typeof(string));
    
            var dependenciesParameter = dependencies != null ?
                new ObjectParameter("Dependencies", dependencies) :
                new ObjectParameter("Dependencies", typeof(string));
    
            var permissionsParameter = permissions != null ?
                new ObjectParameter("Permissions", permissions) :
                new ObjectParameter("Permissions", typeof(string));
    
            var contentItemIdParameter = contentItemId.HasValue ?
                new ObjectParameter("ContentItemId", contentItemId) :
                new ObjectParameter("ContentItemId", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDesktopModule", desktopModuleIdParameter, packageIDParameter, moduleNameParameter, folderNameParameter, friendlyNameParameter, descriptionParameter, versionParameter, isPremiumParameter, isAdminParameter, businessControllerParameter, supportedFeaturesParameter, compatibleVersionsParameter, dependenciesParameter, permissionsParameter, contentItemIdParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateDesktopModulePermission(Nullable<int> desktopModulePermissionID, Nullable<int> portalDesktopModuleID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> lastModifiedByUserID)
        {
            var desktopModulePermissionIDParameter = desktopModulePermissionID.HasValue ?
                new ObjectParameter("DesktopModulePermissionID", desktopModulePermissionID) :
                new ObjectParameter("DesktopModulePermissionID", typeof(int));
    
            var portalDesktopModuleIDParameter = portalDesktopModuleID.HasValue ?
                new ObjectParameter("PortalDesktopModuleID", portalDesktopModuleID) :
                new ObjectParameter("PortalDesktopModuleID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDesktopModulePermission", desktopModulePermissionIDParameter, portalDesktopModuleIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateEventLogConfig(Nullable<int> iD, string logTypeKey, Nullable<int> logTypePortalID, Nullable<bool> loggingIsActive, Nullable<int> keepMostRecent, Nullable<bool> emailNotificationIsActive, Nullable<int> notificationThreshold, Nullable<int> notificationThresholdTime, Nullable<int> notificationThresholdTimeType, string mailFromAddress, string mailToAddress)
        {
            var iDParameter = iD.HasValue ?
                new ObjectParameter("ID", iD) :
                new ObjectParameter("ID", typeof(int));
    
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            var logTypePortalIDParameter = logTypePortalID.HasValue ?
                new ObjectParameter("LogTypePortalID", logTypePortalID) :
                new ObjectParameter("LogTypePortalID", typeof(int));
    
            var loggingIsActiveParameter = loggingIsActive.HasValue ?
                new ObjectParameter("LoggingIsActive", loggingIsActive) :
                new ObjectParameter("LoggingIsActive", typeof(bool));
    
            var keepMostRecentParameter = keepMostRecent.HasValue ?
                new ObjectParameter("KeepMostRecent", keepMostRecent) :
                new ObjectParameter("KeepMostRecent", typeof(int));
    
            var emailNotificationIsActiveParameter = emailNotificationIsActive.HasValue ?
                new ObjectParameter("EmailNotificationIsActive", emailNotificationIsActive) :
                new ObjectParameter("EmailNotificationIsActive", typeof(bool));
    
            var notificationThresholdParameter = notificationThreshold.HasValue ?
                new ObjectParameter("NotificationThreshold", notificationThreshold) :
                new ObjectParameter("NotificationThreshold", typeof(int));
    
            var notificationThresholdTimeParameter = notificationThresholdTime.HasValue ?
                new ObjectParameter("NotificationThresholdTime", notificationThresholdTime) :
                new ObjectParameter("NotificationThresholdTime", typeof(int));
    
            var notificationThresholdTimeTypeParameter = notificationThresholdTimeType.HasValue ?
                new ObjectParameter("NotificationThresholdTimeType", notificationThresholdTimeType) :
                new ObjectParameter("NotificationThresholdTimeType", typeof(int));
    
            var mailFromAddressParameter = mailFromAddress != null ?
                new ObjectParameter("MailFromAddress", mailFromAddress) :
                new ObjectParameter("MailFromAddress", typeof(string));
    
            var mailToAddressParameter = mailToAddress != null ?
                new ObjectParameter("MailToAddress", mailToAddress) :
                new ObjectParameter("MailToAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEventLogConfig", iDParameter, logTypeKeyParameter, logTypePortalIDParameter, loggingIsActiveParameter, keepMostRecentParameter, emailNotificationIsActiveParameter, notificationThresholdParameter, notificationThresholdTimeParameter, notificationThresholdTimeTypeParameter, mailFromAddressParameter, mailToAddressParameter);
        }
    
        public virtual int UpdateEventLogPendingNotif(Nullable<int> logConfigID)
        {
            var logConfigIDParameter = logConfigID.HasValue ?
                new ObjectParameter("LogConfigID", logConfigID) :
                new ObjectParameter("LogConfigID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEventLogPendingNotif", logConfigIDParameter);
        }
    
        public virtual int UpdateEventLogType(string logTypeKey, string logTypeFriendlyName, string logTypeDescription, string logTypeOwner, string logTypeCSSClass)
        {
            var logTypeKeyParameter = logTypeKey != null ?
                new ObjectParameter("LogTypeKey", logTypeKey) :
                new ObjectParameter("LogTypeKey", typeof(string));
    
            var logTypeFriendlyNameParameter = logTypeFriendlyName != null ?
                new ObjectParameter("LogTypeFriendlyName", logTypeFriendlyName) :
                new ObjectParameter("LogTypeFriendlyName", typeof(string));
    
            var logTypeDescriptionParameter = logTypeDescription != null ?
                new ObjectParameter("LogTypeDescription", logTypeDescription) :
                new ObjectParameter("LogTypeDescription", typeof(string));
    
            var logTypeOwnerParameter = logTypeOwner != null ?
                new ObjectParameter("LogTypeOwner", logTypeOwner) :
                new ObjectParameter("LogTypeOwner", typeof(string));
    
            var logTypeCSSClassParameter = logTypeCSSClass != null ?
                new ObjectParameter("LogTypeCSSClass", logTypeCSSClass) :
                new ObjectParameter("LogTypeCSSClass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateEventLogType", logTypeKeyParameter, logTypeFriendlyNameParameter, logTypeDescriptionParameter, logTypeOwnerParameter, logTypeCSSClassParameter);
        }
    
        public virtual int UpdateFile(Nullable<int> fileId, Nullable<System.Guid> versionGuid, string fileName, string extension, Nullable<int> size, Nullable<int> width, Nullable<int> height, string contentType, string folder, Nullable<int> folderID, Nullable<int> lastModifiedByUserID, string hash)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var fileNameParameter = fileName != null ?
                new ObjectParameter("FileName", fileName) :
                new ObjectParameter("FileName", typeof(string));
    
            var extensionParameter = extension != null ?
                new ObjectParameter("Extension", extension) :
                new ObjectParameter("Extension", typeof(string));
    
            var sizeParameter = size.HasValue ?
                new ObjectParameter("Size", size) :
                new ObjectParameter("Size", typeof(int));
    
            var widthParameter = width.HasValue ?
                new ObjectParameter("Width", width) :
                new ObjectParameter("Width", typeof(int));
    
            var heightParameter = height.HasValue ?
                new ObjectParameter("Height", height) :
                new ObjectParameter("Height", typeof(int));
    
            var contentTypeParameter = contentType != null ?
                new ObjectParameter("ContentType", contentType) :
                new ObjectParameter("ContentType", typeof(string));
    
            var folderParameter = folder != null ?
                new ObjectParameter("Folder", folder) :
                new ObjectParameter("Folder", typeof(string));
    
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            var hashParameter = hash != null ?
                new ObjectParameter("Hash", hash) :
                new ObjectParameter("Hash", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFile", fileIdParameter, versionGuidParameter, fileNameParameter, extensionParameter, sizeParameter, widthParameter, heightParameter, contentTypeParameter, folderParameter, folderIDParameter, lastModifiedByUserIDParameter, hashParameter);
        }
    
        public virtual int UpdateFileContent(Nullable<int> fileId, byte[] content)
        {
            var fileIdParameter = fileId.HasValue ?
                new ObjectParameter("FileId", fileId) :
                new ObjectParameter("FileId", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFileContent", fileIdParameter, contentParameter);
        }
    
        public virtual int UpdateFileVersion(Nullable<int> fileID, Nullable<System.Guid> versionGuid)
        {
            var fileIDParameter = fileID.HasValue ?
                new ObjectParameter("FileID", fileID) :
                new ObjectParameter("FileID", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFileVersion", fileIDParameter, versionGuidParameter);
        }
    
        public virtual int UpdateFolder(Nullable<int> portalID, Nullable<System.Guid> versionGuid, Nullable<int> folderID, string folderPath, Nullable<int> storageLocation, Nullable<bool> isProtected, Nullable<bool> isCached, Nullable<System.DateTime> lastUpdated, Nullable<int> lastModifiedByUserID, Nullable<int> folderMappingID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            var folderPathParameter = folderPath != null ?
                new ObjectParameter("FolderPath", folderPath) :
                new ObjectParameter("FolderPath", typeof(string));
    
            var storageLocationParameter = storageLocation.HasValue ?
                new ObjectParameter("StorageLocation", storageLocation) :
                new ObjectParameter("StorageLocation", typeof(int));
    
            var isProtectedParameter = isProtected.HasValue ?
                new ObjectParameter("IsProtected", isProtected) :
                new ObjectParameter("IsProtected", typeof(bool));
    
            var isCachedParameter = isCached.HasValue ?
                new ObjectParameter("IsCached", isCached) :
                new ObjectParameter("IsCached", typeof(bool));
    
            var lastUpdatedParameter = lastUpdated.HasValue ?
                new ObjectParameter("LastUpdated", lastUpdated) :
                new ObjectParameter("LastUpdated", typeof(System.DateTime));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFolder", portalIDParameter, versionGuidParameter, folderIDParameter, folderPathParameter, storageLocationParameter, isProtectedParameter, isCachedParameter, lastUpdatedParameter, lastModifiedByUserIDParameter, folderMappingIDParameter);
        }
    
        public virtual int UpdateFolderMapping(Nullable<int> folderMappingID, string mappingName, Nullable<int> priority, Nullable<int> lastModifiedByUserID)
        {
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            var mappingNameParameter = mappingName != null ?
                new ObjectParameter("MappingName", mappingName) :
                new ObjectParameter("MappingName", typeof(string));
    
            var priorityParameter = priority.HasValue ?
                new ObjectParameter("Priority", priority) :
                new ObjectParameter("Priority", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFolderMapping", folderMappingIDParameter, mappingNameParameter, priorityParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateFolderMappingsSetting(Nullable<int> folderMappingID, string settingName, string settingValue, Nullable<int> lastModifiedByUserID)
        {
            var folderMappingIDParameter = folderMappingID.HasValue ?
                new ObjectParameter("FolderMappingID", folderMappingID) :
                new ObjectParameter("FolderMappingID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFolderMappingsSetting", folderMappingIDParameter, settingNameParameter, settingValueParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateFolderPermission(Nullable<int> folderPermissionID, Nullable<int> folderID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> lastModifiedByUserID)
        {
            var folderPermissionIDParameter = folderPermissionID.HasValue ?
                new ObjectParameter("FolderPermissionID", folderPermissionID) :
                new ObjectParameter("FolderPermissionID", typeof(int));
    
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFolderPermission", folderPermissionIDParameter, folderIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateFolderVersion(Nullable<int> folderID, Nullable<System.Guid> versionGuid)
        {
            var folderIDParameter = folderID.HasValue ?
                new ObjectParameter("FolderID", folderID) :
                new ObjectParameter("FolderID", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateFolderVersion", folderIDParameter, versionGuidParameter);
        }
    
        public virtual int UpdateHeirarchicalTerm(Nullable<int> termID, Nullable<int> vocabularyID, Nullable<int> parentTermID, string name, string description, Nullable<int> weight, Nullable<int> lastModifiedByUserID)
        {
            var termIDParameter = termID.HasValue ?
                new ObjectParameter("TermID", termID) :
                new ObjectParameter("TermID", typeof(int));
    
            var vocabularyIDParameter = vocabularyID.HasValue ?
                new ObjectParameter("VocabularyID", vocabularyID) :
                new ObjectParameter("VocabularyID", typeof(int));
    
            var parentTermIDParameter = parentTermID.HasValue ?
                new ObjectParameter("ParentTermID", parentTermID) :
                new ObjectParameter("ParentTermID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHeirarchicalTerm", termIDParameter, vocabularyIDParameter, parentTermIDParameter, nameParameter, descriptionParameter, weightParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateHostSetting(string settingName, string settingValue, Nullable<bool> settingIsSecure, Nullable<int> lastModifiedByUserID)
        {
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var settingIsSecureParameter = settingIsSecure.HasValue ?
                new ObjectParameter("SettingIsSecure", settingIsSecure) :
                new ObjectParameter("SettingIsSecure", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHostSetting", settingNameParameter, settingValueParameter, settingIsSecureParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateHtmlText(Nullable<int> itemID, string content, string summary, Nullable<int> stateID, Nullable<bool> isPublished, Nullable<int> userID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(int));
    
            var contentParameter = content != null ?
                new ObjectParameter("Content", content) :
                new ObjectParameter("Content", typeof(string));
    
            var summaryParameter = summary != null ?
                new ObjectParameter("Summary", summary) :
                new ObjectParameter("Summary", typeof(string));
    
            var stateIDParameter = stateID.HasValue ?
                new ObjectParameter("StateID", stateID) :
                new ObjectParameter("StateID", typeof(int));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateHtmlText", itemIDParameter, contentParameter, summaryParameter, stateIDParameter, isPublishedParameter, userIDParameter);
        }
    
        public virtual int UpdateLanguage(Nullable<int> languageID, string cultureCode, string cultureName, string fallbackCulture, Nullable<int> lastModifiedByUserID)
        {
            var languageIDParameter = languageID.HasValue ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            var cultureNameParameter = cultureName != null ?
                new ObjectParameter("CultureName", cultureName) :
                new ObjectParameter("CultureName", typeof(string));
    
            var fallbackCultureParameter = fallbackCulture != null ?
                new ObjectParameter("FallbackCulture", fallbackCulture) :
                new ObjectParameter("FallbackCulture", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLanguage", languageIDParameter, cultureCodeParameter, cultureNameParameter, fallbackCultureParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateLanguagePack(Nullable<int> languagePackID, Nullable<int> packageID, Nullable<int> languageID, Nullable<int> dependentPackageID, Nullable<int> lastModifiedByUserID)
        {
            var languagePackIDParameter = languagePackID.HasValue ?
                new ObjectParameter("LanguagePackID", languagePackID) :
                new ObjectParameter("LanguagePackID", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var languageIDParameter = languageID.HasValue ?
                new ObjectParameter("LanguageID", languageID) :
                new ObjectParameter("LanguageID", typeof(int));
    
            var dependentPackageIDParameter = dependentPackageID.HasValue ?
                new ObjectParameter("DependentPackageID", dependentPackageID) :
                new ObjectParameter("DependentPackageID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLanguagePack", languagePackIDParameter, packageIDParameter, languageIDParameter, dependentPackageIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateListEntry(Nullable<int> entryID, string value, string text, string description, Nullable<int> lastModifiedByUserID)
        {
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(int));
    
            var valueParameter = value != null ?
                new ObjectParameter("Value", value) :
                new ObjectParameter("Value", typeof(string));
    
            var textParameter = text != null ?
                new ObjectParameter("Text", text) :
                new ObjectParameter("Text", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateListEntry", entryIDParameter, valueParameter, textParameter, descriptionParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateListSortOrder(Nullable<int> entryID, Nullable<bool> moveUp)
        {
            var entryIDParameter = entryID.HasValue ?
                new ObjectParameter("EntryID", entryID) :
                new ObjectParameter("EntryID", typeof(int));
    
            var moveUpParameter = moveUp.HasValue ?
                new ObjectParameter("MoveUp", moveUp) :
                new ObjectParameter("MoveUp", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateListSortOrder", entryIDParameter, moveUpParameter);
        }
    
        public virtual int UpdateModule(Nullable<int> moduleId, Nullable<int> contentItemID, Nullable<bool> allTabs, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<bool> inheritViewPermissions, Nullable<bool> isDeleted, Nullable<int> lastModifiedByUserID)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            var allTabsParameter = allTabs.HasValue ?
                new ObjectParameter("AllTabs", allTabs) :
                new ObjectParameter("AllTabs", typeof(bool));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var inheritViewPermissionsParameter = inheritViewPermissions.HasValue ?
                new ObjectParameter("InheritViewPermissions", inheritViewPermissions) :
                new ObjectParameter("InheritViewPermissions", typeof(bool));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModule", moduleIdParameter, contentItemIDParameter, allTabsParameter, startDateParameter, endDateParameter, inheritViewPermissionsParameter, isDeletedParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateModuleControl(Nullable<int> moduleControlId, Nullable<int> moduleDefID, string controlKey, string controlTitle, string controlSrc, string iconFile, Nullable<int> controlType, Nullable<int> viewOrder, string helpUrl, Nullable<bool> supportsPartialRendering, Nullable<bool> supportsPopUps, Nullable<int> lastModifiedByUserID)
        {
            var moduleControlIdParameter = moduleControlId.HasValue ?
                new ObjectParameter("ModuleControlId", moduleControlId) :
                new ObjectParameter("ModuleControlId", typeof(int));
    
            var moduleDefIDParameter = moduleDefID.HasValue ?
                new ObjectParameter("ModuleDefID", moduleDefID) :
                new ObjectParameter("ModuleDefID", typeof(int));
    
            var controlKeyParameter = controlKey != null ?
                new ObjectParameter("ControlKey", controlKey) :
                new ObjectParameter("ControlKey", typeof(string));
    
            var controlTitleParameter = controlTitle != null ?
                new ObjectParameter("ControlTitle", controlTitle) :
                new ObjectParameter("ControlTitle", typeof(string));
    
            var controlSrcParameter = controlSrc != null ?
                new ObjectParameter("ControlSrc", controlSrc) :
                new ObjectParameter("ControlSrc", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var controlTypeParameter = controlType.HasValue ?
                new ObjectParameter("ControlType", controlType) :
                new ObjectParameter("ControlType", typeof(int));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var helpUrlParameter = helpUrl != null ?
                new ObjectParameter("HelpUrl", helpUrl) :
                new ObjectParameter("HelpUrl", typeof(string));
    
            var supportsPartialRenderingParameter = supportsPartialRendering.HasValue ?
                new ObjectParameter("SupportsPartialRendering", supportsPartialRendering) :
                new ObjectParameter("SupportsPartialRendering", typeof(bool));
    
            var supportsPopUpsParameter = supportsPopUps.HasValue ?
                new ObjectParameter("SupportsPopUps", supportsPopUps) :
                new ObjectParameter("SupportsPopUps", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModuleControl", moduleControlIdParameter, moduleDefIDParameter, controlKeyParameter, controlTitleParameter, controlSrcParameter, iconFileParameter, controlTypeParameter, viewOrderParameter, helpUrlParameter, supportsPartialRenderingParameter, supportsPopUpsParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateModuleDefinition(Nullable<int> moduleDefId, string friendlyName, Nullable<int> defaultCacheTime, Nullable<int> lastModifiedByUserID)
        {
            var moduleDefIdParameter = moduleDefId.HasValue ?
                new ObjectParameter("ModuleDefId", moduleDefId) :
                new ObjectParameter("ModuleDefId", typeof(int));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var defaultCacheTimeParameter = defaultCacheTime.HasValue ?
                new ObjectParameter("DefaultCacheTime", defaultCacheTime) :
                new ObjectParameter("DefaultCacheTime", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModuleDefinition", moduleDefIdParameter, friendlyNameParameter, defaultCacheTimeParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateModuleLastContentModifiedOnDate(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModuleLastContentModifiedOnDate", moduleIDParameter);
        }
    
        public virtual int UpdateModuleOrder(Nullable<int> tabId, Nullable<int> moduleId, Nullable<int> moduleOrder, string paneName)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var moduleOrderParameter = moduleOrder.HasValue ?
                new ObjectParameter("ModuleOrder", moduleOrder) :
                new ObjectParameter("ModuleOrder", typeof(int));
    
            var paneNameParameter = paneName != null ?
                new ObjectParameter("PaneName", paneName) :
                new ObjectParameter("PaneName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModuleOrder", tabIdParameter, moduleIdParameter, moduleOrderParameter, paneNameParameter);
        }
    
        public virtual int UpdateModulePermission(Nullable<int> modulePermissionID, Nullable<int> moduleID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> lastModifiedByUserID)
        {
            var modulePermissionIDParameter = modulePermissionID.HasValue ?
                new ObjectParameter("ModulePermissionID", modulePermissionID) :
                new ObjectParameter("ModulePermissionID", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModulePermission", modulePermissionIDParameter, moduleIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateModuleSetting(Nullable<int> moduleId, string settingName, string settingValue, Nullable<int> lastModifiedByUserID)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateModuleSetting", moduleIdParameter, settingNameParameter, settingValueParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateOnlineUser(Nullable<int> userID, Nullable<int> portalID, Nullable<int> tabID, Nullable<System.DateTime> lastActiveDate)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var lastActiveDateParameter = lastActiveDate.HasValue ?
                new ObjectParameter("LastActiveDate", lastActiveDate) :
                new ObjectParameter("LastActiveDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateOnlineUser", userIDParameter, portalIDParameter, tabIDParameter, lastActiveDateParameter);
        }
    
        public virtual int UpdatePackage(Nullable<int> portalID, string name, string friendlyName, string description, string packageType, string version, string license, string manifest, string owner, string organization, string url, string email, string releaseNotes, Nullable<bool> isSystemPackage, Nullable<int> lastModifiedByUserID, string folderName, string iconFile)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var packageTypeParameter = packageType != null ?
                new ObjectParameter("PackageType", packageType) :
                new ObjectParameter("PackageType", typeof(string));
    
            var versionParameter = version != null ?
                new ObjectParameter("Version", version) :
                new ObjectParameter("Version", typeof(string));
    
            var licenseParameter = license != null ?
                new ObjectParameter("License", license) :
                new ObjectParameter("License", typeof(string));
    
            var manifestParameter = manifest != null ?
                new ObjectParameter("Manifest", manifest) :
                new ObjectParameter("Manifest", typeof(string));
    
            var ownerParameter = owner != null ?
                new ObjectParameter("Owner", owner) :
                new ObjectParameter("Owner", typeof(string));
    
            var organizationParameter = organization != null ?
                new ObjectParameter("Organization", organization) :
                new ObjectParameter("Organization", typeof(string));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var releaseNotesParameter = releaseNotes != null ?
                new ObjectParameter("ReleaseNotes", releaseNotes) :
                new ObjectParameter("ReleaseNotes", typeof(string));
    
            var isSystemPackageParameter = isSystemPackage.HasValue ?
                new ObjectParameter("IsSystemPackage", isSystemPackage) :
                new ObjectParameter("IsSystemPackage", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            var folderNameParameter = folderName != null ?
                new ObjectParameter("FolderName", folderName) :
                new ObjectParameter("FolderName", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePackage", portalIDParameter, nameParameter, friendlyNameParameter, descriptionParameter, packageTypeParameter, versionParameter, licenseParameter, manifestParameter, ownerParameter, organizationParameter, urlParameter, emailParameter, releaseNotesParameter, isSystemPackageParameter, lastModifiedByUserIDParameter, folderNameParameter, iconFileParameter);
        }
    
        public virtual int UpdatePermission(Nullable<int> permissionID, string permissionCode, Nullable<int> moduleDefID, string permissionKey, string permissionName, Nullable<int> lastModifiedByUserID)
        {
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var permissionCodeParameter = permissionCode != null ?
                new ObjectParameter("PermissionCode", permissionCode) :
                new ObjectParameter("PermissionCode", typeof(string));
    
            var moduleDefIDParameter = moduleDefID.HasValue ?
                new ObjectParameter("ModuleDefID", moduleDefID) :
                new ObjectParameter("ModuleDefID", typeof(int));
    
            var permissionKeyParameter = permissionKey != null ?
                new ObjectParameter("PermissionKey", permissionKey) :
                new ObjectParameter("PermissionKey", typeof(string));
    
            var permissionNameParameter = permissionName != null ?
                new ObjectParameter("PermissionName", permissionName) :
                new ObjectParameter("PermissionName", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePermission", permissionIDParameter, permissionCodeParameter, moduleDefIDParameter, permissionKeyParameter, permissionNameParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdatePortalAlias(Nullable<int> portalAliasID, Nullable<int> portalID, string hTTPAlias, Nullable<int> lastModifiedByUserID)
        {
            var portalAliasIDParameter = portalAliasID.HasValue ?
                new ObjectParameter("PortalAliasID", portalAliasID) :
                new ObjectParameter("PortalAliasID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var hTTPAliasParameter = hTTPAlias != null ?
                new ObjectParameter("HTTPAlias", hTTPAlias) :
                new ObjectParameter("HTTPAlias", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalAlias", portalAliasIDParameter, portalIDParameter, hTTPAliasParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdatePortalAliasOnInstall(string portalAlias, Nullable<int> lastModifiedByUserID)
        {
            var portalAliasParameter = portalAlias != null ?
                new ObjectParameter("PortalAlias", portalAlias) :
                new ObjectParameter("PortalAlias", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalAliasOnInstall", portalAliasParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdatePortalDefaultLanguage(Nullable<int> portalId, string cultureCode)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalDefaultLanguage", portalIdParameter, cultureCodeParameter);
        }
    
        public virtual int UpdatePortalGroup(Nullable<int> portalGroupID, string portalGroupName, string portalGroupDescription, string authenticationDomain, Nullable<int> lastModifiedByUserID)
        {
            var portalGroupIDParameter = portalGroupID.HasValue ?
                new ObjectParameter("PortalGroupID", portalGroupID) :
                new ObjectParameter("PortalGroupID", typeof(int));
    
            var portalGroupNameParameter = portalGroupName != null ?
                new ObjectParameter("PortalGroupName", portalGroupName) :
                new ObjectParameter("PortalGroupName", typeof(string));
    
            var portalGroupDescriptionParameter = portalGroupDescription != null ?
                new ObjectParameter("PortalGroupDescription", portalGroupDescription) :
                new ObjectParameter("PortalGroupDescription", typeof(string));
    
            var authenticationDomainParameter = authenticationDomain != null ?
                new ObjectParameter("AuthenticationDomain", authenticationDomain) :
                new ObjectParameter("AuthenticationDomain", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalGroup", portalGroupIDParameter, portalGroupNameParameter, portalGroupDescriptionParameter, authenticationDomainParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdatePortalInfo(Nullable<int> portalID, Nullable<int> portalGroupID, string portalName, string logoFile, string footerText, Nullable<System.DateTime> expiryDate, Nullable<int> userRegistration, Nullable<int> bannerAdvertising, string currency, Nullable<int> administratorId, Nullable<decimal> hostFee, Nullable<int> hostSpace, Nullable<int> pageQuota, Nullable<int> userQuota, string paymentProcessor, string processorUserId, string processorPassword, string description, string keyWords, string backgroundFile, Nullable<int> siteLogHistory, Nullable<int> splashTabId, Nullable<int> homeTabId, Nullable<int> loginTabId, Nullable<int> registerTabId, Nullable<int> userTabId, Nullable<int> searchTabId, string defaultLanguage, string homeDirectory, Nullable<int> lastModifiedByUserID, string cultureCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var portalGroupIDParameter = portalGroupID.HasValue ?
                new ObjectParameter("PortalGroupID", portalGroupID) :
                new ObjectParameter("PortalGroupID", typeof(int));
    
            var portalNameParameter = portalName != null ?
                new ObjectParameter("PortalName", portalName) :
                new ObjectParameter("PortalName", typeof(string));
    
            var logoFileParameter = logoFile != null ?
                new ObjectParameter("LogoFile", logoFile) :
                new ObjectParameter("LogoFile", typeof(string));
    
            var footerTextParameter = footerText != null ?
                new ObjectParameter("FooterText", footerText) :
                new ObjectParameter("FooterText", typeof(string));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var userRegistrationParameter = userRegistration.HasValue ?
                new ObjectParameter("UserRegistration", userRegistration) :
                new ObjectParameter("UserRegistration", typeof(int));
    
            var bannerAdvertisingParameter = bannerAdvertising.HasValue ?
                new ObjectParameter("BannerAdvertising", bannerAdvertising) :
                new ObjectParameter("BannerAdvertising", typeof(int));
    
            var currencyParameter = currency != null ?
                new ObjectParameter("Currency", currency) :
                new ObjectParameter("Currency", typeof(string));
    
            var administratorIdParameter = administratorId.HasValue ?
                new ObjectParameter("AdministratorId", administratorId) :
                new ObjectParameter("AdministratorId", typeof(int));
    
            var hostFeeParameter = hostFee.HasValue ?
                new ObjectParameter("HostFee", hostFee) :
                new ObjectParameter("HostFee", typeof(decimal));
    
            var hostSpaceParameter = hostSpace.HasValue ?
                new ObjectParameter("HostSpace", hostSpace) :
                new ObjectParameter("HostSpace", typeof(int));
    
            var pageQuotaParameter = pageQuota.HasValue ?
                new ObjectParameter("PageQuota", pageQuota) :
                new ObjectParameter("PageQuota", typeof(int));
    
            var userQuotaParameter = userQuota.HasValue ?
                new ObjectParameter("UserQuota", userQuota) :
                new ObjectParameter("UserQuota", typeof(int));
    
            var paymentProcessorParameter = paymentProcessor != null ?
                new ObjectParameter("PaymentProcessor", paymentProcessor) :
                new ObjectParameter("PaymentProcessor", typeof(string));
    
            var processorUserIdParameter = processorUserId != null ?
                new ObjectParameter("ProcessorUserId", processorUserId) :
                new ObjectParameter("ProcessorUserId", typeof(string));
    
            var processorPasswordParameter = processorPassword != null ?
                new ObjectParameter("ProcessorPassword", processorPassword) :
                new ObjectParameter("ProcessorPassword", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var backgroundFileParameter = backgroundFile != null ?
                new ObjectParameter("BackgroundFile", backgroundFile) :
                new ObjectParameter("BackgroundFile", typeof(string));
    
            var siteLogHistoryParameter = siteLogHistory.HasValue ?
                new ObjectParameter("SiteLogHistory", siteLogHistory) :
                new ObjectParameter("SiteLogHistory", typeof(int));
    
            var splashTabIdParameter = splashTabId.HasValue ?
                new ObjectParameter("SplashTabId", splashTabId) :
                new ObjectParameter("SplashTabId", typeof(int));
    
            var homeTabIdParameter = homeTabId.HasValue ?
                new ObjectParameter("HomeTabId", homeTabId) :
                new ObjectParameter("HomeTabId", typeof(int));
    
            var loginTabIdParameter = loginTabId.HasValue ?
                new ObjectParameter("LoginTabId", loginTabId) :
                new ObjectParameter("LoginTabId", typeof(int));
    
            var registerTabIdParameter = registerTabId.HasValue ?
                new ObjectParameter("RegisterTabId", registerTabId) :
                new ObjectParameter("RegisterTabId", typeof(int));
    
            var userTabIdParameter = userTabId.HasValue ?
                new ObjectParameter("UserTabId", userTabId) :
                new ObjectParameter("UserTabId", typeof(int));
    
            var searchTabIdParameter = searchTabId.HasValue ?
                new ObjectParameter("SearchTabId", searchTabId) :
                new ObjectParameter("SearchTabId", typeof(int));
    
            var defaultLanguageParameter = defaultLanguage != null ?
                new ObjectParameter("DefaultLanguage", defaultLanguage) :
                new ObjectParameter("DefaultLanguage", typeof(string));
    
            var homeDirectoryParameter = homeDirectory != null ?
                new ObjectParameter("HomeDirectory", homeDirectory) :
                new ObjectParameter("HomeDirectory", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalInfo", portalIDParameter, portalGroupIDParameter, portalNameParameter, logoFileParameter, footerTextParameter, expiryDateParameter, userRegistrationParameter, bannerAdvertisingParameter, currencyParameter, administratorIdParameter, hostFeeParameter, hostSpaceParameter, pageQuotaParameter, userQuotaParameter, paymentProcessorParameter, processorUserIdParameter, processorPasswordParameter, descriptionParameter, keyWordsParameter, backgroundFileParameter, siteLogHistoryParameter, splashTabIdParameter, homeTabIdParameter, loginTabIdParameter, registerTabIdParameter, userTabIdParameter, searchTabIdParameter, defaultLanguageParameter, homeDirectoryParameter, lastModifiedByUserIDParameter, cultureCodeParameter);
        }
    
        public virtual int UpdatePortalLanguage(Nullable<int> portalId, Nullable<int> languageId, Nullable<bool> isPublished, Nullable<int> lastModifiedByUserID)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var languageIdParameter = languageId.HasValue ?
                new ObjectParameter("LanguageId", languageId) :
                new ObjectParameter("LanguageId", typeof(int));
    
            var isPublishedParameter = isPublished.HasValue ?
                new ObjectParameter("IsPublished", isPublished) :
                new ObjectParameter("IsPublished", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalLanguage", portalIdParameter, languageIdParameter, isPublishedParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdatePortalSetting(Nullable<int> portalID, string settingName, string settingValue, Nullable<int> userID, string cultureCode)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalSetting", portalIDParameter, settingNameParameter, settingValueParameter, userIDParameter, cultureCodeParameter);
        }
    
        public virtual int UpdatePortalSetup(Nullable<int> portalId, Nullable<int> administratorId, Nullable<int> administratorRoleId, Nullable<int> registeredRoleId, Nullable<int> splashTabId, Nullable<int> homeTabId, Nullable<int> loginTabId, Nullable<int> registerTabId, Nullable<int> userTabId, Nullable<int> searchTabId, Nullable<int> adminTabId, string cultureCode)
        {
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var administratorIdParameter = administratorId.HasValue ?
                new ObjectParameter("AdministratorId", administratorId) :
                new ObjectParameter("AdministratorId", typeof(int));
    
            var administratorRoleIdParameter = administratorRoleId.HasValue ?
                new ObjectParameter("AdministratorRoleId", administratorRoleId) :
                new ObjectParameter("AdministratorRoleId", typeof(int));
    
            var registeredRoleIdParameter = registeredRoleId.HasValue ?
                new ObjectParameter("RegisteredRoleId", registeredRoleId) :
                new ObjectParameter("RegisteredRoleId", typeof(int));
    
            var splashTabIdParameter = splashTabId.HasValue ?
                new ObjectParameter("SplashTabId", splashTabId) :
                new ObjectParameter("SplashTabId", typeof(int));
    
            var homeTabIdParameter = homeTabId.HasValue ?
                new ObjectParameter("HomeTabId", homeTabId) :
                new ObjectParameter("HomeTabId", typeof(int));
    
            var loginTabIdParameter = loginTabId.HasValue ?
                new ObjectParameter("LoginTabId", loginTabId) :
                new ObjectParameter("LoginTabId", typeof(int));
    
            var registerTabIdParameter = registerTabId.HasValue ?
                new ObjectParameter("RegisterTabId", registerTabId) :
                new ObjectParameter("RegisterTabId", typeof(int));
    
            var userTabIdParameter = userTabId.HasValue ?
                new ObjectParameter("UserTabId", userTabId) :
                new ObjectParameter("UserTabId", typeof(int));
    
            var searchTabIdParameter = searchTabId.HasValue ?
                new ObjectParameter("SearchTabId", searchTabId) :
                new ObjectParameter("SearchTabId", typeof(int));
    
            var adminTabIdParameter = adminTabId.HasValue ?
                new ObjectParameter("AdminTabId", adminTabId) :
                new ObjectParameter("AdminTabId", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePortalSetup", portalIdParameter, administratorIdParameter, administratorRoleIdParameter, registeredRoleIdParameter, splashTabIdParameter, homeTabIdParameter, loginTabIdParameter, registerTabIdParameter, userTabIdParameter, searchTabIdParameter, adminTabIdParameter, cultureCodeParameter);
        }
    
        public virtual int UpdateProfile(Nullable<int> userID, Nullable<int> portalID, string profileData)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var profileDataParameter = profileData != null ?
                new ObjectParameter("ProfileData", profileData) :
                new ObjectParameter("ProfileData", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateProfile", userIDParameter, portalIDParameter, profileDataParameter);
        }
    
        public virtual int UpdatePropertyDefinition(Nullable<int> propertyDefinitionId, Nullable<int> dataType, string defaultValue, string propertyCategory, string propertyName, Nullable<bool> required, string validationExpression, Nullable<int> viewOrder, Nullable<bool> visible, Nullable<int> length, Nullable<int> defaultVisibility, Nullable<int> lastModifiedByUserID)
        {
            var propertyDefinitionIdParameter = propertyDefinitionId.HasValue ?
                new ObjectParameter("PropertyDefinitionId", propertyDefinitionId) :
                new ObjectParameter("PropertyDefinitionId", typeof(int));
    
            var dataTypeParameter = dataType.HasValue ?
                new ObjectParameter("DataType", dataType) :
                new ObjectParameter("DataType", typeof(int));
    
            var defaultValueParameter = defaultValue != null ?
                new ObjectParameter("DefaultValue", defaultValue) :
                new ObjectParameter("DefaultValue", typeof(string));
    
            var propertyCategoryParameter = propertyCategory != null ?
                new ObjectParameter("PropertyCategory", propertyCategory) :
                new ObjectParameter("PropertyCategory", typeof(string));
    
            var propertyNameParameter = propertyName != null ?
                new ObjectParameter("PropertyName", propertyName) :
                new ObjectParameter("PropertyName", typeof(string));
    
            var requiredParameter = required.HasValue ?
                new ObjectParameter("Required", required) :
                new ObjectParameter("Required", typeof(bool));
    
            var validationExpressionParameter = validationExpression != null ?
                new ObjectParameter("ValidationExpression", validationExpression) :
                new ObjectParameter("ValidationExpression", typeof(string));
    
            var viewOrderParameter = viewOrder.HasValue ?
                new ObjectParameter("ViewOrder", viewOrder) :
                new ObjectParameter("ViewOrder", typeof(int));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(bool));
    
            var lengthParameter = length.HasValue ?
                new ObjectParameter("Length", length) :
                new ObjectParameter("Length", typeof(int));
    
            var defaultVisibilityParameter = defaultVisibility.HasValue ?
                new ObjectParameter("DefaultVisibility", defaultVisibility) :
                new ObjectParameter("DefaultVisibility", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdatePropertyDefinition", propertyDefinitionIdParameter, dataTypeParameter, defaultValueParameter, propertyCategoryParameter, propertyNameParameter, requiredParameter, validationExpressionParameter, viewOrderParameter, visibleParameter, lengthParameter, defaultVisibilityParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateRole(Nullable<int> roleId, Nullable<int> roleGroupId, string description, Nullable<decimal> serviceFee, Nullable<int> billingPeriod, string billingFrequency, Nullable<decimal> trialFee, Nullable<int> trialPeriod, string trialFrequency, Nullable<bool> isPublic, Nullable<bool> autoAssignment, string rSVPCode, string iconFile, Nullable<int> lastModifiedByUserID)
        {
            var roleIdParameter = roleId.HasValue ?
                new ObjectParameter("RoleId", roleId) :
                new ObjectParameter("RoleId", typeof(int));
    
            var roleGroupIdParameter = roleGroupId.HasValue ?
                new ObjectParameter("RoleGroupId", roleGroupId) :
                new ObjectParameter("RoleGroupId", typeof(int));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var serviceFeeParameter = serviceFee.HasValue ?
                new ObjectParameter("ServiceFee", serviceFee) :
                new ObjectParameter("ServiceFee", typeof(decimal));
    
            var billingPeriodParameter = billingPeriod.HasValue ?
                new ObjectParameter("BillingPeriod", billingPeriod) :
                new ObjectParameter("BillingPeriod", typeof(int));
    
            var billingFrequencyParameter = billingFrequency != null ?
                new ObjectParameter("BillingFrequency", billingFrequency) :
                new ObjectParameter("BillingFrequency", typeof(string));
    
            var trialFeeParameter = trialFee.HasValue ?
                new ObjectParameter("TrialFee", trialFee) :
                new ObjectParameter("TrialFee", typeof(decimal));
    
            var trialPeriodParameter = trialPeriod.HasValue ?
                new ObjectParameter("TrialPeriod", trialPeriod) :
                new ObjectParameter("TrialPeriod", typeof(int));
    
            var trialFrequencyParameter = trialFrequency != null ?
                new ObjectParameter("TrialFrequency", trialFrequency) :
                new ObjectParameter("TrialFrequency", typeof(string));
    
            var isPublicParameter = isPublic.HasValue ?
                new ObjectParameter("IsPublic", isPublic) :
                new ObjectParameter("IsPublic", typeof(bool));
    
            var autoAssignmentParameter = autoAssignment.HasValue ?
                new ObjectParameter("AutoAssignment", autoAssignment) :
                new ObjectParameter("AutoAssignment", typeof(bool));
    
            var rSVPCodeParameter = rSVPCode != null ?
                new ObjectParameter("RSVPCode", rSVPCode) :
                new ObjectParameter("RSVPCode", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRole", roleIdParameter, roleGroupIdParameter, descriptionParameter, serviceFeeParameter, billingPeriodParameter, billingFrequencyParameter, trialFeeParameter, trialPeriodParameter, trialFrequencyParameter, isPublicParameter, autoAssignmentParameter, rSVPCodeParameter, iconFileParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateRoleGroup(Nullable<int> roleGroupId, string roleGroupName, string description, Nullable<int> lastModifiedUserID)
        {
            var roleGroupIdParameter = roleGroupId.HasValue ?
                new ObjectParameter("RoleGroupId", roleGroupId) :
                new ObjectParameter("RoleGroupId", typeof(int));
    
            var roleGroupNameParameter = roleGroupName != null ?
                new ObjectParameter("RoleGroupName", roleGroupName) :
                new ObjectParameter("RoleGroupName", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var lastModifiedUserIDParameter = lastModifiedUserID.HasValue ?
                new ObjectParameter("LastModifiedUserID", lastModifiedUserID) :
                new ObjectParameter("LastModifiedUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateRoleGroup", roleGroupIdParameter, roleGroupNameParameter, descriptionParameter, lastModifiedUserIDParameter);
        }
    
        public virtual int UpdateSchedule(Nullable<int> scheduleID, string typeFullName, Nullable<int> timeLapse, string timeLapseMeasurement, Nullable<int> retryTimeLapse, string retryTimeLapseMeasurement, Nullable<int> retainHistoryNum, string attachToEvent, Nullable<bool> catchUpEnabled, Nullable<bool> enabled, string objectDependencies, string servers, Nullable<int> lastModifiedByUserID, string friendlyName)
        {
            var scheduleIDParameter = scheduleID.HasValue ?
                new ObjectParameter("ScheduleID", scheduleID) :
                new ObjectParameter("ScheduleID", typeof(int));
    
            var typeFullNameParameter = typeFullName != null ?
                new ObjectParameter("TypeFullName", typeFullName) :
                new ObjectParameter("TypeFullName", typeof(string));
    
            var timeLapseParameter = timeLapse.HasValue ?
                new ObjectParameter("TimeLapse", timeLapse) :
                new ObjectParameter("TimeLapse", typeof(int));
    
            var timeLapseMeasurementParameter = timeLapseMeasurement != null ?
                new ObjectParameter("TimeLapseMeasurement", timeLapseMeasurement) :
                new ObjectParameter("TimeLapseMeasurement", typeof(string));
    
            var retryTimeLapseParameter = retryTimeLapse.HasValue ?
                new ObjectParameter("RetryTimeLapse", retryTimeLapse) :
                new ObjectParameter("RetryTimeLapse", typeof(int));
    
            var retryTimeLapseMeasurementParameter = retryTimeLapseMeasurement != null ?
                new ObjectParameter("RetryTimeLapseMeasurement", retryTimeLapseMeasurement) :
                new ObjectParameter("RetryTimeLapseMeasurement", typeof(string));
    
            var retainHistoryNumParameter = retainHistoryNum.HasValue ?
                new ObjectParameter("RetainHistoryNum", retainHistoryNum) :
                new ObjectParameter("RetainHistoryNum", typeof(int));
    
            var attachToEventParameter = attachToEvent != null ?
                new ObjectParameter("AttachToEvent", attachToEvent) :
                new ObjectParameter("AttachToEvent", typeof(string));
    
            var catchUpEnabledParameter = catchUpEnabled.HasValue ?
                new ObjectParameter("CatchUpEnabled", catchUpEnabled) :
                new ObjectParameter("CatchUpEnabled", typeof(bool));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            var objectDependenciesParameter = objectDependencies != null ?
                new ObjectParameter("ObjectDependencies", objectDependencies) :
                new ObjectParameter("ObjectDependencies", typeof(string));
    
            var serversParameter = servers != null ?
                new ObjectParameter("Servers", servers) :
                new ObjectParameter("Servers", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            var friendlyNameParameter = friendlyName != null ?
                new ObjectParameter("FriendlyName", friendlyName) :
                new ObjectParameter("FriendlyName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSchedule", scheduleIDParameter, typeFullNameParameter, timeLapseParameter, timeLapseMeasurementParameter, retryTimeLapseParameter, retryTimeLapseMeasurementParameter, retainHistoryNumParameter, attachToEventParameter, catchUpEnabledParameter, enabledParameter, objectDependenciesParameter, serversParameter, lastModifiedByUserIDParameter, friendlyNameParameter);
        }
    
        public virtual int UpdateScheduleHistory(Nullable<int> scheduleHistoryID, Nullable<System.DateTime> endDate, Nullable<bool> succeeded, string logNotes, Nullable<System.DateTime> nextStart)
        {
            var scheduleHistoryIDParameter = scheduleHistoryID.HasValue ?
                new ObjectParameter("ScheduleHistoryID", scheduleHistoryID) :
                new ObjectParameter("ScheduleHistoryID", typeof(int));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var succeededParameter = succeeded.HasValue ?
                new ObjectParameter("Succeeded", succeeded) :
                new ObjectParameter("Succeeded", typeof(bool));
    
            var logNotesParameter = logNotes != null ?
                new ObjectParameter("LogNotes", logNotes) :
                new ObjectParameter("LogNotes", typeof(string));
    
            var nextStartParameter = nextStart.HasValue ?
                new ObjectParameter("NextStart", nextStart) :
                new ObjectParameter("NextStart", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateScheduleHistory", scheduleHistoryIDParameter, endDateParameter, succeededParameter, logNotesParameter, nextStartParameter);
        }
    
        public virtual int UpdateScopeType(Nullable<int> scopeTypeId, string scopeType)
        {
            var scopeTypeIdParameter = scopeTypeId.HasValue ?
                new ObjectParameter("ScopeTypeId", scopeTypeId) :
                new ObjectParameter("ScopeTypeId", typeof(int));
    
            var scopeTypeParameter = scopeType != null ?
                new ObjectParameter("ScopeType", scopeType) :
                new ObjectParameter("ScopeType", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateScopeType", scopeTypeIdParameter, scopeTypeParameter);
        }
    
        public virtual int UpdateSearchCommonWord(Nullable<int> commonWordID, string commonWord, string locale)
        {
            var commonWordIDParameter = commonWordID.HasValue ?
                new ObjectParameter("CommonWordID", commonWordID) :
                new ObjectParameter("CommonWordID", typeof(int));
    
            var commonWordParameter = commonWord != null ?
                new ObjectParameter("CommonWord", commonWord) :
                new ObjectParameter("CommonWord", typeof(string));
    
            var localeParameter = locale != null ?
                new ObjectParameter("Locale", locale) :
                new ObjectParameter("Locale", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSearchCommonWord", commonWordIDParameter, commonWordParameter, localeParameter);
        }
    
        public virtual int UpdateSearchItem(Nullable<int> searchItemID, string title, string description, Nullable<int> author, Nullable<System.DateTime> pubDate, Nullable<int> moduleId, string searchKey, string guid, Nullable<int> hitCount, Nullable<int> imageFileId)
        {
            var searchItemIDParameter = searchItemID.HasValue ?
                new ObjectParameter("SearchItemID", searchItemID) :
                new ObjectParameter("SearchItemID", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var authorParameter = author.HasValue ?
                new ObjectParameter("Author", author) :
                new ObjectParameter("Author", typeof(int));
    
            var pubDateParameter = pubDate.HasValue ?
                new ObjectParameter("PubDate", pubDate) :
                new ObjectParameter("PubDate", typeof(System.DateTime));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var searchKeyParameter = searchKey != null ?
                new ObjectParameter("SearchKey", searchKey) :
                new ObjectParameter("SearchKey", typeof(string));
    
            var guidParameter = guid != null ?
                new ObjectParameter("Guid", guid) :
                new ObjectParameter("Guid", typeof(string));
    
            var hitCountParameter = hitCount.HasValue ?
                new ObjectParameter("HitCount", hitCount) :
                new ObjectParameter("HitCount", typeof(int));
    
            var imageFileIdParameter = imageFileId.HasValue ?
                new ObjectParameter("ImageFileId", imageFileId) :
                new ObjectParameter("ImageFileId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSearchItem", searchItemIDParameter, titleParameter, descriptionParameter, authorParameter, pubDateParameter, moduleIdParameter, searchKeyParameter, guidParameter, hitCountParameter, imageFileIdParameter);
        }
    
        public virtual int UpdateSearchItemWord(Nullable<int> searchItemWordID, Nullable<int> searchItemID, Nullable<int> searchWordsID, Nullable<int> occurrences)
        {
            var searchItemWordIDParameter = searchItemWordID.HasValue ?
                new ObjectParameter("SearchItemWordID", searchItemWordID) :
                new ObjectParameter("SearchItemWordID", typeof(int));
    
            var searchItemIDParameter = searchItemID.HasValue ?
                new ObjectParameter("SearchItemID", searchItemID) :
                new ObjectParameter("SearchItemID", typeof(int));
    
            var searchWordsIDParameter = searchWordsID.HasValue ?
                new ObjectParameter("SearchWordsID", searchWordsID) :
                new ObjectParameter("SearchWordsID", typeof(int));
    
            var occurrencesParameter = occurrences.HasValue ?
                new ObjectParameter("Occurrences", occurrences) :
                new ObjectParameter("Occurrences", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSearchItemWord", searchItemWordIDParameter, searchItemIDParameter, searchWordsIDParameter, occurrencesParameter);
        }
    
        public virtual int UpdateSearchItemWordPosition(Nullable<int> searchItemWordPositionID, Nullable<int> searchItemWordID, Nullable<int> contentPosition)
        {
            var searchItemWordPositionIDParameter = searchItemWordPositionID.HasValue ?
                new ObjectParameter("SearchItemWordPositionID", searchItemWordPositionID) :
                new ObjectParameter("SearchItemWordPositionID", typeof(int));
    
            var searchItemWordIDParameter = searchItemWordID.HasValue ?
                new ObjectParameter("SearchItemWordID", searchItemWordID) :
                new ObjectParameter("SearchItemWordID", typeof(int));
    
            var contentPositionParameter = contentPosition.HasValue ?
                new ObjectParameter("ContentPosition", contentPosition) :
                new ObjectParameter("ContentPosition", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSearchItemWordPosition", searchItemWordPositionIDParameter, searchItemWordIDParameter, contentPositionParameter);
        }
    
        public virtual int UpdateSearchWord(Nullable<int> searchWordsID, string word, Nullable<bool> isCommon, Nullable<int> hitCount)
        {
            var searchWordsIDParameter = searchWordsID.HasValue ?
                new ObjectParameter("SearchWordsID", searchWordsID) :
                new ObjectParameter("SearchWordsID", typeof(int));
    
            var wordParameter = word != null ?
                new ObjectParameter("Word", word) :
                new ObjectParameter("Word", typeof(string));
    
            var isCommonParameter = isCommon.HasValue ?
                new ObjectParameter("IsCommon", isCommon) :
                new ObjectParameter("IsCommon", typeof(bool));
    
            var hitCountParameter = hitCount.HasValue ?
                new ObjectParameter("HitCount", hitCount) :
                new ObjectParameter("HitCount", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSearchWord", searchWordsIDParameter, wordParameter, isCommonParameter, hitCountParameter);
        }
    
        public virtual int UpdateServer(Nullable<int> serverID, string uRL, Nullable<bool> enabled)
        {
            var serverIDParameter = serverID.HasValue ?
                new ObjectParameter("ServerID", serverID) :
                new ObjectParameter("ServerID", typeof(int));
    
            var uRLParameter = uRL != null ?
                new ObjectParameter("URL", uRL) :
                new ObjectParameter("URL", typeof(string));
    
            var enabledParameter = enabled.HasValue ?
                new ObjectParameter("Enabled", enabled) :
                new ObjectParameter("Enabled", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServer", serverIDParameter, uRLParameter, enabledParameter);
        }
    
        public virtual int UpdateServerActivity(string serverName, string iISAppName, Nullable<System.DateTime> createdDate, Nullable<System.DateTime> lastActivityDate)
        {
            var serverNameParameter = serverName != null ?
                new ObjectParameter("ServerName", serverName) :
                new ObjectParameter("ServerName", typeof(string));
    
            var iISAppNameParameter = iISAppName != null ?
                new ObjectParameter("IISAppName", iISAppName) :
                new ObjectParameter("IISAppName", typeof(string));
    
            var createdDateParameter = createdDate.HasValue ?
                new ObjectParameter("CreatedDate", createdDate) :
                new ObjectParameter("CreatedDate", typeof(System.DateTime));
    
            var lastActivityDateParameter = lastActivityDate.HasValue ?
                new ObjectParameter("LastActivityDate", lastActivityDate) :
                new ObjectParameter("LastActivityDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateServerActivity", serverNameParameter, iISAppNameParameter, createdDateParameter, lastActivityDateParameter);
        }
    
        public virtual int UpdateSimpleTerm(Nullable<int> termID, Nullable<int> vocabularyID, string name, string description, Nullable<int> weight, Nullable<int> lastModifiedByUserID)
        {
            var termIDParameter = termID.HasValue ?
                new ObjectParameter("TermID", termID) :
                new ObjectParameter("TermID", typeof(int));
    
            var vocabularyIDParameter = vocabularyID.HasValue ?
                new ObjectParameter("VocabularyID", vocabularyID) :
                new ObjectParameter("VocabularyID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSimpleTerm", termIDParameter, vocabularyIDParameter, nameParameter, descriptionParameter, weightParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateSkin(Nullable<int> skinID, string skinSrc)
        {
            var skinIDParameter = skinID.HasValue ?
                new ObjectParameter("SkinID", skinID) :
                new ObjectParameter("SkinID", typeof(int));
    
            var skinSrcParameter = skinSrc != null ?
                new ObjectParameter("SkinSrc", skinSrc) :
                new ObjectParameter("SkinSrc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSkin", skinIDParameter, skinSrcParameter);
        }
    
        public virtual int UpdateSkinControl(Nullable<int> skinControlID, Nullable<int> packageID, string controlKey, string controlSrc, Nullable<bool> supportsPartialRendering, Nullable<int> lastModifiedByUserID)
        {
            var skinControlIDParameter = skinControlID.HasValue ?
                new ObjectParameter("SkinControlID", skinControlID) :
                new ObjectParameter("SkinControlID", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var controlKeyParameter = controlKey != null ?
                new ObjectParameter("ControlKey", controlKey) :
                new ObjectParameter("ControlKey", typeof(string));
    
            var controlSrcParameter = controlSrc != null ?
                new ObjectParameter("ControlSrc", controlSrc) :
                new ObjectParameter("ControlSrc", typeof(string));
    
            var supportsPartialRenderingParameter = supportsPartialRendering.HasValue ?
                new ObjectParameter("SupportsPartialRendering", supportsPartialRendering) :
                new ObjectParameter("SupportsPartialRendering", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSkinControl", skinControlIDParameter, packageIDParameter, controlKeyParameter, controlSrcParameter, supportsPartialRenderingParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateSkinPackage(Nullable<int> skinPackageID, Nullable<int> packageID, Nullable<int> portalID, string skinName, string skinType, Nullable<int> lastModifiedByUserID)
        {
            var skinPackageIDParameter = skinPackageID.HasValue ?
                new ObjectParameter("SkinPackageID", skinPackageID) :
                new ObjectParameter("SkinPackageID", typeof(int));
    
            var packageIDParameter = packageID.HasValue ?
                new ObjectParameter("PackageID", packageID) :
                new ObjectParameter("PackageID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var skinNameParameter = skinName != null ?
                new ObjectParameter("SkinName", skinName) :
                new ObjectParameter("SkinName", typeof(string));
    
            var skinTypeParameter = skinType != null ?
                new ObjectParameter("SkinType", skinType) :
                new ObjectParameter("SkinType", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSkinPackage", skinPackageIDParameter, packageIDParameter, portalIDParameter, skinNameParameter, skinTypeParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateSystemMessage(Nullable<int> portalID, string messageName, string messageValue)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var messageNameParameter = messageName != null ?
                new ObjectParameter("MessageName", messageName) :
                new ObjectParameter("MessageName", typeof(string));
    
            var messageValueParameter = messageValue != null ?
                new ObjectParameter("MessageValue", messageValue) :
                new ObjectParameter("MessageValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateSystemMessage", portalIDParameter, messageNameParameter, messageValueParameter);
        }
    
        public virtual int UpdateTab(Nullable<int> tabId, Nullable<int> contentItemID, Nullable<int> portalId, Nullable<System.Guid> versionGuid, Nullable<System.Guid> defaultLanguageGuid, Nullable<System.Guid> localizedVersionGuid, string tabName, Nullable<bool> isVisible, Nullable<bool> disableLink, Nullable<int> parentId, string iconFile, string iconFileLarge, string title, string description, string keyWords, Nullable<bool> isDeleted, string url, string skinSrc, string containerSrc, string tabPath, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate, Nullable<int> refreshInterval, string pageHeadText, Nullable<bool> isSecure, Nullable<bool> permanentRedirect, Nullable<double> siteMapPriority, Nullable<int> lastModifiedByUserID, string cultureCode)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var contentItemIDParameter = contentItemID.HasValue ?
                new ObjectParameter("ContentItemID", contentItemID) :
                new ObjectParameter("ContentItemID", typeof(int));
    
            var portalIdParameter = portalId.HasValue ?
                new ObjectParameter("PortalId", portalId) :
                new ObjectParameter("PortalId", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var defaultLanguageGuidParameter = defaultLanguageGuid.HasValue ?
                new ObjectParameter("DefaultLanguageGuid", defaultLanguageGuid) :
                new ObjectParameter("DefaultLanguageGuid", typeof(System.Guid));
    
            var localizedVersionGuidParameter = localizedVersionGuid.HasValue ?
                new ObjectParameter("LocalizedVersionGuid", localizedVersionGuid) :
                new ObjectParameter("LocalizedVersionGuid", typeof(System.Guid));
    
            var tabNameParameter = tabName != null ?
                new ObjectParameter("TabName", tabName) :
                new ObjectParameter("TabName", typeof(string));
    
            var isVisibleParameter = isVisible.HasValue ?
                new ObjectParameter("IsVisible", isVisible) :
                new ObjectParameter("IsVisible", typeof(bool));
    
            var disableLinkParameter = disableLink.HasValue ?
                new ObjectParameter("DisableLink", disableLink) :
                new ObjectParameter("DisableLink", typeof(bool));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var iconFileLargeParameter = iconFileLarge != null ?
                new ObjectParameter("IconFileLarge", iconFileLarge) :
                new ObjectParameter("IconFileLarge", typeof(string));
    
            var titleParameter = title != null ?
                new ObjectParameter("Title", title) :
                new ObjectParameter("Title", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var skinSrcParameter = skinSrc != null ?
                new ObjectParameter("SkinSrc", skinSrc) :
                new ObjectParameter("SkinSrc", typeof(string));
    
            var containerSrcParameter = containerSrc != null ?
                new ObjectParameter("ContainerSrc", containerSrc) :
                new ObjectParameter("ContainerSrc", typeof(string));
    
            var tabPathParameter = tabPath != null ?
                new ObjectParameter("TabPath", tabPath) :
                new ObjectParameter("TabPath", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            var refreshIntervalParameter = refreshInterval.HasValue ?
                new ObjectParameter("RefreshInterval", refreshInterval) :
                new ObjectParameter("RefreshInterval", typeof(int));
    
            var pageHeadTextParameter = pageHeadText != null ?
                new ObjectParameter("PageHeadText", pageHeadText) :
                new ObjectParameter("PageHeadText", typeof(string));
    
            var isSecureParameter = isSecure.HasValue ?
                new ObjectParameter("IsSecure", isSecure) :
                new ObjectParameter("IsSecure", typeof(bool));
    
            var permanentRedirectParameter = permanentRedirect.HasValue ?
                new ObjectParameter("PermanentRedirect", permanentRedirect) :
                new ObjectParameter("PermanentRedirect", typeof(bool));
    
            var siteMapPriorityParameter = siteMapPriority.HasValue ?
                new ObjectParameter("SiteMapPriority", siteMapPriority) :
                new ObjectParameter("SiteMapPriority", typeof(double));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTab", tabIdParameter, contentItemIDParameter, portalIdParameter, versionGuidParameter, defaultLanguageGuidParameter, localizedVersionGuidParameter, tabNameParameter, isVisibleParameter, disableLinkParameter, parentIdParameter, iconFileParameter, iconFileLargeParameter, titleParameter, descriptionParameter, keyWordsParameter, isDeletedParameter, urlParameter, skinSrcParameter, containerSrcParameter, tabPathParameter, startDateParameter, endDateParameter, refreshIntervalParameter, pageHeadTextParameter, isSecureParameter, permanentRedirectParameter, siteMapPriorityParameter, lastModifiedByUserIDParameter, cultureCodeParameter);
        }
    
        public virtual int UpdateTabModule(Nullable<int> tabModuleId, Nullable<int> tabId, Nullable<int> moduleId, string moduleTitle, string header, string footer, Nullable<int> moduleOrder, string paneName, Nullable<int> cacheTime, string cacheMethod, string alignment, string color, string border, string iconFile, Nullable<int> visibility, string containerSrc, Nullable<bool> displayTitle, Nullable<bool> displayPrint, Nullable<bool> displaySyndicate, Nullable<bool> isWebSlice, string webSliceTitle, Nullable<System.DateTime> webSliceExpiryDate, Nullable<int> webSliceTTL, Nullable<System.Guid> versionGuid, Nullable<System.Guid> defaultLanguageGuid, Nullable<System.Guid> localizedVersionGuid, string cultureCode, Nullable<int> lastModifiedByUserID)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var moduleTitleParameter = moduleTitle != null ?
                new ObjectParameter("ModuleTitle", moduleTitle) :
                new ObjectParameter("ModuleTitle", typeof(string));
    
            var headerParameter = header != null ?
                new ObjectParameter("Header", header) :
                new ObjectParameter("Header", typeof(string));
    
            var footerParameter = footer != null ?
                new ObjectParameter("Footer", footer) :
                new ObjectParameter("Footer", typeof(string));
    
            var moduleOrderParameter = moduleOrder.HasValue ?
                new ObjectParameter("ModuleOrder", moduleOrder) :
                new ObjectParameter("ModuleOrder", typeof(int));
    
            var paneNameParameter = paneName != null ?
                new ObjectParameter("PaneName", paneName) :
                new ObjectParameter("PaneName", typeof(string));
    
            var cacheTimeParameter = cacheTime.HasValue ?
                new ObjectParameter("CacheTime", cacheTime) :
                new ObjectParameter("CacheTime", typeof(int));
    
            var cacheMethodParameter = cacheMethod != null ?
                new ObjectParameter("CacheMethod", cacheMethod) :
                new ObjectParameter("CacheMethod", typeof(string));
    
            var alignmentParameter = alignment != null ?
                new ObjectParameter("Alignment", alignment) :
                new ObjectParameter("Alignment", typeof(string));
    
            var colorParameter = color != null ?
                new ObjectParameter("Color", color) :
                new ObjectParameter("Color", typeof(string));
    
            var borderParameter = border != null ?
                new ObjectParameter("Border", border) :
                new ObjectParameter("Border", typeof(string));
    
            var iconFileParameter = iconFile != null ?
                new ObjectParameter("IconFile", iconFile) :
                new ObjectParameter("IconFile", typeof(string));
    
            var visibilityParameter = visibility.HasValue ?
                new ObjectParameter("Visibility", visibility) :
                new ObjectParameter("Visibility", typeof(int));
    
            var containerSrcParameter = containerSrc != null ?
                new ObjectParameter("ContainerSrc", containerSrc) :
                new ObjectParameter("ContainerSrc", typeof(string));
    
            var displayTitleParameter = displayTitle.HasValue ?
                new ObjectParameter("DisplayTitle", displayTitle) :
                new ObjectParameter("DisplayTitle", typeof(bool));
    
            var displayPrintParameter = displayPrint.HasValue ?
                new ObjectParameter("DisplayPrint", displayPrint) :
                new ObjectParameter("DisplayPrint", typeof(bool));
    
            var displaySyndicateParameter = displaySyndicate.HasValue ?
                new ObjectParameter("DisplaySyndicate", displaySyndicate) :
                new ObjectParameter("DisplaySyndicate", typeof(bool));
    
            var isWebSliceParameter = isWebSlice.HasValue ?
                new ObjectParameter("IsWebSlice", isWebSlice) :
                new ObjectParameter("IsWebSlice", typeof(bool));
    
            var webSliceTitleParameter = webSliceTitle != null ?
                new ObjectParameter("WebSliceTitle", webSliceTitle) :
                new ObjectParameter("WebSliceTitle", typeof(string));
    
            var webSliceExpiryDateParameter = webSliceExpiryDate.HasValue ?
                new ObjectParameter("WebSliceExpiryDate", webSliceExpiryDate) :
                new ObjectParameter("WebSliceExpiryDate", typeof(System.DateTime));
    
            var webSliceTTLParameter = webSliceTTL.HasValue ?
                new ObjectParameter("WebSliceTTL", webSliceTTL) :
                new ObjectParameter("WebSliceTTL", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            var defaultLanguageGuidParameter = defaultLanguageGuid.HasValue ?
                new ObjectParameter("DefaultLanguageGuid", defaultLanguageGuid) :
                new ObjectParameter("DefaultLanguageGuid", typeof(System.Guid));
    
            var localizedVersionGuidParameter = localizedVersionGuid.HasValue ?
                new ObjectParameter("LocalizedVersionGuid", localizedVersionGuid) :
                new ObjectParameter("LocalizedVersionGuid", typeof(System.Guid));
    
            var cultureCodeParameter = cultureCode != null ?
                new ObjectParameter("CultureCode", cultureCode) :
                new ObjectParameter("CultureCode", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabModule", tabModuleIdParameter, tabIdParameter, moduleIdParameter, moduleTitleParameter, headerParameter, footerParameter, moduleOrderParameter, paneNameParameter, cacheTimeParameter, cacheMethodParameter, alignmentParameter, colorParameter, borderParameter, iconFileParameter, visibilityParameter, containerSrcParameter, displayTitleParameter, displayPrintParameter, displaySyndicateParameter, isWebSliceParameter, webSliceTitleParameter, webSliceExpiryDateParameter, webSliceTTLParameter, versionGuidParameter, defaultLanguageGuidParameter, localizedVersionGuidParameter, cultureCodeParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateTabModuleSetting(Nullable<int> tabModuleId, string settingName, string settingValue, Nullable<int> lastModifiedByUserID)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabModuleSetting", tabModuleIdParameter, settingNameParameter, settingValueParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateTabModuleTranslationStatus(Nullable<int> tabModuleId, Nullable<System.Guid> localizedVersionGuid, Nullable<int> lastModifiedByUserID)
        {
            var tabModuleIdParameter = tabModuleId.HasValue ?
                new ObjectParameter("TabModuleId", tabModuleId) :
                new ObjectParameter("TabModuleId", typeof(int));
    
            var localizedVersionGuidParameter = localizedVersionGuid.HasValue ?
                new ObjectParameter("LocalizedVersionGuid", localizedVersionGuid) :
                new ObjectParameter("LocalizedVersionGuid", typeof(System.Guid));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabModuleTranslationStatus", tabModuleIdParameter, localizedVersionGuidParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateTabModuleVersion(Nullable<int> tabModuleID, Nullable<System.Guid> versionGuid)
        {
            var tabModuleIDParameter = tabModuleID.HasValue ?
                new ObjectParameter("TabModuleID", tabModuleID) :
                new ObjectParameter("TabModuleID", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabModuleVersion", tabModuleIDParameter, versionGuidParameter);
        }
    
        public virtual int UpdateTabModuleVersionByModule(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabModuleVersionByModule", moduleIDParameter);
        }
    
        public virtual int UpdateTabOrder(Nullable<int> tabId, Nullable<int> tabOrder, Nullable<int> level, Nullable<int> parentId, string tabPath, Nullable<int> lastModifiedByUserID)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var tabOrderParameter = tabOrder.HasValue ?
                new ObjectParameter("TabOrder", tabOrder) :
                new ObjectParameter("TabOrder", typeof(int));
    
            var levelParameter = level.HasValue ?
                new ObjectParameter("Level", level) :
                new ObjectParameter("Level", typeof(int));
    
            var parentIdParameter = parentId.HasValue ?
                new ObjectParameter("ParentId", parentId) :
                new ObjectParameter("ParentId", typeof(int));
    
            var tabPathParameter = tabPath != null ?
                new ObjectParameter("TabPath", tabPath) :
                new ObjectParameter("TabPath", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabOrder", tabIdParameter, tabOrderParameter, levelParameter, parentIdParameter, tabPathParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateTabPermission(Nullable<int> tabPermissionID, Nullable<int> tabID, Nullable<int> permissionID, Nullable<int> roleID, Nullable<bool> allowAccess, Nullable<int> userID, Nullable<int> lastModifiedByUserID)
        {
            var tabPermissionIDParameter = tabPermissionID.HasValue ?
                new ObjectParameter("TabPermissionID", tabPermissionID) :
                new ObjectParameter("TabPermissionID", typeof(int));
    
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var permissionIDParameter = permissionID.HasValue ?
                new ObjectParameter("PermissionID", permissionID) :
                new ObjectParameter("PermissionID", typeof(int));
    
            var roleIDParameter = roleID.HasValue ?
                new ObjectParameter("RoleID", roleID) :
                new ObjectParameter("RoleID", typeof(int));
    
            var allowAccessParameter = allowAccess.HasValue ?
                new ObjectParameter("AllowAccess", allowAccess) :
                new ObjectParameter("AllowAccess", typeof(bool));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabPermission", tabPermissionIDParameter, tabIDParameter, permissionIDParameter, roleIDParameter, allowAccessParameter, userIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateTabSetting(Nullable<int> tabID, string settingName, string settingValue, Nullable<int> lastModifiedByUserID)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabSetting", tabIDParameter, settingNameParameter, settingValueParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateTabTranslationStatus(Nullable<int> tabId, Nullable<System.Guid> localizedVersionGuid, Nullable<int> lastModifiedByUserID)
        {
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            var localizedVersionGuidParameter = localizedVersionGuid.HasValue ?
                new ObjectParameter("LocalizedVersionGuid", localizedVersionGuid) :
                new ObjectParameter("LocalizedVersionGuid", typeof(System.Guid));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabTranslationStatus", tabIdParameter, localizedVersionGuidParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateTabVersion(Nullable<int> tabID, Nullable<System.Guid> versionGuid)
        {
            var tabIDParameter = tabID.HasValue ?
                new ObjectParameter("TabID", tabID) :
                new ObjectParameter("TabID", typeof(int));
    
            var versionGuidParameter = versionGuid.HasValue ?
                new ObjectParameter("VersionGuid", versionGuid) :
                new ObjectParameter("VersionGuid", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTabVersion", tabIDParameter, versionGuidParameter);
        }
    
        public virtual int UpdateUrlTracking(Nullable<int> portalID, string url, Nullable<bool> logActivity, Nullable<bool> trackClicks, Nullable<int> moduleId, Nullable<bool> newWindow)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var logActivityParameter = logActivity.HasValue ?
                new ObjectParameter("LogActivity", logActivity) :
                new ObjectParameter("LogActivity", typeof(bool));
    
            var trackClicksParameter = trackClicks.HasValue ?
                new ObjectParameter("TrackClicks", trackClicks) :
                new ObjectParameter("TrackClicks", typeof(bool));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var newWindowParameter = newWindow.HasValue ?
                new ObjectParameter("NewWindow", newWindow) :
                new ObjectParameter("NewWindow", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUrlTracking", portalIDParameter, urlParameter, logActivityParameter, trackClicksParameter, moduleIdParameter, newWindowParameter);
        }
    
        public virtual int UpdateUrlTrackingStats(Nullable<int> portalID, string url, Nullable<int> moduleId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var urlParameter = url != null ?
                new ObjectParameter("Url", url) :
                new ObjectParameter("Url", typeof(string));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUrlTrackingStats", portalIDParameter, urlParameter, moduleIdParameter);
        }
    
        public virtual int UpdateUser(Nullable<int> userID, Nullable<int> portalID, string firstName, string lastName, Nullable<bool> isSuperUser, string email, string displayName, Nullable<bool> updatePassword, Nullable<bool> authorised, Nullable<bool> refreshRoles, string lastIPAddress, Nullable<bool> isDeleted, Nullable<int> lastModifiedByUserID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var isSuperUserParameter = isSuperUser.HasValue ?
                new ObjectParameter("IsSuperUser", isSuperUser) :
                new ObjectParameter("IsSuperUser", typeof(bool));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var displayNameParameter = displayName != null ?
                new ObjectParameter("DisplayName", displayName) :
                new ObjectParameter("DisplayName", typeof(string));
    
            var updatePasswordParameter = updatePassword.HasValue ?
                new ObjectParameter("UpdatePassword", updatePassword) :
                new ObjectParameter("UpdatePassword", typeof(bool));
    
            var authorisedParameter = authorised.HasValue ?
                new ObjectParameter("Authorised", authorised) :
                new ObjectParameter("Authorised", typeof(bool));
    
            var refreshRolesParameter = refreshRoles.HasValue ?
                new ObjectParameter("RefreshRoles", refreshRoles) :
                new ObjectParameter("RefreshRoles", typeof(bool));
    
            var lastIPAddressParameter = lastIPAddress != null ?
                new ObjectParameter("LastIPAddress", lastIPAddress) :
                new ObjectParameter("LastIPAddress", typeof(string));
    
            var isDeletedParameter = isDeleted.HasValue ?
                new ObjectParameter("IsDeleted", isDeleted) :
                new ObjectParameter("IsDeleted", typeof(bool));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUser", userIDParameter, portalIDParameter, firstNameParameter, lastNameParameter, isSuperUserParameter, emailParameter, displayNameParameter, updatePasswordParameter, authorisedParameter, refreshRolesParameter, lastIPAddressParameter, isDeletedParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UpdateUserProfileProperty(Nullable<int> profileID, Nullable<int> userID, Nullable<int> propertyDefinitionID, string propertyValue, Nullable<int> visibility, Nullable<System.DateTime> lastUpdatedDate)
        {
            var profileIDParameter = profileID.HasValue ?
                new ObjectParameter("ProfileID", profileID) :
                new ObjectParameter("ProfileID", typeof(int));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var propertyDefinitionIDParameter = propertyDefinitionID.HasValue ?
                new ObjectParameter("PropertyDefinitionID", propertyDefinitionID) :
                new ObjectParameter("PropertyDefinitionID", typeof(int));
    
            var propertyValueParameter = propertyValue != null ?
                new ObjectParameter("PropertyValue", propertyValue) :
                new ObjectParameter("PropertyValue", typeof(string));
    
            var visibilityParameter = visibility.HasValue ?
                new ObjectParameter("Visibility", visibility) :
                new ObjectParameter("Visibility", typeof(int));
    
            var lastUpdatedDateParameter = lastUpdatedDate.HasValue ?
                new ObjectParameter("LastUpdatedDate", lastUpdatedDate) :
                new ObjectParameter("LastUpdatedDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UpdateUserProfileProperty", profileIDParameter, userIDParameter, propertyDefinitionIDParameter, propertyValueParameter, visibilityParameter, lastUpdatedDateParameter);
        }
    
        public virtual int UpdateUserRole(Nullable<int> userRoleId, Nullable<System.DateTime> effectiveDate, Nullable<System.DateTime> expiryDate, Nullable<int> lastModifiedByUserID)
        {
            var userRoleIdParameter = userRoleId.HasValue ?
                new ObjectParameter("UserRoleId", userRoleId) :
                new ObjectParameter("UserRoleId", typeof(int));
    
            var effectiveDateParameter = effectiveDate.HasValue ?
                new ObjectParameter("EffectiveDate", effectiveDate) :
                new ObjectParameter("EffectiveDate", typeof(System.DateTime));
    
            var expiryDateParameter = expiryDate.HasValue ?
                new ObjectParameter("ExpiryDate", expiryDate) :
                new ObjectParameter("ExpiryDate", typeof(System.DateTime));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateUserRole", userRoleIdParameter, effectiveDateParameter, expiryDateParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UpdateVendor(Nullable<int> vendorId, string vendorName, string unit, string street, string city, string region, string country, string postalCode, string telephone, string fax, string cell, string email, string website, string firstName, string lastName, string userName, string logoFile, string keyWords, Nullable<bool> authorized)
        {
            var vendorIdParameter = vendorId.HasValue ?
                new ObjectParameter("VendorId", vendorId) :
                new ObjectParameter("VendorId", typeof(int));
    
            var vendorNameParameter = vendorName != null ?
                new ObjectParameter("VendorName", vendorName) :
                new ObjectParameter("VendorName", typeof(string));
    
            var unitParameter = unit != null ?
                new ObjectParameter("Unit", unit) :
                new ObjectParameter("Unit", typeof(string));
    
            var streetParameter = street != null ?
                new ObjectParameter("Street", street) :
                new ObjectParameter("Street", typeof(string));
    
            var cityParameter = city != null ?
                new ObjectParameter("City", city) :
                new ObjectParameter("City", typeof(string));
    
            var regionParameter = region != null ?
                new ObjectParameter("Region", region) :
                new ObjectParameter("Region", typeof(string));
    
            var countryParameter = country != null ?
                new ObjectParameter("Country", country) :
                new ObjectParameter("Country", typeof(string));
    
            var postalCodeParameter = postalCode != null ?
                new ObjectParameter("PostalCode", postalCode) :
                new ObjectParameter("PostalCode", typeof(string));
    
            var telephoneParameter = telephone != null ?
                new ObjectParameter("Telephone", telephone) :
                new ObjectParameter("Telephone", typeof(string));
    
            var faxParameter = fax != null ?
                new ObjectParameter("Fax", fax) :
                new ObjectParameter("Fax", typeof(string));
    
            var cellParameter = cell != null ?
                new ObjectParameter("Cell", cell) :
                new ObjectParameter("Cell", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var websiteParameter = website != null ?
                new ObjectParameter("Website", website) :
                new ObjectParameter("Website", typeof(string));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var logoFileParameter = logoFile != null ?
                new ObjectParameter("LogoFile", logoFile) :
                new ObjectParameter("LogoFile", typeof(string));
    
            var keyWordsParameter = keyWords != null ?
                new ObjectParameter("KeyWords", keyWords) :
                new ObjectParameter("KeyWords", typeof(string));
    
            var authorizedParameter = authorized.HasValue ?
                new ObjectParameter("Authorized", authorized) :
                new ObjectParameter("Authorized", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVendor", vendorIdParameter, vendorNameParameter, unitParameter, streetParameter, cityParameter, regionParameter, countryParameter, postalCodeParameter, telephoneParameter, faxParameter, cellParameter, emailParameter, websiteParameter, firstNameParameter, lastNameParameter, userNameParameter, logoFileParameter, keyWordsParameter, authorizedParameter);
        }
    
        public virtual int UpdateVocabulary(Nullable<int> vocabularyID, Nullable<int> vocabularyTypeID, string name, string description, Nullable<int> weight, Nullable<int> scopeID, Nullable<int> scopeTypeID, Nullable<int> lastModifiedByUserID)
        {
            var vocabularyIDParameter = vocabularyID.HasValue ?
                new ObjectParameter("VocabularyID", vocabularyID) :
                new ObjectParameter("VocabularyID", typeof(int));
    
            var vocabularyTypeIDParameter = vocabularyTypeID.HasValue ?
                new ObjectParameter("VocabularyTypeID", vocabularyTypeID) :
                new ObjectParameter("VocabularyTypeID", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var weightParameter = weight.HasValue ?
                new ObjectParameter("Weight", weight) :
                new ObjectParameter("Weight", typeof(int));
    
            var scopeIDParameter = scopeID.HasValue ?
                new ObjectParameter("ScopeID", scopeID) :
                new ObjectParameter("ScopeID", typeof(int));
    
            var scopeTypeIDParameter = scopeTypeID.HasValue ?
                new ObjectParameter("ScopeTypeID", scopeTypeID) :
                new ObjectParameter("ScopeTypeID", typeof(int));
    
            var lastModifiedByUserIDParameter = lastModifiedByUserID.HasValue ?
                new ObjectParameter("LastModifiedByUserID", lastModifiedByUserID) :
                new ObjectParameter("LastModifiedByUserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateVocabulary", vocabularyIDParameter, vocabularyTypeIDParameter, nameParameter, descriptionParameter, weightParameter, scopeIDParameter, scopeTypeIDParameter, lastModifiedByUserIDParameter);
        }
    
        public virtual int UserDefinedTable_AddData(Nullable<int> userDefinedRowId, Nullable<int> userDefinedFieldId, string fieldValue)
        {
            var userDefinedRowIdParameter = userDefinedRowId.HasValue ?
                new ObjectParameter("UserDefinedRowId", userDefinedRowId) :
                new ObjectParameter("UserDefinedRowId", typeof(int));
    
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            var fieldValueParameter = fieldValue != null ?
                new ObjectParameter("FieldValue", fieldValue) :
                new ObjectParameter("FieldValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_AddData", userDefinedRowIdParameter, userDefinedFieldIdParameter, fieldValueParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UserDefinedTable_AddField(Nullable<int> moduleId, string fieldTitle, Nullable<int> beforePos, string helpText, Nullable<bool> required, string fieldType, string @default, Nullable<bool> visible, Nullable<bool> showOnEdit, Nullable<bool> searchable, Nullable<bool> @private, Nullable<bool> multipleValues, string inputSettings, string outputSettings, Nullable<bool> normalizeFlag, string validationRule, string validationMessage, string editStyle)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            var fieldTitleParameter = fieldTitle != null ?
                new ObjectParameter("FieldTitle", fieldTitle) :
                new ObjectParameter("FieldTitle", typeof(string));
    
            var beforePosParameter = beforePos.HasValue ?
                new ObjectParameter("BeforePos", beforePos) :
                new ObjectParameter("BeforePos", typeof(int));
    
            var helpTextParameter = helpText != null ?
                new ObjectParameter("HelpText", helpText) :
                new ObjectParameter("HelpText", typeof(string));
    
            var requiredParameter = required.HasValue ?
                new ObjectParameter("Required", required) :
                new ObjectParameter("Required", typeof(bool));
    
            var fieldTypeParameter = fieldType != null ?
                new ObjectParameter("FieldType", fieldType) :
                new ObjectParameter("FieldType", typeof(string));
    
            var defaultParameter = @default != null ?
                new ObjectParameter("Default", @default) :
                new ObjectParameter("Default", typeof(string));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(bool));
    
            var showOnEditParameter = showOnEdit.HasValue ?
                new ObjectParameter("ShowOnEdit", showOnEdit) :
                new ObjectParameter("ShowOnEdit", typeof(bool));
    
            var searchableParameter = searchable.HasValue ?
                new ObjectParameter("Searchable", searchable) :
                new ObjectParameter("Searchable", typeof(bool));
    
            var privateParameter = @private.HasValue ?
                new ObjectParameter("Private", @private) :
                new ObjectParameter("Private", typeof(bool));
    
            var multipleValuesParameter = multipleValues.HasValue ?
                new ObjectParameter("MultipleValues", multipleValues) :
                new ObjectParameter("MultipleValues", typeof(bool));
    
            var inputSettingsParameter = inputSettings != null ?
                new ObjectParameter("InputSettings", inputSettings) :
                new ObjectParameter("InputSettings", typeof(string));
    
            var outputSettingsParameter = outputSettings != null ?
                new ObjectParameter("OutputSettings", outputSettings) :
                new ObjectParameter("OutputSettings", typeof(string));
    
            var normalizeFlagParameter = normalizeFlag.HasValue ?
                new ObjectParameter("NormalizeFlag", normalizeFlag) :
                new ObjectParameter("NormalizeFlag", typeof(bool));
    
            var validationRuleParameter = validationRule != null ?
                new ObjectParameter("ValidationRule", validationRule) :
                new ObjectParameter("ValidationRule", typeof(string));
    
            var validationMessageParameter = validationMessage != null ?
                new ObjectParameter("ValidationMessage", validationMessage) :
                new ObjectParameter("ValidationMessage", typeof(string));
    
            var editStyleParameter = editStyle != null ?
                new ObjectParameter("EditStyle", editStyle) :
                new ObjectParameter("EditStyle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UserDefinedTable_AddField", moduleIdParameter, fieldTitleParameter, beforePosParameter, helpTextParameter, requiredParameter, fieldTypeParameter, defaultParameter, visibleParameter, showOnEditParameter, searchableParameter, privateParameter, multipleValuesParameter, inputSettingsParameter, outputSettingsParameter, normalizeFlagParameter, validationRuleParameter, validationMessageParameter, editStyleParameter);
        }
    
        public virtual ObjectResult<Nullable<decimal>> UserDefinedTable_AddRow(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("UserDefinedTable_AddRow", moduleIdParameter);
        }
    
        public virtual int UserDefinedTable_DeleteData(Nullable<int> userDefinedRowId, Nullable<int> userDefinedFieldId)
        {
            var userDefinedRowIdParameter = userDefinedRowId.HasValue ?
                new ObjectParameter("UserDefinedRowId", userDefinedRowId) :
                new ObjectParameter("UserDefinedRowId", typeof(int));
    
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_DeleteData", userDefinedRowIdParameter, userDefinedFieldIdParameter);
        }
    
        public virtual int UserDefinedTable_DeleteField(Nullable<int> userDefinedFieldId)
        {
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_DeleteField", userDefinedFieldIdParameter);
        }
    
        public virtual int UserDefinedTable_DeleteRow(Nullable<int> userDefinedRowId, Nullable<int> moduleID)
        {
            var userDefinedRowIdParameter = userDefinedRowId.HasValue ?
                new ObjectParameter("UserDefinedRowId", userDefinedRowId) :
                new ObjectParameter("UserDefinedRowId", typeof(int));
    
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_DeleteRow", userDefinedRowIdParameter, moduleIDParameter);
        }
    
        public virtual int UserDefinedTable_DeleteRows(Nullable<int> moduleID)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_DeleteRows", moduleIDParameter);
        }
    
        public virtual int UserDefinedTable_FillDefaultData(Nullable<int> moduleID, Nullable<int> fieldId, string defaultValue)
        {
            var moduleIDParameter = moduleID.HasValue ?
                new ObjectParameter("ModuleID", moduleID) :
                new ObjectParameter("ModuleID", typeof(int));
    
            var fieldIdParameter = fieldId.HasValue ?
                new ObjectParameter("FieldId", fieldId) :
                new ObjectParameter("FieldId", typeof(int));
    
            var defaultValueParameter = defaultValue != null ?
                new ObjectParameter("DefaultValue", defaultValue) :
                new ObjectParameter("DefaultValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_FillDefaultData", moduleIDParameter, fieldIdParameter, defaultValueParameter);
        }
    
        public virtual ObjectResult<UserDefinedTable_GetData_Result> UserDefinedTable_GetData(Nullable<int> userDefinedRowId, Nullable<int> userDefinedFieldId)
        {
            var userDefinedRowIdParameter = userDefinedRowId.HasValue ?
                new ObjectParameter("UserDefinedRowId", userDefinedRowId) :
                new ObjectParameter("UserDefinedRowId", typeof(int));
    
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDefinedTable_GetData_Result>("UserDefinedTable_GetData", userDefinedRowIdParameter, userDefinedFieldIdParameter);
        }
    
        public virtual ObjectResult<UserDefinedTable_GetField_Result> UserDefinedTable_GetField(Nullable<int> userDefinedFieldId)
        {
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDefinedTable_GetField_Result>("UserDefinedTable_GetField", userDefinedFieldIdParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> UserDefinedTable_GetFieldDataCount(Nullable<int> fieldId)
        {
            var fieldIdParameter = fieldId.HasValue ?
                new ObjectParameter("FieldId", fieldId) :
                new ObjectParameter("FieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("UserDefinedTable_GetFieldDataCount", fieldIdParameter);
        }
    
        public virtual ObjectResult<UserDefinedTable_GetFields_Result> UserDefinedTable_GetFields(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDefinedTable_GetFields_Result>("UserDefinedTable_GetFields", moduleIdParameter);
        }
    
        public virtual ObjectResult<UserDefinedTable_GetFieldSettings_Result> UserDefinedTable_GetFieldSettings(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDefinedTable_GetFieldSettings_Result>("UserDefinedTable_GetFieldSettings", moduleIdParameter);
        }
    
        public virtual ObjectResult<UserDefinedTable_GetRow_Result> UserDefinedTable_GetRow(Nullable<int> userDefinedRowId, Nullable<int> moduleId)
        {
            var userDefinedRowIdParameter = userDefinedRowId.HasValue ?
                new ObjectParameter("UserDefinedRowId", userDefinedRowId) :
                new ObjectParameter("UserDefinedRowId", typeof(int));
    
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDefinedTable_GetRow_Result>("UserDefinedTable_GetRow", userDefinedRowIdParameter, moduleIdParameter);
        }
    
        public virtual ObjectResult<UserDefinedTable_GetRows_Result> UserDefinedTable_GetRows(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<UserDefinedTable_GetRows_Result>("UserDefinedTable_GetRows", moduleIdParameter);
        }
    
        public virtual int UserDefinedTable_Reset(Nullable<int> moduleId)
        {
            var moduleIdParameter = moduleId.HasValue ?
                new ObjectParameter("ModuleId", moduleId) :
                new ObjectParameter("ModuleId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_Reset", moduleIdParameter);
        }
    
        public virtual int UserDefinedTable_SetFieldOrder(Nullable<int> userDefinedFieldId, Nullable<int> fieldOrder)
        {
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            var fieldOrderParameter = fieldOrder.HasValue ?
                new ObjectParameter("FieldOrder", fieldOrder) :
                new ObjectParameter("FieldOrder", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_SetFieldOrder", userDefinedFieldIdParameter, fieldOrderParameter);
        }
    
        public virtual int UserDefinedTable_SwapFieldOrder(Nullable<int> firstUserDefinedFieldId, Nullable<int> secndUserDefinedFieldId)
        {
            var firstUserDefinedFieldIdParameter = firstUserDefinedFieldId.HasValue ?
                new ObjectParameter("FirstUserDefinedFieldId", firstUserDefinedFieldId) :
                new ObjectParameter("FirstUserDefinedFieldId", typeof(int));
    
            var secndUserDefinedFieldIdParameter = secndUserDefinedFieldId.HasValue ?
                new ObjectParameter("SecndUserDefinedFieldId", secndUserDefinedFieldId) :
                new ObjectParameter("SecndUserDefinedFieldId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_SwapFieldOrder", firstUserDefinedFieldIdParameter, secndUserDefinedFieldIdParameter);
        }
    
        public virtual int UserDefinedTable_UpdateData(Nullable<int> userDefinedRowId, Nullable<int> userDefinedFieldId, string fieldValue)
        {
            var userDefinedRowIdParameter = userDefinedRowId.HasValue ?
                new ObjectParameter("UserDefinedRowId", userDefinedRowId) :
                new ObjectParameter("UserDefinedRowId", typeof(int));
    
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            var fieldValueParameter = fieldValue != null ?
                new ObjectParameter("FieldValue", fieldValue) :
                new ObjectParameter("FieldValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_UpdateData", userDefinedRowIdParameter, userDefinedFieldIdParameter, fieldValueParameter);
        }
    
        public virtual int UserDefinedTable_UpdateField(Nullable<int> userDefinedFieldId, string fieldTitle, string helpText, Nullable<bool> required, string fieldType, string @default, Nullable<bool> visible, Nullable<bool> showOnEdit, Nullable<bool> searchable, Nullable<bool> @private, Nullable<bool> multipleValues, string inputSettings, string outputSettings, Nullable<bool> normalizeFlag, string validationRule, string validationMessage, string editStyle)
        {
            var userDefinedFieldIdParameter = userDefinedFieldId.HasValue ?
                new ObjectParameter("UserDefinedFieldId", userDefinedFieldId) :
                new ObjectParameter("UserDefinedFieldId", typeof(int));
    
            var fieldTitleParameter = fieldTitle != null ?
                new ObjectParameter("FieldTitle", fieldTitle) :
                new ObjectParameter("FieldTitle", typeof(string));
    
            var helpTextParameter = helpText != null ?
                new ObjectParameter("HelpText", helpText) :
                new ObjectParameter("HelpText", typeof(string));
    
            var requiredParameter = required.HasValue ?
                new ObjectParameter("Required", required) :
                new ObjectParameter("Required", typeof(bool));
    
            var fieldTypeParameter = fieldType != null ?
                new ObjectParameter("FieldType", fieldType) :
                new ObjectParameter("FieldType", typeof(string));
    
            var defaultParameter = @default != null ?
                new ObjectParameter("default", @default) :
                new ObjectParameter("default", typeof(string));
    
            var visibleParameter = visible.HasValue ?
                new ObjectParameter("Visible", visible) :
                new ObjectParameter("Visible", typeof(bool));
    
            var showOnEditParameter = showOnEdit.HasValue ?
                new ObjectParameter("ShowOnEdit", showOnEdit) :
                new ObjectParameter("ShowOnEdit", typeof(bool));
    
            var searchableParameter = searchable.HasValue ?
                new ObjectParameter("Searchable", searchable) :
                new ObjectParameter("Searchable", typeof(bool));
    
            var privateParameter = @private.HasValue ?
                new ObjectParameter("Private", @private) :
                new ObjectParameter("Private", typeof(bool));
    
            var multipleValuesParameter = multipleValues.HasValue ?
                new ObjectParameter("MultipleValues", multipleValues) :
                new ObjectParameter("MultipleValues", typeof(bool));
    
            var inputSettingsParameter = inputSettings != null ?
                new ObjectParameter("InputSettings", inputSettings) :
                new ObjectParameter("InputSettings", typeof(string));
    
            var outputSettingsParameter = outputSettings != null ?
                new ObjectParameter("OutputSettings", outputSettings) :
                new ObjectParameter("OutputSettings", typeof(string));
    
            var normalizeFlagParameter = normalizeFlag.HasValue ?
                new ObjectParameter("NormalizeFlag", normalizeFlag) :
                new ObjectParameter("NormalizeFlag", typeof(bool));
    
            var validationRuleParameter = validationRule != null ?
                new ObjectParameter("ValidationRule", validationRule) :
                new ObjectParameter("ValidationRule", typeof(string));
    
            var validationMessageParameter = validationMessage != null ?
                new ObjectParameter("ValidationMessage", validationMessage) :
                new ObjectParameter("ValidationMessage", typeof(string));
    
            var editStyleParameter = editStyle != null ?
                new ObjectParameter("EditStyle", editStyle) :
                new ObjectParameter("EditStyle", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_UpdateField", userDefinedFieldIdParameter, fieldTitleParameter, helpTextParameter, requiredParameter, fieldTypeParameter, defaultParameter, visibleParameter, showOnEditParameter, searchableParameter, privateParameter, multipleValuesParameter, inputSettingsParameter, outputSettingsParameter, normalizeFlagParameter, validationRuleParameter, validationMessageParameter, editStyleParameter);
        }
    
        public virtual int UserDefinedTable_UpdateFieldSetting(Nullable<int> fieldId, string settingName, string settingValue)
        {
            var fieldIdParameter = fieldId.HasValue ?
                new ObjectParameter("fieldId", fieldId) :
                new ObjectParameter("fieldId", typeof(int));
    
            var settingNameParameter = settingName != null ?
                new ObjectParameter("SettingName", settingName) :
                new ObjectParameter("SettingName", typeof(string));
    
            var settingValueParameter = settingValue != null ?
                new ObjectParameter("SettingValue", settingValue) :
                new ObjectParameter("SettingValue", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserDefinedTable_UpdateFieldSetting", fieldIdParameter, settingNameParameter, settingValueParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VerifyPortal(Nullable<int> portalID)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VerifyPortal", portalIDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> VerifyPortalTab(Nullable<int> portalID, Nullable<int> tabId)
        {
            var portalIDParameter = portalID.HasValue ?
                new ObjectParameter("PortalID", portalID) :
                new ObjectParameter("PortalID", typeof(int));
    
            var tabIdParameter = tabId.HasValue ?
                new ObjectParameter("TabId", tabId) :
                new ObjectParameter("TabId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("VerifyPortalTab", portalIDParameter, tabIdParameter);
        }
    }
}
